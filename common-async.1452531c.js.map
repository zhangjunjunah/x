{"version":3,"sources":["components/suggestion/demo/block.tsx?dumi-raw","components/bubble/demo/variant.tsx?dumi-raw","components/attachments/style/fileCard.ts",".dumi/theme/builtins/InstallDependencies/yarn.tsx","BUG_VERSIONS.json",".dumi/hooks/useFetch/cache.ts","components/sender/style/index.ts","components/version/version.ts",".dumi/pages/index/components/CompIntroduction/index.tsx","components/bubble/demo/bubble-custom.tsx?dumi-raw","virtual:external_mapbox-gl","components/thought-chain/Item.tsx","components/style/motion.ts","components/conversations/style/index.ts",".dumi/theme/common/Link.tsx",".dumi/pages/index/components/SceneIntroduction/Independent.tsx","components/bubble/index.tsx","components/conversations/GroupTitle.tsx","components/sender/demo/basic.tsx?dumi-raw","components/attachments/style/index.ts","components/bubble/demo/_semantic.tsx?dumi-raw","components/suggestion/style/index.ts",".dumi/pages/index/components/SiteContext.ts","components/sender/components/SendButton.tsx","components/conversations/index.tsx","components/use-x-chat/demo/suggestions.tsx?dumi-raw","components/bubble/demo/avatar-and-placement.tsx?dumi-raw",".dumi/pages/index/components/SceneIntroduction/index.tsx","components/bubble/hooks/useListData.ts","components/prompts/demo/disabled.tsx?dumi-raw","components/bubble/demo/loading.tsx?dumi-raw","components/x-request/x-fetch.ts","components/_util/motion.ts","components/use-x-chat/index.ts","components/conversations/demo/group.tsx?dumi-raw","components/welcome/demo/background.tsx?dumi-raw","components/welcome/demo/variant.tsx?dumi-raw","components/bubble/demo/shape.tsx?dumi-raw","components/prompts/demo/nest.tsx?dumi-raw",".dumi/theme/builtins/ComponentOverview/index.tsx","components/attachments/SilentUploader.tsx",".dumi/hooks/useFetch/index.ts","components/bubble/loading.tsx","components/sender/demo/submitType.tsx?dumi-raw","components/bubble/style/index.ts",".dumi/theme/builtins/InstallDependencies/npm.tsx","components/sender/components/SpeechButton/index.tsx","components/x-provider/demo/use.tsx?dumi-raw","components/prompts/demo/flex-vertical.tsx?dumi-raw",".dumi/theme/builtins/ColorChunk/index.tsx","components/attachments/demo/with-sender.tsx?dumi-raw","components/attachments/FileList/VideoIcon.tsx","components/suggestion/demo/trigger.tsx?dumi-raw","components/thought-chain/index.tsx","components/_util/hooks/use-x-component-config.ts","components/sender/demo/speech-custom.tsx?dumi-raw",".dumi/theme/builtins/ImagePreview/index.tsx","components/conversations/demo/infinite-load.tsx?dumi-raw","components/thought-chain/demo/nested.tsx?dumi-raw","components/conversations/Item.tsx",".dumi/pages/index/components/SceneIntroduction/Assistant.tsx","components/use-x-chat/demo/stream.tsx?dumi-raw","components/sender/demo/speech.tsx?dumi-raw","components/attachments/demo/basic.tsx?dumi-raw","components/attachments/util.ts","components/thought-chain/demo/status.tsx?dumi-raw","components/prompts/style/index.ts","components/theme/genStyleUtils.ts","virtual:external_maplibre-gl","components/use-x-chat/demo/basic.tsx?dumi-raw","components/thought-chain/style/index.ts","components/attachments/index.tsx","components/thought-chain/demo/collapsible.tsx?dumi-raw",".dumi/pages/index/components/CompIntroduction/Customization.tsx","components/use-x-agent/demo/custom.tsx?dumi-raw",".dumi/theme/common/ComponentChangelog/index.tsx","components/conversations/demo/with-menu.tsx?dumi-raw","components/prompts/demo/basic.tsx?dumi-raw","components/bubble/hooks/useDisplayData.ts","components/sender/components/LoadingButton.tsx","components/bubble/hooks/useTypedEffect.ts",".dumi/theme/slots/Footer/AdditionalInfo.tsx","components/attachments/FileList/index.tsx","components/welcome/index.tsx","components/prompts/demo/_semantic.tsx?dumi-raw","components/bubble/demo/basic.tsx?dumi-raw","components/sender/demo/header-fixed.tsx?dumi-raw","components/welcome/style/index.ts","components/attachments/demo/placeholder.tsx?dumi-raw","components/attachments/demo/overflow.tsx?dumi-raw","components/suggestion/useActive.ts","components/bubble/hooks/useTypingConfig.ts","components/thought-chain/hooks/useCollapsible.ts","components/bubble/style/list.ts","components/sender/useSpeech.ts","components/bubble/demo/header-and-footer.tsx?dumi-raw",".dumi/hooks/use.ts",".dumi/pages/index/components/SceneIntroduction/Nest.tsx","components/sender/StopLoading.tsx","components/prompts/demo/flex-wrap.tsx?dumi-raw","components/thought-chain/demo/basic.tsx?dumi-raw","components/use-x-chat/demo/stream-cancel.tsx?dumi-raw","components/prompts/index.tsx",".dumi/pages/index/components/MainBanner.tsx",".dumi/pages/index/components/DesignFramework.tsx","components/use-x-agent/demo/preset.tsx?dumi-raw","components/theme/useToken.ts","components/attachments/DropArea.tsx","components/suggestion/demo/basic.tsx?dumi-raw","components/_util/hooks/use-proxy-imperative-handle.ts",".dumi/theme/common/ComponentChangelog/ComponentChangelog.tsx","components/attachments/context.tsx","components/conversations/demo/group-sort.tsx?dumi-raw",".dumi/theme/builtins/ComponentTokenTable/index.tsx",".dumi/theme/builtins/InstallDependencies/pnpm.tsx",".dumi/components/SemanticPreview.tsx?dumi-raw",".dumi/pages/index/components/DesignBanner.tsx",".dumi/theme/builtins/TokenTable/index.tsx","components/sender/SenderHeader.tsx",".dumi/theme/builtins/InstallDependencies/index.tsx","components/bubble/style/content.ts","components/attachments/FileList/FileListCard.tsx","components/x-stream/demo/custom-protocol.tsx?dumi-raw","components/x-request/demo/basic.tsx?dumi-raw","components/sender/demo/header.tsx?dumi-raw","components/thought-chain/demo/size.tsx?dumi-raw","components/bubble/demo/typing.tsx?dumi-raw","components/prompts/demo/flex-wrap-fixed.tsx?dumi-raw","components/x-request/index.ts","components/welcome/demo/_semantic.tsx?dumi-raw","components/bubble/demo/markdown.tsx?dumi-raw",".dumi/hooks/useLottie.ts","components/welcome/demo/basic.tsx?dumi-raw",".dumi/theme/builtins/InstallDependencies/bun.tsx","components/sender/demo/focus.tsx?dumi-raw","components/bubble/demo/list.tsx?dumi-raw","components/attachments/FileList/Progress.tsx","components/sender/components/ActionButton.tsx","components/x-stream/index.ts","docs/playground/independent.tsx?dumi-raw","components/sender/demo/paste-image.tsx?dumi-raw","components/use-x-chat/useSyncState.ts","components/suggestion/index.tsx","components/attachments/demo/_semantic.tsx?dumi-raw","components/sender/components/ClearButton.tsx","components/sender/demo/_semantic.tsx?dumi-raw",".dumi/hooks/useLayoutState.ts","components/x-provider/hooks/use-x-provider-context.ts","components/attachments/FileList/AudioIcon.tsx","components/attachments/demo/files.tsx?dumi-raw","components/conversations/demo/basic.tsx?dumi-raw","components/conversations/hooks/useGroupable.ts",".dumi/components/SemanticPreview.tsx","components/conversations/demo/controlled-mode.tsx?dumi-raw","components/bubble/demo/debug.tsx?dumi-raw","components/bubble/BubbleList.tsx",".dumi/theme/builtins/LocaleLink/index.tsx","components/x-provider/index.tsx","components/sender/demo/actions.tsx?dumi-raw",".dumi/hooks/useLocale.ts?dumi-raw","components/sender/demo/send-style.tsx?dumi-raw","components/sender/style/header.ts","components/thought-chain/demo/_semantic.tsx?dumi-raw","components/bubble/demo/list-custom.tsx?dumi-raw","components/x-request/demo/custom-transformer.tsx?dumi-raw",".dumi/theme/builtins/ComponentMeta/index.tsx","components/sender/components/SpeechButton/RecordingIcon.tsx",".dumi/hooks/useMenu.tsx","components/index.ts","components/attachments/PlaceholderUploader.tsx",".dumi/theme/builtins/DemoWrapper/index.tsx","components/use-x-agent/index.ts","components/bubble/Bubble.tsx","components/x-provider/context.ts",".dumi/pages/index/components/DesignGuide.tsx","components/sender/index.tsx","components/bubble/demo/gpt-vis.tsx?dumi-raw","components/thought-chain/demo/customization.tsx?dumi-raw","components/version/index.ts","components/x-stream/demo/default-protocol.tsx?dumi-raw"],"sourcesContent":["\n  import '/home/runner/work/x/x/components/suggestion/demo/block.tsx?watch=parent';\n  export default \"import { Sender, Suggestion } from '@ant-design/x';\\nimport type { GetProp } from 'antd';\\nimport React from 'react';\\n\\ntype SuggestionItems = Exclude<GetProp<typeof Suggestion, 'items'>, () => void>;\\n\\nconst suggestions: SuggestionItems = [\\n  { label: 'Write a report', value: 'report' },\\n  { label: 'Draw a picture', value: 'draw' },\\n  {\\n    label: 'Check some knowledge',\\n    value: 'knowledge',\\n    extra: 'Extra Info',\\n  },\\n];\\n\\nconst Demo: React.FC = () => {\\n  const [value, setValue] = React.useState('');\\n\\n  return (\\n    <Suggestion\\n      items={suggestions}\\n      onSelect={(itemVal) => {\\n        setValue(`[${itemVal}]:`);\\n      }}\\n      block\\n    >\\n      {({ onTrigger, onKeyDown }) => {\\n        return (\\n          <Sender\\n            value={value}\\n            onChange={(nextVal) => {\\n              if (nextVal === '/') {\\n                onTrigger();\\n              } else if (!nextVal) {\\n                onTrigger(false);\\n              }\\n              setValue(nextVal);\\n            }}\\n            onKeyDown={onKeyDown}\\n            placeholder=\\\"输入 / 获取建议\\\"\\n          />\\n        );\\n      }}\\n    </Suggestion>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/variant.tsx?watch=parent';\n  export default \"import { CoffeeOutlined, FireOutlined, SmileOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Bubble, Prompts, PromptsProps } from '@ant-design/x';\\nimport { Flex } from 'antd';\\nimport React from 'react';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '6',\\n    icon: <CoffeeOutlined style={{ color: '#964B00' }} />,\\n    description: 'How to rest effectively after long hours of work?',\\n  },\\n  {\\n    key: '7',\\n    icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\\n    description: 'What are the secrets to maintaining a positive mindset?',\\n  },\\n  {\\n    key: '8',\\n    icon: <FireOutlined style={{ color: '#FF4D4F' }} />,\\n    description: 'How to stay calm under immense pressure?',\\n  },\\n];\\n\\nconst App = () => (\\n  <Flex vertical gap=\\\"middle\\\">\\n    <Bubble variant=\\\"filled\\\" avatar={{ icon: <UserOutlined /> }} content=\\\"variant: filled\\\" />\\n    <Bubble variant=\\\"outlined\\\" avatar={{ icon: <UserOutlined /> }} content=\\\"variant: outlined\\\" />\\n    <Bubble variant=\\\"shadow\\\" avatar={{ icon: <UserOutlined /> }} content=\\\"variant: shadow\\\" />\\n    <Bubble\\n      variant=\\\"borderless\\\"\\n      avatar={{ icon: <UserOutlined /> }}\\n      content={<Prompts title=\\\"variant: borderless to customize\\\" items={items} vertical />}\\n    />\\n  </Flex>\\n);\\n\\nexport default App;\\n\";;\n  ","import type { AttachmentsToken } from '.';\nimport type { GenerateStyle } from '../../theme/cssinjs-utils';\n\nconst genFileCardStyle: GenerateStyle<AttachmentsToken> = (token) => {\n  const { componentCls, calc } = token;\n\n  const cardCls = `${componentCls}-list-card`;\n\n  const cardHeight = calc(token.fontSize)\n    .mul(token.lineHeight)\n    .mul(2)\n    .add(token.paddingSM)\n    .add(token.paddingSM)\n    .equal();\n\n  return {\n    [cardCls]: {\n      borderRadius: token.borderRadius,\n      position: 'relative',\n      background: token.colorFillContent,\n      borderWidth: token.lineWidth,\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      flex: 'none',\n\n      // =============================== Desc ================================\n      [`${cardCls}-name,${cardCls}-desc`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: '100%',\n      },\n\n      [`${cardCls}-ellipsis-prefix`]: {\n        flex: '0 1 auto',\n        minWidth: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n\n      [`${cardCls}-ellipsis-suffix`]: {\n        flex: 'none',\n      },\n\n      // ============================= Overview ==============================\n      '&-type-overview': {\n        padding: calc(token.paddingSM).sub(token.lineWidth).equal(),\n        paddingInlineStart: calc(token.padding).add(token.lineWidth).equal(),\n        display: 'flex',\n        flexWrap: 'nowrap',\n        gap: token.paddingXS,\n        alignItems: 'flex-start',\n        width: 236,\n\n        // Icon\n        [`${cardCls}-icon`]: {\n          fontSize: calc(token.fontSizeLG).mul(2).equal(),\n          lineHeight: 1,\n          paddingTop: calc(token.paddingXXS).mul(1.5).equal(),\n          flex: 'none',\n        },\n\n        // Content\n        [`${cardCls}-content`]: {\n          flex: 'auto',\n          minWidth: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'stretch',\n        },\n\n        [`${cardCls}-desc`]: {\n          color: token.colorTextTertiary,\n        },\n      },\n\n      // ============================== Preview ==============================\n      '&-type-preview': {\n        width: cardHeight,\n        height: cardHeight,\n        lineHeight: 1,\n\n        [`&:not(${cardCls}-status-error)`]: {\n          border: 0,\n        },\n\n        // Img\n        img: {\n          width: '100%',\n          height: '100%',\n          verticalAlign: 'top',\n          objectFit: 'cover',\n          borderRadius: 'inherit',\n        },\n\n        // Mask\n        [`${cardCls}-img-mask`]: {\n          position: 'absolute',\n          inset: 0,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          background: `rgba(0, 0, 0, ${token.opacityLoading})`,\n          borderRadius: 'inherit',\n        },\n\n        // Error\n        [`&${cardCls}-status-error`]: {\n          [`img, ${cardCls}-img-mask`]: {\n            borderRadius: calc(token.borderRadius).sub(token.lineWidth).equal(),\n          },\n\n          [`${cardCls}-desc`]: {\n            paddingInline: token.paddingXXS,\n          },\n        },\n\n        // Progress\n        [`${cardCls}-progress`]: {},\n      },\n\n      // ============================ Remove Icon ============================\n      [`${cardCls}-remove`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        border: 0,\n        padding: token.paddingXXS,\n        background: 'transparent',\n        lineHeight: 1,\n        transform: 'translate(50%, -50%)',\n        fontSize: token.fontSize,\n        cursor: 'pointer',\n        opacity: token.opacityLoading,\n        display: 'none',\n\n        '&:dir(rtl)': {\n          transform: 'translate(-50%, -50%)',\n        },\n\n        '&:hover': {\n          opacity: 1,\n        },\n\n        '&:active': {\n          opacity: token.opacityLoading,\n        },\n      },\n\n      [`&:hover ${cardCls}-remove`]: {\n        display: 'block',\n      },\n\n      // ============================== Status ===============================\n      '&-status-error': {\n        borderColor: token.colorError,\n\n        [`${cardCls}-desc`]: {\n          color: token.colorError,\n        },\n      },\n\n      // ============================== Motion ===============================\n      '&-motion': {\n        transition: ['opacity', 'width', 'margin', 'padding']\n          .map((prop) => `${prop} ${token.motionDurationSlow}`)\n          .join(','),\n\n        '&-appear-start': {\n          width: 0,\n          transition: 'none',\n        },\n\n        '&-leave-active': {\n          opacity: 0,\n          width: 0,\n          paddingInline: 0,\n          borderInlineWidth: 0,\n          marginInlineEnd: calc(token.paddingSM).mul(-1).equal(),\n        },\n      },\n    },\n  };\n};\n\nexport default genFileCardStyle;\n","import { createStyles, css } from 'antd-style';\nimport classNames from 'classnames';\nimport React from 'react';\n\ninterface IconProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst useStyle = createStyles(() => ({\n  iconWrap: css`\n    display: inline-flex;\n    align-items: center;\n    line-height: 0;\n    text-align: center;\n    vertical-align: -0.125em;\n  `,\n}));\n\nconst YarnIcon: React.FC<IconProps> = (props) => {\n  const { className, style } = props;\n  const { styles } = useStyle();\n  return (\n    <span className={classNames(styles.iconWrap, className)} style={style}>\n      <svg\n        aria-hidden=\"true\"\n        fill=\"#2C8EBB\"\n        focusable=\"false\"\n        height=\"1em\"\n        stroke=\"#2C8EBB\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 496 512\"\n        width=\"1em\"\n      >\n        <title>yarn icon</title>\n        <path d=\"M393.9 345.2c-39 9.3-48.4 32.1-104 47.4 0 0-2.7 4-10.4 5.8-13.4 3.3-63.9 6-68.5 6.1-12.4.1-19.9-3.2-22-8.2-6.4-15.3 9.2-22 9.2-22-8.1-5-9-9.9-9.8-8.1-2.4 5.8-3.6 20.1-10.1 26.5-8.8 8.9-25.5 5.9-35.3.8-10.8-5.7.8-19.2.8-19.2s-5.8 3.4-10.5-3.6c-6-9.3-17.1-37.3 11.5-62-1.3-10.1-4.6-53.7 40.6-85.6 0 0-20.6-22.8-12.9-43.3 5-13.4 7-13.3 8.6-13.9 5.7-2.2 11.3-4.6 15.4-9.1 20.6-22.2 46.8-18 46.8-18s12.4-37.8 23.9-30.4c3.5 2.3 16.3 30.6 16.3 30.6s13.6-7.9 15.1-5c8.2 16 9.2 46.5 5.6 65.1-6.1 30.6-21.4 47.1-27.6 57.5-1.4 2.4 16.5 10 27.8 41.3 10.4 28.6 1.1 52.7 2.8 55.3.8 1.4 13.7.8 36.4-13.2 12.8-7.9 28.1-16.9 45.4-17 16.7-.5 17.6 19.2 4.9 22.2zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-79.3 75.2c-1.7-13.6-13.2-23-28-22.8-22 .3-40.5 11.7-52.8 19.2-4.8 3-8.9 5.2-12.4 6.8 3.1-44.5-22.5-73.1-28.7-79.4 7.8-11.3 18.4-27.8 23.4-53.2 4.3-21.7 3-55.5-6.9-74.5-1.6-3.1-7.4-11.2-21-7.4-9.7-20-13-22.1-15.6-23.8-1.1-.7-23.6-16.4-41.4 28-12.2.9-31.3 5.3-47.5 22.8-2 2.2-5.9 3.8-10.1 5.4h.1c-8.4 3-12.3 9.9-16.9 22.3-6.5 17.4.2 34.6 6.8 45.7-17.8 15.9-37 39.8-35.7 82.5-34 36-11.8 73-5.6 79.6-1.6 11.1 3.7 19.4 12 23.8 12.6 6.7 30.3 9.6 43.9 2.8 4.9 5.2 13.8 10.1 30 10.1 6.8 0 58-2.9 72.6-6.5 6.8-1.6 11.5-4.5 14.6-7.1 9.8-3.1 36.8-12.3 62.2-28.7 18-11.7 24.2-14.2 37.6-17.4 12.9-3.2 21-15.1 19.4-28.2z\" />\n      </svg>\n    </span>\n  );\n};\n\nexport default YarnIcon;\n","module.exports = {}\n","export default class FetchCache {\n  private cache: Map<string, PromiseLike<any>> = new Map();\n\n  get(key: string) {\n    return this.cache.get(key);\n  }\n\n  set(key: string, value: PromiseLike<any>) {\n    this.cache.set(key, value);\n  }\n\n  promise<T>(key: string, promiseFn: () => PromiseLike<T>): PromiseLike<T> {\n    const cached = this.get(key);\n    if (cached) {\n      return cached;\n    }\n    const promise = promiseFn();\n    this.set(key, promise);\n    return promise;\n  }\n}\n","import { unit } from '@ant-design/cssinjs';\nimport { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\nimport genSenderHeaderStyle from './header';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface SenderToken extends FullToken<'Sender'> {\n  SenderContentMaxWidth: number | string;\n}\n\nconst genSenderStyle: GenerateStyle<SenderToken> = (token) => {\n  const { componentCls, padding, paddingSM, paddingXS, lineWidth, lineWidthBold, calc } = token;\n\n  return {\n    [componentCls]: {\n      position: 'relative',\n      width: '100%',\n\n      boxSizing: 'border-box',\n      boxShadow: `${token.boxShadowTertiary}`,\n      transition: `background ${token.motionDurationSlow}`,\n\n      // Border\n      borderRadius: {\n        _skip_check_: true,\n        value: calc(token.borderRadius).mul(2).equal(),\n      },\n      borderColor: token.colorBorder,\n      borderWidth: 0,\n      borderStyle: 'solid',\n\n      // Border\n      '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        inset: 0,\n        pointerEvents: 'none',\n        transition: `border-color ${token.motionDurationSlow}`,\n\n        borderRadius: {\n          _skip_check_: true,\n          value: 'inherit',\n        },\n        borderStyle: 'inherit',\n        borderColor: 'inherit',\n        borderWidth: lineWidth,\n      },\n\n      // Focus\n      '&:focus-within': {\n        boxShadow: `${token.boxShadowSecondary}`,\n        borderColor: token.colorPrimary,\n\n        '&:after': {\n          borderWidth: lineWidthBold,\n        },\n      },\n\n      '&-disabled': {\n        background: token.colorBgContainerDisabled,\n      },\n\n      // ============================== RTL ==============================\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl',\n      },\n\n      // ============================ Content ============================\n      [`${componentCls}-content`]: {\n        display: 'flex',\n        gap: paddingXS,\n        width: '100%',\n\n        paddingBlock: paddingSM,\n        paddingInlineStart: padding,\n        paddingInlineEnd: paddingSM,\n        boxSizing: 'border-box',\n        alignItems: 'flex-end',\n      },\n\n      // ============================ Prefix =============================\n      [`${componentCls}-prefix`]: {\n        flex: 'none',\n      },\n\n      // ============================= Input =============================\n      [`${componentCls}-input`]: {\n        padding: 0,\n        borderRadius: 0,\n        flex: 'auto',\n        alignSelf: 'center',\n        minHeight: 'auto',\n      },\n\n      // ============================ Actions ============================\n      [`${componentCls}-actions-list`]: {\n        flex: 'none',\n        display: 'flex',\n\n        '&-presets': {\n          gap: token.paddingXS,\n        },\n      },\n\n      [`${componentCls}-actions-btn`]: {\n        '&-disabled': {\n          opacity: 0.45,\n        },\n\n        '&-loading-button': {\n          padding: 0,\n          border: 0,\n        },\n\n        '&-loading-icon': {\n          height: token.controlHeight,\n          width: token.controlHeight,\n          verticalAlign: 'top',\n        },\n        '&-recording-icon': {\n          height: '1.2em',\n          width: '1.2em',\n          verticalAlign: 'top',\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Sender'> = () => ({});\n\nexport default genStyleHooks<'Sender'>(\n  'Sender',\n  (token) => {\n    const { paddingXS, calc } = token;\n    const SenderToken = mergeToken<SenderToken>(token, {\n      SenderContentMaxWidth: `calc(100% - ${unit(calc(paddingXS).add(32).equal())})`,\n    });\n    return [genSenderStyle(SenderToken), genSenderHeaderStyle(SenderToken)];\n  },\n  prepareComponentToken,\n);\n","export default '1.0.6';","import { createStyles } from 'antd-style';\nimport React from 'react';\n\nimport useLocale from '../../../../hooks/useLocale';\nimport { DESIGN_STAGE_COLOR } from '../../common/CustomizationProvider';\nimport Introduction, { type IntroductionItem } from '../../common/Introduction';\nimport SiteContext from '../SiteContext';\nimport { CustomizationBubble, CustomizationPrompts, CustomizationWelcome } from './Customization';\n\nconst locales = {\n  cn: {\n    title: '组件丰富 , 选用自如',\n    desc: 'Ant Design X 全新 AI 组件 , 大量实用组件满足你的需求 , 灵活定制与拓展',\n\n    welcome_title: '欢迎组件',\n    welcome_desc: '开箱即用、易于配置、极致体验的通用图表库',\n    welcome_tag: '唤醒',\n\n    prompts_title: '用户推荐',\n    prompts_desc: '让首次接触AI产品的用户快速理解AI能做什么',\n    prompts_tag: '唤醒',\n\n    suggestion_title: '快捷命令',\n    suggestion_desc: '开箱即用、易于配置、极致体验的通用图表库',\n    suggestion_tag: '表达',\n\n    bubble_title: '进度加载',\n    bubble_desc: '开箱即用、易于配置、极致体验的通用图表库',\n    bubble_tag: '确认',\n\n    actions_title: '结果操作',\n    actions_desc: '开箱即用、易于配置、极致体验的通用图表库',\n    actions_tag: '反馈',\n\n    conversations_title: '管理对话',\n    conversations_desc: '开箱即用、易于配置、极致体验的通用图表库',\n    conversations_tag: '通用',\n  },\n  en: {\n    title: 'Components Rich, Easy to Use',\n    desc: 'Ant Design X’s new AI components offer a wide range of practical options to meet your needs, with flexible customization and expansion',\n\n    welcome_title: 'Welcome',\n    welcome_desc: 'Ready to use, easy to set up, with great user experience',\n    welcome_tag: 'Activate',\n\n    prompts_title: 'User Guide',\n    prompts_desc: 'Helps new users quickly understand AI capabilities',\n    prompts_tag: 'Activate',\n\n    suggestion_title: 'Quick Commands',\n    suggestion_desc: 'Ready to use, easy to set up, with great user experience',\n    suggestion_tag: 'Execute',\n\n    bubble_title: 'Loading Progress',\n    bubble_desc: 'Ready to use, easy to set up, with great user experience',\n    bubble_tag: 'Confirm',\n\n    actions_title: 'Results',\n    actions_desc: 'Ready to use, easy to set up, with great user experience',\n    actions_tag: 'Feedback',\n\n    conversations_title: 'Manage Chats',\n    conversations_desc: 'Ready to use, easy to set up, with great user experience',\n    conversations_tag: 'General',\n  },\n};\n\nconst useStyle = createStyles(({ css }) => {\n  return {\n    header: css`\n      height: 280px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n  };\n});\n\nconst CompIntroduction: React.FC = () => {\n  const { styles } = useStyle();\n  const [locale, lang] = useLocale(locales);\n  const isZhCN = lang === 'cn';\n  const { isMobile } = React.useContext(SiteContext);\n\n  const items: IntroductionItem[] = [\n    {\n      title: locale.welcome_title,\n      desc: locale.welcome_desc,\n      tag: locale.welcome_tag,\n      startColor: DESIGN_STAGE_COLOR.AWAKE.START,\n      endColor: DESIGN_STAGE_COLOR.AWAKE.END,\n      header: (\n        <div className={styles.header}>\n          <CustomizationWelcome />\n        </div>\n      ),\n    },\n    {\n      title: locale.prompts_title,\n      desc: locale.prompts_desc,\n      tag: locale.prompts_tag,\n      startColor: DESIGN_STAGE_COLOR.AWAKE.START,\n      endColor: DESIGN_STAGE_COLOR.AWAKE.END,\n      header: (\n        <div className={styles.header}>\n          <CustomizationPrompts />\n        </div>\n      ),\n    },\n    {\n      title: locale.suggestion_title,\n      desc: locale.suggestion_desc,\n      tag: locale.suggestion_tag,\n      startColor: DESIGN_STAGE_COLOR.EXPRESS.START,\n      endColor: DESIGN_STAGE_COLOR.EXPRESS.END,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 290 }}\n            src={\n              isZhCN\n                ? 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*-c6EQ7U4-4oAAAAAAAAAAAAADsR-AQ/fmt.avif'\n                : 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*SUJFTbqovJsAAAAAAAAAAAAADsR-AQ/fmt.avif'\n            }\n          />\n        </div>\n      ),\n    },\n    {\n      title: locale.bubble_title,\n      desc: locale.bubble_desc,\n      tag: locale.bubble_tag,\n      startColor: DESIGN_STAGE_COLOR.CONFIRM.START,\n      endColor: DESIGN_STAGE_COLOR.CONFIRM.END,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 173 }}\n            src={\n              isZhCN\n                ? 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*WxlPTYGnviYAAAAAAAAAAAAADsR-AQ/fmt.avif'\n                : 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*EDPdR54UBncAAAAAAAAAAAAADsR-AQ/fmt.avif'\n            }\n          />\n        </div>\n      ),\n    },\n    {\n      title: locale.actions_title,\n      desc: locale.actions_desc,\n      tag: locale.actions_tag,\n      startColor: DESIGN_STAGE_COLOR.FEEDBACK.START,\n      endColor: DESIGN_STAGE_COLOR.FEEDBACK.END,\n      header: (\n        <div className={styles.header}>\n          <CustomizationBubble />\n        </div>\n      ),\n    },\n    {\n      title: locale.conversations_title,\n      desc: locale.conversations_desc,\n      tag: locale.conversations_tag,\n      startColor: DESIGN_STAGE_COLOR.COMMON.START,\n      endColor: DESIGN_STAGE_COLOR.COMMON.END,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 290 }}\n            src={\n              isZhCN\n                ? 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*7nVeT7Qg-QoAAAAAAAAAAAAADsR-AQ/fmt.avif'\n                : 'https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*7nVeT7Qg-QoAAAAAAAAAAAAADsR-AQ/fmt.avif'\n            }\n          />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <Introduction title={locale.title} desc={locale.desc} items={items} column={isMobile ? 1 : 3} />\n  );\n};\n\nexport default CompIntroduction;\n","\n  import '/home/runner/work/x/x/components/bubble/demo/bubble-custom.tsx?watch=parent';\n  export default \"import { FrownOutlined, SmileOutlined, SyncOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport { Button, Flex, Space, Spin } from 'antd';\\nimport type { GetProp, GetRef } from 'antd';\\nimport React from 'react';\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n    typing: { step: 5, interval: 20 },\\n    style: {\\n      maxWidth: 600,\\n      marginInlineEnd: 44,\\n    },\\n    styles: {\\n      footer: {\\n        width: '100%',\\n      },\\n    },\\n    loadingRender: () => (\\n      <Space>\\n        <Spin size=\\\"small\\\" />\\n        Custom loading...\\n      </Space>\\n    ),\\n  },\\n  user: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n};\\n\\nconst App = () => {\\n  const listRef = React.useRef<GetRef<typeof Bubble.List>>(null);\\n\\n  return (\\n    <Bubble.List\\n      ref={listRef}\\n      style={{ maxHeight: 300 }}\\n      roles={roles}\\n      items={[\\n        {\\n          key: 'welcome',\\n          role: 'ai',\\n          content: 'Mock welcome content. '.repeat(10),\\n          footer: (\\n            <Flex>\\n              <Button\\n                size=\\\"small\\\"\\n                type=\\\"text\\\"\\n                icon={<SyncOutlined />}\\n                style={{ marginInlineEnd: 'auto' }}\\n              />\\n              <Button size=\\\"small\\\" type=\\\"text\\\" icon={<SmileOutlined />} />\\n              <Button size=\\\"small\\\" type=\\\"text\\\" icon={<FrownOutlined />} />\\n            </Flex>\\n          ),\\n        },\\n        {\\n          key: 'ask',\\n          role: 'user',\\n          content: 'Mock user content.',\\n        },\\n        {\\n          key: 'ai',\\n          role: 'ai',\\n          loading: true,\\n        },\\n      ]}\\n    />\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","module.exports = (typeof globalThis !== 'undefined' ? globalThis : self)['mapboxgl'];","import React from 'react';\nimport classnames from 'classnames';\nimport { Avatar, Typography } from 'antd';\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport CSSMotion from 'rc-motion';\nimport pickAttrs from 'rc-util/lib/pickAttrs';\n\nimport type { ConfigProviderProps, GetProp } from 'antd';\nimport type { CSSMotionProps } from 'rc-motion';\nimport type { ThoughtChainProps } from './';\n\nexport enum THOUGHT_CHAIN_ITEM_STATUS {\n  /**\n   * @desc 等待状态\n   */\n  PENDING = 'pending',\n  /**\n   * @desc 成功状态\n   */\n  SUCCESS = 'success',\n  /**\n   * @desc 错误状态\n   */\n  ERROR = 'error',\n}\n\nexport interface ThoughtChainItem {\n  /**\n   * @desc 思维节点唯一标识符\n   * @descEN Unique identifier\n   */\n  key?: string;\n\n  /**\n   * @desc 思维节点图标\n   * @descEN Thought chain item icon\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * @desc 思维节点标题\n   * @descEN Thought chain item title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * @desc 思维节点描述\n   * @descEN Thought chain item description\n   */\n  description?: React.ReactNode;\n\n  /**\n   * @desc 思维节点额外内容\n   * @descEN Thought chain item extra content\n   */\n  extra?: React.ReactNode;\n\n  /**\n   * @desc 思维节点内容\n   * @descEN Thought chain item content\n   */\n  content?: React.ReactNode;\n\n  /**\n   * @desc 思维节点脚注\n   * @descEN Thought chain item footer\n   */\n  footer?: React.ReactNode;\n\n  /**\n   * @desc 思维节点状态\n   * @descEN Thought chain item status\n   */\n  status?: `${THOUGHT_CHAIN_ITEM_STATUS}`;\n}\n\nexport const ThoughtChainNodeContext = React.createContext<{\n  prefixCls?: string;\n  collapseMotion?: CSSMotionProps;\n  enableCollapse?: boolean;\n  expandedKeys?: string[];\n  direction?: GetProp<ConfigProviderProps, 'direction'>;\n  styles?: ThoughtChainProps['styles'];\n  classNames?: ThoughtChainProps['classNames'];\n}>(null!);\n\ninterface ThoughtChainNodeProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onClick'> {\n  info?: ThoughtChainItem;\n  nextStatus?: ThoughtChainItem['status'];\n  onClick?: (key: string) => void;\n}\n\nconst ThoughtChainNode: React.FC<ThoughtChainNodeProps> = (props) => {\n  const { info = {}, nextStatus, onClick, ...restProps } = props;\n\n  const domProps = pickAttrs(restProps, {\n    attr: true,\n    aria: true,\n    data: true,\n  });\n\n  // ================= ThoughtChainNodeContext ====================\n  const {\n    prefixCls,\n    collapseMotion,\n    enableCollapse,\n    expandedKeys,\n    direction,\n    classNames = {},\n    styles = {},\n  } = React.useContext(ThoughtChainNodeContext);\n\n  // ============================ Info ============================\n  const id = React.useId();\n\n  const {\n    key = id,\n\n    icon,\n    title,\n    extra,\n    content,\n    footer,\n    status,\n    description,\n  } = info;\n\n  // ============================ Style ============================\n  const itemCls = `${prefixCls}-item`;\n\n  // ============================ Event ============================\n  const onThoughtChainNodeClick = () => onClick?.(key);\n\n  // ============================ Content Open ============================\n  const contentOpen = expandedKeys?.includes(key);\n\n  // ============================ Render ============================\n  return (\n    <div\n      {...domProps}\n      className={classnames(\n        itemCls,\n        {\n          [`${itemCls}-${status}${nextStatus ? `-${nextStatus}` : ''}`]: status,\n        },\n        props.className,\n      )}\n      style={props.style}\n    >\n      {/* Header */}\n      <div\n        className={classnames(`${itemCls}-header`, classNames.itemHeader)}\n        style={styles.itemHeader}\n        onClick={onThoughtChainNodeClick}\n      >\n        {/* Avatar */}\n        <Avatar icon={icon} className={`${itemCls}-icon`} />\n        {/* Header */}\n        <div\n          className={classnames(`${itemCls}-header-box`, {\n            [`${itemCls}-collapsible`]: enableCollapse && content,\n          })}\n        >\n          {/* Title */}\n          <Typography.Text\n            strong\n            ellipsis={{\n              tooltip: { placement: direction === 'rtl' ? 'topRight' : 'topLeft', title },\n            }}\n            className={`${itemCls}-title`}\n          >\n            {enableCollapse &&\n              content &&\n              (direction === 'rtl' ? (\n                <LeftOutlined\n                  className={`${itemCls}-collapse-icon`}\n                  rotate={contentOpen ? -90 : 0}\n                />\n              ) : (\n                <RightOutlined\n                  className={`${itemCls}-collapse-icon`}\n                  rotate={contentOpen ? 90 : 0}\n                />\n              ))}\n            {title}\n          </Typography.Text>\n          {/* Description */}\n          {description && (\n            <Typography.Text\n              className={`${itemCls}-desc`}\n              ellipsis={{\n                tooltip: {\n                  placement: direction === 'rtl' ? 'topRight' : 'topLeft',\n                  title: description,\n                },\n              }}\n              type=\"secondary\"\n            >\n              {description}\n            </Typography.Text>\n          )}\n        </div>\n        {/* Extra */}\n        {extra && <div className={`${itemCls}-extra`}>{extra}</div>}\n      </div>\n      {/* Content */}\n      {content && (\n        <CSSMotion {...collapseMotion} visible={enableCollapse ? contentOpen : true}>\n          {({ className: motionClassName, style }, motionRef) => (\n            <div\n              className={classnames(`${itemCls}-content`, motionClassName)}\n              ref={motionRef}\n              style={style}\n            >\n              <div\n                className={classnames(`${itemCls}-content-box`, classNames.itemContent)}\n                style={styles.itemContent}\n              >\n                {content}\n              </div>\n            </div>\n          )}\n        </CSSMotion>\n      )}\n      {/* Footer */}\n      {footer && (\n        <div\n          className={classnames(`${itemCls}-footer`, classNames.itemFooter)}\n          style={styles.itemFooter}\n        >\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtChainNode;\n","export { genCollapseMotion } from 'antd/es/style/motion';\n","import { unit } from '@ant-design/cssinjs';\nimport { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface ConversationsToken extends FullToken<'Conversations'> {}\n\nconst genConversationsStyle: GenerateStyle<ConversationsToken> = (token) => {\n  const { componentCls } = token;\n\n  return {\n    [componentCls]: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: token.paddingXXS,\n      overflowY: 'auto',\n      padding: token.paddingSM,\n\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl',\n      },\n      // 会话列表\n      [`& ${componentCls}-list`]: {\n        display: 'flex',\n        gap: token.paddingXXS,\n        flexDirection: 'column',\n\n        [`& ${componentCls}-item`]: {\n          paddingInlineStart: token.paddingXL,\n        },\n        [`& ${componentCls}-label`]: {\n          color: token.colorTextDescription,\n        },\n      },\n      // 会话列表项\n      [`& ${componentCls}-item`]: {\n        display: 'flex',\n        height: token.controlHeightLG,\n        minHeight: token.controlHeightLG,\n        gap: token.paddingXS,\n        padding: `0 ${unit(token.paddingXS)}`,\n        alignItems: 'center',\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n        // 悬浮样式\n        '&:hover': {\n          backgroundColor: token.colorBgTextHover,\n        },\n        // 选中样式\n        '&-active': {\n          backgroundColor: token.colorBgTextHover,\n          [`& ${componentCls}-label, ${componentCls}-menu-icon`]: {\n            color: token.colorText,\n          },\n        },\n        // 禁用样式\n        '&-disabled': {\n          cursor: 'not-allowed',\n          [`& ${componentCls}-label`]: {\n            color: token.colorTextDisabled,\n          },\n        },\n        // 悬浮、选中时激活操作菜单\n        '&:hover, &-active': {\n          [`& ${componentCls}-menu-icon`]: {\n            opacity: 1,\n          },\n        },\n      },\n      // 会话名\n      [`& ${componentCls}-label`]: {\n        flex: 1,\n        color: token.colorText,\n      },\n      // 会话操作菜单\n      [`& ${componentCls}-menu-icon`]: {\n        opacity: 0,\n        fontSize: token.fontSizeXL,\n      },\n      // 会话图标\n      [`& ${componentCls}-group-title`]: {\n        display: 'flex',\n        alignItems: 'center',\n        height: token.controlHeightLG,\n        minHeight: token.controlHeightLG,\n        padding: `0 ${unit(token.paddingXS)}`,\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Conversations'> = () => ({});\n\nexport default genStyleHooks(\n  'Conversations',\n  (token) => {\n    const compToken = mergeToken<ConversationsToken>(token, {});\n    return genConversationsStyle(compToken);\n  },\n  prepareComponentToken,\n);\n","import { Link as DumiLink, useAppData, useLocation, useNavigate } from 'dumi';\nimport type { MouseEvent, MouseEventHandler } from 'react';\nimport React, { useMemo, forwardRef } from 'react';\n\nexport interface LinkProps {\n  to: string | { pathname?: string; search?: string; hash?: string };\n  style?: React.CSSProperties;\n  className?: string;\n  onClick?: MouseEventHandler;\n  component?: React.ComponentType<any>;\n  children?: React.ReactNode;\n}\n\nconst Link = forwardRef<HTMLAnchorElement, React.PropsWithChildren<LinkProps>>(\n  ({ component, children, to, ...rest }, ref) => {\n    const { pathname } = useLocation();\n    const { preloadRoute } = useAppData();\n    const navigate = useNavigate();\n    const href = useMemo<string>(() => {\n      if (typeof to === 'object') {\n        return `${to.pathname || pathname}${to.search || ''}${to.hash || ''}`;\n      }\n      return to;\n    }, [to]);\n    const onClick = (e: MouseEvent<HTMLAnchorElement>) => {\n      rest.onClick?.(e);\n      if (!href?.startsWith('http')) {\n        // Should support open in new tab\n        if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault();\n          navigate(href);\n        }\n      }\n    };\n    if (component) {\n      return React.createElement(\n        component,\n        {\n          ...rest,\n          ref,\n          href,\n          onClick,\n          onMouseEnter: () => preloadRoute?.(href),\n        },\n        children,\n      );\n    }\n    return (\n      <DumiLink ref={ref} {...rest} to={href} prefetch>\n        {children}\n      </DumiLink>\n    );\n  },\n);\n\nexport default Link;\n","import { Bubble, Prompts, Welcome, useXAgent, useXChat } from '@ant-design/x';\nimport { createStyles } from 'antd-style';\nimport React from 'react';\nimport useLocale from '../../../../hooks/useLocale';\nimport CustomizationProvider, { LOCALES } from '../../common/CustomizationProvider';\nimport CustomizationSender from '../../common/CustomizationSender';\n\nimport { BubbleDataType } from '@ant-design/x/es/bubble/BubbleList';\nimport { type GetProp, Tag } from 'antd';\n\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  ai: {\n    placement: 'start',\n    typing: { step: 5, interval: 20 },\n    style: {\n      maxWidth: 600,\n    },\n    styles: {\n      content: {\n        borderRadius: 16,\n      },\n    },\n  },\n  local: {\n    placement: 'end',\n    styles: {\n      content: {\n        borderRadius: 16,\n        background: '#3877FF',\n      },\n    },\n  },\n};\n\nlet mockSuccess = false;\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    container: css`\n      display: flex;\n      box-sizing: border-box;\n      flex-direction: column;\n      gap: ${token.padding}px;\n      height: 100%;\n      padding: ${token.paddingXL}px ${token.paddingLG * 2}px;\n   `,\n    bubble_list: css`\n      flex: 1;\n    `,\n    placeholder_bubble: css`\n      .ant-welcome {\n        padding: 0;\n        margin-bottom: ${token.marginSM}px;\n      }\n\n      .ant-welcome-title {\n        font-size: 16px !important;\n        font-weight: 500 !important;\n        opacity: 0.9;\n      }\n\n      .ant-welcome-description {\n        font-size: 12px;\n        opacity: 0.65;\n      }\n\n      .ant-welcome-icon {\n        img {\n          transform: scale(1.2);\n          margin-inline-end: 10px;\n        }\n      }\n\n      .ant-bubble-content {\n        overflow: hidden;\n        background: linear-gradient(135deg, #ffffff26 14%, #ffffff0d 59%) !important;\n        width: 100%;\n        border-radius: 16px;\n        padding: 24px;\n      }\n\n      .ant-prompts-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n      }\n\n      .ant-tag {\n        background: linear-gradient(45deg, #ffffff33 0%, #ffffff00 100%);\n        border: 1px solid #ffffff4d;\n        border-radius: 4px;\n        margin: 0;\n        width: 18px;\n        height: 18px;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .ant-prompts {\n        padding: 0;\n      }\n\n      .ant-prompts-desc {\n        line-height: 2 !important;\n      }\n\n      .ant-prompts-item {\n        background: rgba(255, 255, 255, 0.05);\n        padding: 16px;\n        border: none;\n        flex: 1;\n        height: 100%;\n      }\n    `,\n  };\n});\n\nconst IndependentScene: React.FC = () => {\n  const { styles } = useStyle();\n  const [locale] = useLocale(LOCALES);\n\n  const [content, setContent] = React.useState('');\n\n  const [agent] = useXAgent({\n    request: async ({ message }, { onSuccess, onError }) => {\n      await sleep();\n\n      mockSuccess = !mockSuccess;\n\n      if (mockSuccess) {\n        onSuccess(`Mock success return. You said: ${message}`);\n      }\n\n      onError(new Error('Mock request failed'));\n    },\n  });\n\n  // Chat messages\n  const { onRequest, messages } = useXChat({\n    agent,\n    requestPlaceholder: 'Waiting...',\n    requestFallback: 'Mock failed return. Please try again later.',\n  });\n\n  const placeholderMessage: BubbleDataType = {\n    key: 'placeholder',\n    variant: 'borderless',\n    className: styles.placeholder_bubble,\n    content: (\n      <div>\n        <Welcome\n          icon={\n            <img\n              src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n              alt=\"Ant Design X\"\n            />\n          }\n          title={locale.greeting}\n          description={locale.description}\n          variant=\"borderless\"\n        />\n        <Prompts\n          title={locale.help_text}\n          onItemClick={(item) => {\n            onRequest(item.data.description as string);\n          }}\n          styles={{\n            subItem: {\n              background: 'none',\n              padding: '4px 0',\n            },\n          }}\n          items={[\n            {\n              key: '1',\n              label: locale.hot_question,\n              children: [\n                {\n                  key: '1-1',\n                  icon: <Tag>1</Tag>,\n                  description: locale.question1,\n                },\n                {\n                  key: '1-2',\n                  icon: <Tag>2</Tag>,\n                  description: locale.question2,\n                },\n                {\n                  key: '1-3',\n                  icon: <Tag>3</Tag>,\n                  description: locale.question3,\n                },\n                {\n                  key: '1-4',\n                  icon: <Tag>4</Tag>,\n                  description: locale.question4,\n                },\n              ],\n            },\n            {\n              key: '2',\n              label: locale.design_guide,\n              children: [\n                {\n                  key: '2-1',\n                  icon: <Tag>1</Tag>,\n                  description: locale.empathy,\n                },\n                {\n                  key: '2-2',\n                  icon: <Tag>2</Tag>,\n                  description: locale.persona,\n                },\n                {\n                  key: '2-3',\n                  icon: <Tag>3</Tag>,\n                  description: locale.conversation,\n                },\n                {\n                  key: '2-4',\n                  icon: <Tag>4</Tag>,\n                  description: locale.interface,\n                },\n              ],\n            },\n          ]}\n        />\n      </div>\n    ),\n  };\n\n  return (\n    <CustomizationProvider>\n      <div className={styles.container}>\n        <Bubble.List\n          className={styles.bubble_list}\n          roles={roles}\n          items={[\n            placeholderMessage,\n            ...messages.map(({ id, message, status }) => ({\n              key: id,\n              loading: status === 'loading',\n              role: status === 'local' ? 'local' : 'ai',\n              content: message,\n            })),\n          ]}\n        />\n        <CustomizationSender\n          loading={agent.isRequesting()}\n          value={content}\n          onChange={setContent}\n          placeholder={locale.question1}\n          onSubmit={(nextContent) => {\n            if (!nextContent) return;\n            onRequest(nextContent);\n            setContent('');\n          }}\n        />\n      </div>\n    </CustomizationProvider>\n  );\n};\n\nexport default IndependentScene;\n","import Bubble from './Bubble';\nimport List from './BubbleList';\n\nexport type { BubbleProps } from './interface';\n\ntype BubbleType = typeof Bubble & {\n  List: typeof List;\n};\n\n(Bubble as BubbleType).List = List;\n\nexport default Bubble as BubbleType;\n","import { Typography } from 'antd';\nimport type { ConfigProviderProps, GetProp } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nexport interface GroupTitleProps {\n  children?: React.ReactNode;\n}\n\n// User should not care about internal state.\n// Which should pass by context instead.\nexport const GroupTitleContext = React.createContext<{\n  prefixCls?: GetProp<ConfigProviderProps, 'prefixCls'>;\n}>(null!);\n\nconst GroupTitle: React.FC<GroupTitleProps> = ({ children }) => {\n  const { prefixCls } = React.useContext(GroupTitleContext);\n\n  return (\n    <div className={classnames(`${prefixCls}-group-title`)}>\n      {children && <Typography.Text>{children}</Typography.Text>}\n    </div>\n  );\n};\n\nexport default GroupTitle;\n","\n  import '/home/runner/work/x/x/components/sender/demo/basic.tsx?watch=parent';\n  export default \"import { Sender } from '@ant-design/x';\\nimport { App, Flex } from 'antd';\\nimport React, { useState } from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const [value, setValue] = useState<string>('Hello? this is X!');\\n  const [loading, setLoading] = useState<boolean>(false);\\n\\n  const { message } = App.useApp();\\n\\n  // Mock send message\\n  React.useEffect(() => {\\n    if (loading) {\\n      const timer = setTimeout(() => {\\n        setLoading(false);\\n        message.success('Send message successfully!');\\n      }, 3000);\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }\\n  }, [loading]);\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Sender\\n        loading={loading}\\n        value={value}\\n        onChange={(v) => {\\n          setValue(v);\\n        }}\\n        onSubmit={() => {\\n          setValue('');\\n          setLoading(true);\\n          message.info('Send message!');\\n        }}\\n        onCancel={() => {\\n          setLoading(false);\\n          message.error('Cancel sending!');\\n        }}\\n      />\\n      <Sender value=\\\"Force as loading\\\" loading readOnly />\\n      <Sender disabled value=\\\"Set to disabled\\\" />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { CSSObject } from '@ant-design/cssinjs';\nimport { mergeToken } from '@ant-design/cssinjs-utils';\nimport { FastColor } from '@ant-design/fast-color';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\nimport genFileCardStyle from './fileCard';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {\n  colorBgPlaceholderHover: string;\n}\n\nexport interface AttachmentsToken extends FullToken<'Attachments'> {}\n\nconst anyBoxSizing: CSSObject = {\n  '&, *': {\n    boxSizing: 'border-box',\n  },\n};\n\nconst genAttachmentsStyle: GenerateStyle<AttachmentsToken> = (token) => {\n  const { componentCls, calc, antCls } = token;\n\n  const dropAreaCls = `${componentCls}-drop-area`;\n  const placeholderCls = `${componentCls}-placeholder`;\n\n  return {\n    // ============================== Full Screen ==============================\n    [dropAreaCls]: {\n      position: 'absolute',\n      inset: 0,\n      zIndex: token.zIndexPopupBase,\n      ...anyBoxSizing,\n\n      '&-on-body': {\n        position: 'fixed',\n        inset: 0,\n      },\n\n      '&-hide-placement': {\n        [`${placeholderCls}-inner`]: {\n          display: 'none',\n        },\n      },\n\n      [placeholderCls]: {\n        padding: 0,\n      },\n    },\n\n    '&': {\n      // ============================= Placeholder =============================\n      [placeholderCls]: {\n        height: '100%',\n        borderRadius: token.borderRadius,\n        borderWidth: token.lineWidthBold,\n        borderStyle: 'dashed',\n        borderColor: 'transparent',\n        padding: token.padding,\n        position: 'relative',\n        backdropFilter: 'blur(10px)',\n        background: token.colorBgPlaceholderHover,\n        ...anyBoxSizing,\n\n        [`${antCls}-upload-wrapper ${antCls}-upload${antCls}-upload-btn`]: {\n          padding: 0,\n        },\n\n        [`&${placeholderCls}-drag-in`]: {\n          borderColor: token.colorPrimaryHover,\n        },\n        [`&${placeholderCls}-disabled`]: {\n          opacity: 0.25,\n          pointerEvents: 'none',\n        },\n\n        [`${placeholderCls}-inner`]: {\n          gap: calc(token.paddingXXS).div(2).equal(),\n        },\n        [`${placeholderCls}-icon`]: {\n          fontSize: token.fontSizeHeading2,\n          lineHeight: 1,\n        },\n        [`${placeholderCls}-title${placeholderCls}-title`]: {\n          margin: 0,\n          fontSize: token.fontSize,\n          lineHeight: token.lineHeight,\n        },\n        [`${placeholderCls}-description`]: {},\n      },\n    },\n  };\n};\n\nconst genFileListStyle: GenerateStyle<AttachmentsToken> = (token) => {\n  const { componentCls, calc } = token;\n\n  const fileListCls = `${componentCls}-list`;\n\n  const cardHeight = calc(token.fontSize)\n    .mul(token.lineHeight)\n    .mul(2)\n    .add(token.paddingSM)\n    .add(token.paddingSM)\n    .equal();\n\n  return {\n    [componentCls]: {\n      position: 'relative',\n      width: '100%',\n      ...anyBoxSizing,\n\n      // =============================== File List ===============================\n      [fileListCls]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: token.paddingSM,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        color: token.colorText,\n        paddingBlock: token.paddingSM,\n        paddingInline: token.padding,\n        width: '100%',\n        background: token.colorBgContainer,\n\n        // Hide scrollbar\n        scrollbarWidth: 'none',\n        '-ms-overflow-style': 'none',\n        '&::-webkit-scrollbar': {\n          display: 'none',\n        },\n\n        // Scroll\n        '&-overflow-scrollX, &-overflow-scrollY': {\n          '&:before, &:after': {\n            content: '\"\"',\n            position: 'absolute',\n            opacity: 0,\n            transition: `opacity ${token.motionDurationSlow}`,\n            zIndex: 1,\n          },\n        },\n        '&-overflow-ping-start:before': {\n          opacity: 1,\n        },\n        '&-overflow-ping-end:after': {\n          opacity: 1,\n        },\n\n        '&-overflow-scrollX': {\n          overflowX: 'auto',\n          overflowY: 'hidden',\n          flexWrap: 'nowrap',\n\n          '&:before, &:after': {\n            insetBlock: 0,\n            width: 8,\n          },\n          '&:before': {\n            insetInlineStart: 0,\n            background: `linear-gradient(to right, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n          },\n          '&:after': {\n            insetInlineEnd: 0,\n            background: `linear-gradient(to left, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n          },\n\n          '&:dir(rtl)': {\n            '&:before': {\n              background: `linear-gradient(to left, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n            },\n            '&:after': {\n              background: `linear-gradient(to right, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n            },\n          },\n        },\n\n        '&-overflow-scrollY': {\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          maxHeight: calc(cardHeight).mul(3).equal(),\n\n          '&:before, &:after': {\n            insetInline: 0,\n            height: 8,\n          },\n\n          '&:before': {\n            insetBlockStart: 0,\n            background: `linear-gradient(to bottom, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n          },\n          '&:after': {\n            insetBlockEnd: 0,\n            background: `linear-gradient(to top, rgba(0,0,0,0.06), rgba(0,0,0,0));`,\n          },\n        },\n\n        // ======================================================================\n        // ==                              Upload                              ==\n        // ======================================================================\n        '&-upload-btn': {\n          width: cardHeight,\n          height: cardHeight,\n          fontSize: token.fontSizeHeading2,\n          color: '#999',\n        },\n\n        // ======================================================================\n        // ==                             PrevNext                             ==\n        // ======================================================================\n        '&-prev-btn, &-next-btn': {\n          position: 'absolute',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          boxShadow: token.boxShadowTertiary,\n          opacity: 0,\n          pointerEvents: 'none',\n        },\n        '&-prev-btn': {\n          left: {\n            _skip_check_: true,\n            value: token.padding,\n          },\n        },\n        '&-next-btn': {\n          right: {\n            _skip_check_: true,\n            value: token.padding,\n          },\n        },\n\n        '&:dir(ltr)': {\n          [`&${fileListCls}-overflow-ping-start ${fileListCls}-prev-btn`]: {\n            opacity: 1,\n            pointerEvents: 'auto',\n          },\n          [`&${fileListCls}-overflow-ping-end ${fileListCls}-next-btn`]: {\n            opacity: 1,\n            pointerEvents: 'auto',\n          },\n        },\n        '&:dir(rtl)': {\n          [`&${fileListCls}-overflow-ping-end ${fileListCls}-prev-btn`]: {\n            opacity: 1,\n            pointerEvents: 'auto',\n          },\n          [`&${fileListCls}-overflow-ping-start ${fileListCls}-next-btn`]: {\n            opacity: 1,\n            pointerEvents: 'auto',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Attachments'> = (token) => {\n  const { colorBgContainer } = token;\n  const colorBgPlaceholderHover = new FastColor(colorBgContainer).setA(0.85);\n\n  return {\n    colorBgPlaceholderHover: colorBgPlaceholderHover.toRgbString(),\n  };\n};\n\nexport default genStyleHooks(\n  'Attachments',\n  (token) => {\n    const compToken = mergeToken<AttachmentsToken>(token, {});\n    return [\n      genAttachmentsStyle(compToken),\n      genFileListStyle(compToken),\n      genFileCardStyle(compToken),\n    ];\n  },\n  prepareComponentToken,\n);\n","\n  import '/home/runner/work/x/x/components/bubble/demo/_semantic.tsx?watch=parent';\n  export default \"import { CopyOutlined, SyncOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport { Avatar, Button, Space, theme } from 'antd';\\nimport React from 'react';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nconst locales = {\\n  cn: {\\n    avatar: '头像的外层容器',\\n    header: '头部的容器',\\n    content: '聊天内容的容器',\\n    footer: '底部的容器',\\n  },\\n  en: {\\n    avatar: 'Wrapper element of the avatar',\\n    header: 'Wrapper element of the header',\\n    content: 'Wrapper element of the content',\\n    footer: 'Wrapper element of the footer',\\n  },\\n};\\n\\nconst App: React.FC = () => {\\n  const [locale] = useLocale(locales);\\n\\n  const { token } = theme.useToken();\\n\\n  return (\\n    <SemanticPreview\\n      semantics={[\\n        { name: 'avatar', desc: locale.avatar },\\n        { name: 'header', desc: locale.header },\\n        { name: 'content', desc: locale.content },\\n        { name: 'footer', desc: locale.footer },\\n      ]}\\n    >\\n      <Bubble\\n        content=\\\"Feel free to use Ant Design !\\\"\\n        avatar={<Avatar size={32} icon={<UserOutlined />} />}\\n        header=\\\"Ant Design X\\\"\\n        footer={\\n          <Space size={token.paddingXXS}>\\n            <Button color=\\\"default\\\" variant=\\\"text\\\" size=\\\"small\\\" icon={<SyncOutlined />} />\\n            <Button color=\\\"default\\\" variant=\\\"text\\\" size=\\\"small\\\" icon={<CopyOutlined />} />\\n          </Space>\\n        }\\n      />\\n    </SemanticPreview>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\ninterface SuggestionToken extends FullToken<'Suggestion'> {}\n\nconst genSuggestionStyle: GenerateStyle<SuggestionToken> = (token) => {\n  const { componentCls, antCls } = token;\n\n  return {\n    [componentCls]: {\n      [`${antCls}-cascader-menus ${antCls}-cascader-menu`]: {\n        height: 'auto',\n      },\n\n      [`${componentCls}-item`]: {\n        '&-icon': {\n          marginInlineEnd: token.paddingXXS,\n        },\n\n        '&-extra': {\n          marginInlineStart: token.padding,\n        },\n      },\n\n      [`&${componentCls}-block`]: {\n        [`${componentCls}-item-extra`]: {\n          marginInlineStart: 'auto',\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Suggestion'> = () => ({});\n\nexport default genStyleHooks<'Suggestion'>(\n  'Suggestion',\n  (token) => {\n    const SuggestionToken = mergeToken<SuggestionToken>(token, {});\n    return genSuggestionStyle(SuggestionToken);\n  },\n  prepareComponentToken,\n);\n","import SiteContext from '../../../theme/slots/SiteContext';\n\nexport type { SiteContextProps } from '../../../theme/slots/SiteContext';\n\nexport default SiteContext;\n","import { ArrowUpOutlined } from '@ant-design/icons';\nimport type { ButtonProps } from 'antd';\nimport * as React from 'react';\nimport ActionButton from './ActionButton';\n\nfunction SendButton(props: ButtonProps, ref: React.Ref<HTMLButtonElement>) {\n  return (\n    <ActionButton\n      icon={<ArrowUpOutlined />}\n      type=\"primary\"\n      shape=\"circle\"\n      {...props}\n      action=\"onSend\"\n      ref={ref}\n    />\n  );\n}\n\nexport default React.forwardRef(SendButton);\n","import type { MenuProps } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport GroupTitle, { GroupTitleContext } from './GroupTitle';\nimport ConversationsItem, { type ConversationsItemProps } from './Item';\n\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\nimport useGroupable from './hooks/useGroupable';\n\nimport useStyle from './style';\n\nimport pickAttrs from 'rc-util/lib/pickAttrs';\nimport type { Conversation, Groupable } from './interface';\n\n/**\n * @desc 会话列表组件参数\n * @descEN Props for the conversation list component\n */\nexport interface ConversationsProps extends React.HTMLAttributes<HTMLUListElement> {\n  /**\n   * @desc 会话列表数据源\n   * @descEN Data source for the conversation list\n   */\n  items?: Conversation[];\n\n  /**\n   * @desc 当前选中的值\n   * @descEN Currently selected value\n   */\n  activeKey?: Conversation['key'];\n\n  /**\n   * @desc 默认选中值\n   * @descEN Default selected value\n   */\n  defaultActiveKey?: Conversation['key'];\n\n  /**\n   * @desc 选中变更回调\n   * @descEN Callback for selection change\n   */\n  onActiveChange?: (value: string) => void;\n\n  /**\n   * @desc 会话操作菜单\n   * @descEN Operation menu for conversations\n   */\n  menu?: MenuProps | ((value: Conversation) => MenuProps);\n\n  /**\n   * @desc 是否支持分组, 开启后默认按 {@link Conversation.group} 字段分组\n   * @descEN If grouping is supported, it defaults to the {@link Conversation.group} field\n   */\n  groupable?: boolean | Groupable;\n\n  /**\n   * @desc 语义化结构 style\n   * @descEN Semantic structure styles\n   */\n  styles?: Partial<Record<'item', React.CSSProperties>>;\n\n  /**\n   * @desc 语义化结构 className\n   * @descEN Semantic structure class names\n   */\n  classNames?: Partial<Record<'item', string>>;\n\n  /**\n   * @desc 自定义前缀\n   * @descEN Prefix\n   */\n  prefixCls?: string;\n\n  /**\n   * @desc 自定义根类名\n   * @descEN Custom class name\n   */\n  rootClassName?: string;\n}\n\nconst Conversations: React.FC<ConversationsProps> = (props) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName,\n    items,\n    activeKey,\n    defaultActiveKey,\n    onActiveChange,\n    menu,\n    styles = {},\n    classNames = {},\n    groupable,\n    className,\n    style,\n    ...restProps\n  } = props;\n\n  const domProps = pickAttrs(restProps, {\n    attr: true,\n    aria: true,\n    data: true,\n  });\n\n  // ============================ ActiveKey ============================\n  const [mergedActiveKey, setMergedActiveKey] = useMergedState<ConversationsProps['activeKey']>(\n    defaultActiveKey,\n    {\n      value: activeKey,\n    },\n  );\n\n  // ============================ Groupable ============================\n  const [groupList, enableGroup] = useGroupable(groupable, items);\n\n  // ============================ Prefix ============================\n  const { getPrefixCls, direction } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('conversations', customizePrefixCls);\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('conversations');\n\n  // ============================ Style ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  const mergedCls = classnames(\n    prefixCls,\n    contextConfig.className,\n    className,\n    rootClassName,\n    hashId,\n    cssVarCls,\n    {\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n    },\n  );\n\n  // ============================ Events ============================\n  const onConversationItemClick: ConversationsItemProps['onClick'] = (info) => {\n    setMergedActiveKey(info.key);\n\n    if (onActiveChange) {\n      onActiveChange(info.key);\n    }\n  };\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <ul\n      {...domProps}\n      style={{\n        ...contextConfig.style,\n        ...style,\n      }}\n      className={mergedCls}\n    >\n      {groupList.map((groupInfo, groupIndex) => {\n        const convItems = groupInfo.data.map((convInfo: Conversation, convIndex: number) => (\n          <ConversationsItem\n            key={convInfo.key || `key-${convIndex}`}\n            info={convInfo}\n            prefixCls={prefixCls}\n            direction={direction}\n            className={classnames(classNames.item, contextConfig.classNames.item)}\n            style={{ ...contextConfig.styles.item, ...styles.item }}\n            menu={typeof menu === 'function' ? menu(convInfo) : menu}\n            active={mergedActiveKey === convInfo.key}\n            onClick={onConversationItemClick}\n          />\n        ));\n\n        // With group to show the title\n        if (enableGroup) {\n          return (\n            <li key={groupInfo.name || `key-${groupIndex}`}>\n              <GroupTitleContext.Provider value={{ prefixCls }}>\n                {groupInfo.title?.(groupInfo.name!, { components: { GroupTitle } }) || (\n                  <GroupTitle key={groupInfo.name}>{groupInfo.name}</GroupTitle>\n                )}\n              </GroupTitleContext.Provider>\n              <ul className={`${prefixCls}-list`}>{convItems}</ul>\n            </li>\n          );\n        }\n\n        return convItems;\n      })}\n    </ul>,\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Conversations.displayName = 'Conversations';\n}\n\nexport type { Conversation };\n\nexport default Conversations;\n","\n  import '/home/runner/work/x/x/components/use-x-chat/demo/suggestions.tsx?watch=parent';\n  export default \"import { SmileOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Bubble, Prompts, Sender, useXAgent, useXChat } from '@ant-design/x';\\nimport { Flex, type GetProp } from 'antd';\\nimport React from 'react';\\n\\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  user: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n  text: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n    typing: true,\\n  },\\n  suggestion: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { visibility: 'hidden' } },\\n    variant: 'borderless',\\n    messageRender: (content) => (\\n      <Prompts\\n        vertical\\n        items={(content as any as string[]).map((text) => ({\\n          key: text,\\n          icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\\n          description: text,\\n        }))}\\n      />\\n    ),\\n  },\\n};\\n\\ntype AgentUserMessage = {\\n  type: 'user';\\n  content: string;\\n};\\n\\ntype AgentAIMessage = {\\n  type: 'ai';\\n  content?: string;\\n  list?: (\\n    | {\\n        type: 'text';\\n        content: string;\\n      }\\n    | {\\n        type: 'suggestion';\\n        content: string[];\\n      }\\n  )[];\\n};\\n\\ntype AgentMessage = AgentUserMessage | AgentAIMessage;\\n\\ntype BubbleMessage = {\\n  role: string;\\n};\\n\\nconst App = () => {\\n  const [content, setContent] = React.useState('');\\n\\n  // Agent for request\\n  const [agent] = useXAgent<AgentMessage>({\\n    request: async ({ message }, { onSuccess }) => {\\n      await sleep();\\n\\n      const { content } = message || {};\\n\\n      onSuccess({\\n        type: 'ai',\\n        list: [\\n          {\\n            type: 'text',\\n            content: `Do you want?`,\\n          },\\n          {\\n            type: 'suggestion',\\n            content: [`Look at: ${content}`, `Search: ${content}`, `Try: ${content}`],\\n          },\\n        ],\\n      });\\n    },\\n  });\\n\\n  // Chat messages\\n  const { onRequest, parsedMessages } = useXChat<AgentMessage, BubbleMessage>({\\n    agent,\\n\\n    defaultMessages: [\\n      {\\n        id: 'init',\\n        message: {\\n          type: 'ai',\\n          content: 'Hello, what can I do for you?',\\n        },\\n        status: 'success',\\n      },\\n    ],\\n\\n    requestPlaceholder: {\\n      type: 'ai',\\n      content: 'Waiting...',\\n    },\\n\\n    // Convert AgentMessage to BubbleMessage\\n    parser: (agentMessages) => {\\n      const list = agentMessages.content ? [agentMessages] : (agentMessages as AgentAIMessage).list;\\n\\n      return (list || []).map((msg) => ({\\n        role: msg.type,\\n        content: msg.content,\\n      }));\\n    },\\n  });\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Bubble.List\\n        roles={roles}\\n        style={{ maxHeight: 300 }}\\n        items={parsedMessages.map(({ id, message, status }) => ({\\n          key: id,\\n          loading: status === 'loading',\\n          ...message,\\n        }))}\\n      />\\n      <Sender\\n        loading={agent.isRequesting()}\\n        value={content}\\n        onChange={setContent}\\n        onSubmit={(nextContent) => {\\n          onRequest({\\n            type: 'user',\\n            content: nextContent,\\n          });\\n          setContent('');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/avatar-and-placement.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { UserOutlined } from '@ant-design/icons';\\nimport { Flex } from 'antd';\\nimport { Bubble } from '@ant-design/x';\\n\\nconst fooAvatar: React.CSSProperties = {\\n  color: '#f56a00',\\n  backgroundColor: '#fde3cf',\\n};\\n\\nconst barAvatar: React.CSSProperties = {\\n  color: '#fff',\\n  backgroundColor: '#87d068',\\n};\\n\\nconst hideAvatar: React.CSSProperties = {\\n  visibility: 'hidden',\\n};\\n\\nconst App: React.FC = () => (\\n  <Flex gap=\\\"middle\\\" vertical>\\n    <Bubble\\n      placement=\\\"start\\\"\\n      content=\\\"Good morning, how are you?\\\"\\n      avatar={{ icon: <UserOutlined />, style: fooAvatar }}\\n    />\\n    <Bubble\\n      placement=\\\"start\\\"\\n      content=\\\"What a beautiful day!\\\"\\n      styles={{ avatar: hideAvatar }}\\n      avatar={{}}\\n    />\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"Hi, good morning, I'm fine!\\\"\\n      avatar={{ icon: <UserOutlined />, style: barAvatar }}\\n    />\\n    <Bubble placement=\\\"end\\\" content=\\\"Thank you!\\\" styles={{ avatar: hideAvatar }} avatar={{}} />\\n  </Flex>\\n);\\n\\nexport default App;\\n\";;\n  ","import { Button, Carousel } from 'antd';\nimport { createStyles } from 'antd-style';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport useLocale from '../../../../hooks/useLocale';\nimport Container from '../../common/Container';\nimport SiteContext from '../SiteContext';\nimport AssistantScene from './Assistant';\nimport Independent from './Independent';\nimport NestScene from './Nest';\n\nconst locales = {\n  cn: {\n    title: '试一试 , 多种 AI 场景体验',\n    desc: '提供多场景解决方案 , 帮助用户提高与 AI 协作效率',\n\n    independent_title: 'Web 独立式',\n    independent_desc: '自然语言为主 , 几乎没有界面操作',\n\n    assistant_title: 'Web 助手式',\n    assistant_desc: '自然语言和界面操作均衡配合使用',\n\n    nest_title: 'Web 嵌入式',\n    nest_desc: '界面操作为主 , 偶尔唤起AI指令',\n\n    app_title: 'App 端',\n    app_desc: '疯狂研发中 , 敬请期待',\n  },\n  en: {\n    title: 'Multiple AI Scenario Experiences',\n    desc: 'Offering multi-scenario solutions to help users enhance collaboration efficiency with AI',\n\n    independent_title: 'Web - Independent',\n    independent_desc: 'Primarily LUI',\n\n    assistant_title: 'Web - Assistant',\n    assistant_desc: 'Mix of LUI and GUI',\n\n    nest_title: 'Web - Nest',\n    nest_desc: 'Mainly UI-driven',\n\n    app_title: 'Mobile - APP',\n    app_desc: 'In development, stay tuned',\n  },\n};\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    container: css`\n      position: relative;\n\n      @media screen and (max-width: ${token.mobileMaxWidth}px) {\n        height: 100vh;\n      }\n    `,\n    content_bg: css`\n      position: absolute;\n      top: 0;\n      right: 0;\n      transform: translate(10%, -20%);\n    `,\n    content: css`\n      display: flex;\n      justify-content: space-between;\n      gap: ${token.paddingXL}px;\n      width: 100%;\n      margin-top: ${token.pcContainerMargin / 2}px;\n    `,\n    mobile_content: css`\n      margin: ${token.marginXXL}px 0;\n\n      h3 {\n        text-align: center;\n        font-size: ${token.fontSizeHeading3}px;\n      }\n\n      p {\n        text-align: center;\n        opacity: 0.65;\n      }\n\n      img {\n        width: 100%;\n        background: #0c0e10cc;\n        border-radius: 12px;\n        margin-top: ${token.margin}px;\n      }\n    `,\n    tab: css`\n      width: 280px;\n      display: flex;\n      flex-direction: column;\n      gap: ${token.margin}px;\n    `,\n    tab_content: css`\n      width: 890px;\n      height: 600px;\n      box-sizing: border-box;\n      background-image: url(https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*RxJMSbQRvTUAAAAAAAAAAAAADgCCAQ/fmt.avif);\n      background-repeat: no-repeat;\n      background-size: cover;\n      z-index: 2;\n    `,\n    item: css`\n      position: relative;\n      border-radius: 20px;\n      height: 86px;\n      padding: ${token.padding}px;\n      box-sizing: border-box;\n      display: flex;\n      gap: 4px;\n      flex-direction: column;\n      align-items: flex-start;\n      cursor: pointer;\n      border: none !important;\n    `,\n    'item-disabled': css`\n      h3,p {\n        color: ${token.colorTextDisabled};\n      }\n    `,\n    'item-active': css`\n      background: #ffffff1a;\n\n      &::after {\n        content: '';\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        border-radius: inherit;\n\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        inset-inline-start: 0;\n        inset-inline-end: 0;\n\n        padding: ${token.lineWidth}px;\n        background: linear-gradient(180deg, #ffffff26 0%, #ffffff00 100%);\n        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n        mask-composite: exclude;\n      };\n    `,\n    item_title: css`\n      font-size: ${token.fontSizeHeading4}px;\n      color: #ffffff;\n      font-weight: 500;\n    `,\n    item_desc: css`\n      font-size: 14px;\n      color: #ffffff;\n      line-height: 22px;\n      opacity: 0.65;\n    `,\n  };\n});\n\nconst SceneBanner: React.FC = () => {\n  const { styles } = useStyle();\n  const [locale] = useLocale(locales);\n\n  const { isMobile } = React.useContext(SiteContext);\n\n  const tabItems = [\n    {\n      key: 'independent',\n      title: locale.independent_title,\n      desc: locale.independent_desc,\n      content: <Independent />,\n      img: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*YVjbTqbc7ngAAAAAAAAAAAAADgCCAQ/fmt.avif',\n    },\n    {\n      key: 'assistant',\n      title: locale.assistant_title,\n      desc: locale.assistant_desc,\n      content: <AssistantScene />,\n      img: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*kCojRo0SoAAAAAAAAAAAAAAADgCCAQ/fmt.avif',\n    },\n    {\n      key: 'nest',\n      title: locale.nest_title,\n      desc: locale.nest_desc,\n      content: <NestScene />,\n      img: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*krfsT5zBSuUAAAAAAAAAAAAADgCCAQ/fmt.avif',\n    },\n    {\n      key: 'app',\n      title: locale.app_title,\n      desc: locale.app_desc,\n      disabled: true,\n      content: null,\n    },\n  ];\n\n  const [active, setActive] = React.useState<string>(tabItems[0].key);\n\n  const genHandleActive = (key: string) => () => setActive(key);\n\n  const activeContent = tabItems.find((item) => item.key === active)?.content;\n\n  return (\n    <Container className={styles.container} title={locale.title} desc={locale.desc}>\n      {!isMobile && (\n        <img\n          className={styles.content_bg}\n          src=\"https://mdn.alipayobjects.com/huamei_k0vkmw/afts/img/A*aSLTSr53DPAAAAAAAAAAAAAADsR-AQ/original\"\n          alt=\"bg\"\n        />\n      )}\n      {isMobile ? (\n        <Carousel autoplay draggable autoplaySpeed={5000} swipeToSlide>\n          {tabItems.map(\n            (item) =>\n              item.img && (\n                <div className={styles.mobile_content}>\n                  <h3>{item.title}</h3>\n                  <p>{item.desc}</p>\n                  <img src={item.img} alt=\"item.img\" loading=\"lazy\" />\n                </div>\n              ),\n          )}\n        </Carousel>\n      ) : (\n        <div className={styles.content}>\n          <div className={styles.tab}>\n            {tabItems.map((item) => (\n              <Button\n                key={item.key}\n                disabled={item.disabled}\n                className={classnames(\n                  styles.item,\n                  active === item.key && styles['item-active'],\n                  item.disabled && styles['item-disabled'],\n                )}\n                type=\"text\"\n                onClick={genHandleActive(item.key)}\n              >\n                <h3 className={styles.item_title}>{item.title}</h3>\n                <p className={styles.item_desc}>{item.desc}</p>\n              </Button>\n            ))}\n          </div>\n          {!!activeContent && <div className={styles.tab_content}>{activeContent}</div>}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default SceneBanner;\n","import * as React from 'react';\nimport type { BubbleDataType, BubbleListProps } from '../BubbleList';\nimport type { BubbleProps } from '../interface';\n\nexport type ListItemType = ReturnType<typeof useListData>[number];\n\nexport default function useListData(\n  items: BubbleListProps['items'],\n  roles?: BubbleListProps['roles'],\n) {\n  const getRoleBubbleProps = React.useCallback(\n    (bubble: BubbleDataType, index: number): Partial<BubbleProps> => {\n      if (typeof roles === 'function') {\n        return roles(bubble, index);\n      }\n\n      if (roles) {\n        return roles[bubble.role!] || {};\n      }\n\n      return {};\n    },\n    [roles],\n  );\n\n  return React.useMemo(\n    () =>\n      (items || []).map((bubbleData, i) => {\n        const mergedKey = bubbleData.key ?? `preset_${i}`;\n\n        return {\n          ...getRoleBubbleProps(bubbleData, i),\n          ...bubbleData,\n          key: mergedKey,\n        };\n      }),\n    [items, getRoleBubbleProps],\n  );\n}\n","\n  import '/home/runner/work/x/x/components/prompts/demo/disabled.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Prompts } from '@ant-design/x';\\nimport type { PromptsProps } from '@ant-design/x';\\nimport { CheckCircleOutlined, CoffeeOutlined } from '@ant-design/icons';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '5',\\n    icon: <CheckCircleOutlined style={{ color: '#52C41A' }} />,\\n    label: 'Task Completion Secrets',\\n    description: 'What are some tricks for getting tasks done?',\\n    disabled: true,\\n  },\\n  {\\n    key: '6',\\n    icon: <CoffeeOutlined style={{ color: '#964B00' }} />,\\n    label: 'Time for a Coffee Break',\\n    description: 'How to rest effectively after long hours of work?',\\n  },\\n];\\n\\nconst App = () => <Prompts title=\\\"☕️ It's time to relax!\\\" items={items} />;\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/loading.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { UserOutlined } from '@ant-design/icons';\\nimport { Flex, Switch } from 'antd';\\nimport { Bubble } from '@ant-design/x';\\n\\nconst App: React.FC = () => {\\n  const [loading, setLoading] = React.useState<boolean>(true);\\n  return (\\n    <Flex gap=\\\"large\\\" vertical>\\n      <Bubble loading={loading} content=\\\"hello world !\\\" avatar={{ icon: <UserOutlined /> }} />\\n      <Flex gap=\\\"large\\\" wrap>\\n        Loading state:\\n        <Switch checked={loading} onChange={setLoading} />\\n      </Flex>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","export interface XFetchMiddlewares {\n  onRequest?: (...ags: Parameters<typeof fetch>) => Promise<Parameters<typeof fetch>>;\n  onResponse?: (response: Response) => Promise<Response>;\n}\n\nexport interface XFetchOptions extends RequestInit {\n  /**\n   * @description A typeof fetch function\n   * @default globalThis.fetch\n   */\n  fetch?: typeof fetch;\n  /**\n   * @description Middleware for request and response\n   */\n  middlewares?: XFetchMiddlewares;\n}\n\nexport type XFetchType = (\n  baseURL: Parameters<typeof fetch>[0],\n  options?: XFetchOptions,\n) => Promise<Response>;\n\nconst XFetch: XFetchType = async (baseURL, options = {}) => {\n  const { fetch: fetchFn = globalThis.fetch, middlewares = {}, ...requestInit } = options;\n\n  if (typeof fetchFn !== 'function') {\n    throw new Error('The options.fetch must be a typeof fetch function!');\n  }\n\n  /** ---------------------- request init ---------------------- */\n  let fetchArgs: Parameters<typeof fetch> = [baseURL, requestInit];\n\n  /** ---------------------- request middleware ---------------------- */\n  if (typeof middlewares.onRequest === 'function') {\n    const modifiedFetchArgs = await middlewares.onRequest(...fetchArgs);\n\n    fetchArgs = modifiedFetchArgs;\n  }\n\n  /** ---------------------- fetch ---------------------- */\n  let response = await fetchFn(...fetchArgs);\n\n  /** ---------------------- response middleware ---------------------- */\n  if (typeof middlewares.onResponse === 'function') {\n    const modifiedResponse = await middlewares.onResponse(response);\n\n    if (!(modifiedResponse instanceof Response)) {\n      throw new Error('The options.onResponse must return a Response instance!');\n    }\n\n    response = modifiedResponse;\n  }\n\n  /** ---------------------- response check ---------------------- */\n  if (!response.ok) {\n    throw new Error(`Fetch failed with status ${response.status}`);\n  }\n\n  if (!response.body) {\n    throw new Error('The response body is empty.');\n  }\n\n  /** ---------------------- return ---------------------- */\n  return response;\n};\n\nexport default XFetch;\n","import type { CSSMotionProps, MotionEndEventHandler, MotionEventHandler } from 'rc-motion';\nimport type { MotionEvent } from 'rc-motion/lib/interface';\nimport { defaultPrefixCls } from '../x-provider';\n\n// ================== Collapse Motion ==================\nconst getCollapsedHeight: MotionEventHandler = () => ({ height: 0, opacity: 0 });\nconst getRealHeight: MotionEventHandler = (node) => {\n  const { scrollHeight } = node;\n  return { height: scrollHeight, opacity: 1 };\n};\nconst getCurrentHeight: MotionEventHandler = (node) => ({ height: node ? node.offsetHeight : 0 });\nconst skipOpacityTransition: MotionEndEventHandler = (_, event: MotionEvent) =>\n  event?.deadline === true || (event as TransitionEvent).propertyName === 'height';\n\nconst initCollapseMotion = (rootCls = defaultPrefixCls): CSSMotionProps => ({\n  motionName: `${rootCls}-motion-collapse`,\n  onAppearStart: getCollapsedHeight,\n  onEnterStart: getCollapsedHeight,\n  onAppearActive: getRealHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onAppearEnd: skipOpacityTransition,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 500,\n});\n\nexport default initCollapseMotion;\n","import { useEvent } from 'rc-util';\nimport React from 'react';\nimport { XAgent } from '../use-x-agent';\nimport useSyncState from './useSyncState';\n\nexport type SimpleType = string | number | boolean | object;\n\nexport type MessageStatus = 'local' | 'loading' | 'success' | 'error';\n\ntype RequestPlaceholderFn<Message extends SimpleType> = (\n  message: Message,\n  info: { messages: Message[] },\n) => Message;\n\ntype RequestFallbackFn<Message extends SimpleType> = (\n  message: Message,\n  info: { error: Error; messages: Message[] },\n) => Message | Promise<Message>;\n\nexport interface XChatConfig<\n  AgentMessage extends SimpleType = string,\n  BubbleMessage extends SimpleType = AgentMessage,\n> {\n  agent?: XAgent<AgentMessage>;\n\n  defaultMessages?: DefaultMessageInfo<AgentMessage>[];\n\n  /** Convert agent message to bubble usage message type */\n  parser?: (message: AgentMessage) => BubbleMessage | BubbleMessage[];\n\n  requestPlaceholder?: AgentMessage | RequestPlaceholderFn<AgentMessage>;\n  requestFallback?: AgentMessage | RequestFallbackFn<AgentMessage>;\n}\n\nexport interface MessageInfo<Message extends SimpleType> {\n  id: number | string;\n  message: Message;\n  status: MessageStatus;\n}\n\nexport type DefaultMessageInfo<Message extends SimpleType> = Pick<MessageInfo<Message>, 'message'> &\n  Partial<Omit<MessageInfo<Message>, 'message'>>;\n\nexport type RequestResultObject<Message> = {\n  message: Message | Message[];\n  status: MessageStatus;\n};\n\nexport type RequestResult<Message extends SimpleType> =\n  | Message\n  | Message[]\n  | RequestResultObject<Message>\n  | RequestResultObject<Message>[];\n\nexport type StandardRequestResult<Message extends SimpleType> = Omit<\n  RequestResultObject<Message>,\n  'message' | 'status'\n> & {\n  message: Message;\n  status?: MessageStatus;\n};\n\nfunction toArray<T>(item: T | T[]): T[] {\n  return Array.isArray(item) ? item : [item];\n}\n\nexport default function useXChat<\n  AgentMessage extends SimpleType = string,\n  ParsedMessage extends SimpleType = AgentMessage,\n>(config: XChatConfig<AgentMessage, ParsedMessage>) {\n  const { defaultMessages, agent, requestFallback, requestPlaceholder, parser } = config;\n\n  // ========================= Agent Messages =========================\n  const idRef = React.useRef(0);\n\n  const [messages, setMessages, getMessages] = useSyncState<MessageInfo<AgentMessage>[]>(() =>\n    (defaultMessages || []).map((info, index) => ({\n      id: `default_${index}`,\n      status: 'local',\n      ...info,\n    })),\n  );\n\n  const createMessage = (message: AgentMessage, status: MessageStatus) => {\n    const msg: MessageInfo<AgentMessage> = {\n      id: `msg_${idRef.current}`,\n      message,\n      status,\n    };\n\n    idRef.current += 1;\n\n    return msg;\n  };\n\n  // ========================= BubbleMessages =========================\n  const parsedMessages = React.useMemo(() => {\n    const list: MessageInfo<ParsedMessage>[] = [];\n\n    messages.forEach((agentMsg) => {\n      const rawParsedMsg = parser ? parser(agentMsg.message) : agentMsg.message;\n      const bubbleMsgs = toArray(rawParsedMsg as ParsedMessage);\n\n      bubbleMsgs.forEach((bubbleMsg, bubbleMsgIndex) => {\n        let key = agentMsg.id;\n        if (bubbleMsgs.length > 1) {\n          key = `${key}_${bubbleMsgIndex}`;\n        }\n\n        list.push({\n          id: key,\n          message: bubbleMsg,\n          status: agentMsg.status,\n        });\n      });\n    });\n\n    return list;\n  }, [messages]);\n\n  // ============================ Request =============================\n  const getFilteredMessages = (msgs: MessageInfo<AgentMessage>[]) =>\n    msgs\n      .filter((info) => info.status !== 'loading' && info.status !== 'error')\n      .map((info) => info.message);\n\n  // For agent to use. Will filter out loading and error message\n  const getRequestMessages = () => getFilteredMessages(getMessages());\n\n  const onRequest = useEvent((message: AgentMessage) => {\n    if (!agent)\n      throw new Error(\n        'The agent parameter is required when using the onRequest method in an agent generated by useXAgent.',\n      );\n\n    let loadingMsgId: number | string | null = null;\n\n    // Add placeholder message\n    setMessages((ori) => {\n      let nextMessages = [...ori, createMessage(message, 'local')];\n\n      if (requestPlaceholder) {\n        let placeholderMsg: AgentMessage;\n\n        if (typeof requestPlaceholder === 'function') {\n          // typescript has bug that not get real return type when use `typeof function` check\n          placeholderMsg = (requestPlaceholder as RequestPlaceholderFn<AgentMessage>)(message, {\n            messages: getFilteredMessages(nextMessages),\n          });\n        } else {\n          placeholderMsg = requestPlaceholder;\n        }\n\n        const loadingMsg = createMessage(placeholderMsg, 'loading');\n        loadingMsgId = loadingMsg.id;\n\n        nextMessages = [...nextMessages, loadingMsg];\n      }\n\n      return nextMessages;\n    });\n\n    // Request\n    let updatingMsgId: number | string | null = null;\n    const updateMessage = (message: AgentMessage, status: MessageStatus) => {\n      let msg = getMessages().find((info) => info.id === updatingMsgId);\n\n      if (!msg) {\n        // Create if not exist\n        msg = createMessage(message, status);\n        setMessages((ori) => {\n          const oriWithoutPending = ori.filter((info) => info.id !== loadingMsgId);\n          return [...oriWithoutPending, msg!];\n        });\n        updatingMsgId = msg.id;\n      } else {\n        // Update directly\n        setMessages((ori) => {\n          return ori.map((info) => {\n            if (info.id === updatingMsgId) {\n              return {\n                ...info,\n                message,\n                status,\n              };\n            }\n            return info;\n          });\n        });\n      }\n\n      return msg;\n    };\n\n    agent.request(\n      {\n        message,\n        messages: getRequestMessages(),\n      },\n      {\n        onUpdate: (message) => {\n          updateMessage(message, 'loading');\n        },\n        onSuccess: (message) => {\n          updateMessage(message, 'success');\n        },\n        onError: async (error: Error) => {\n          if (requestFallback) {\n            let fallbackMsg: AgentMessage;\n\n            // Update as error\n            if (typeof requestFallback === 'function') {\n              // typescript has bug that not get real return type when use `typeof function` check\n              fallbackMsg = await (requestFallback as RequestFallbackFn<AgentMessage>)(message, {\n                error,\n                messages: getRequestMessages(),\n              });\n            } else {\n              fallbackMsg = requestFallback;\n            }\n\n            setMessages((ori) => [\n              ...ori.filter((info) => info.id !== loadingMsgId && info.id !== updatingMsgId),\n              createMessage(fallbackMsg, 'error'),\n            ]);\n          } else {\n            // Remove directly\n            setMessages((ori) => {\n              return ori.filter((info) => info.id !== loadingMsgId && info.id !== updatingMsgId);\n            });\n          }\n        },\n      },\n    );\n  });\n\n  return {\n    onRequest,\n    messages,\n    parsedMessages,\n    setMessages,\n  } as const;\n}\n","\n  import '/home/runner/work/x/x/components/conversations/demo/group.tsx?watch=parent';\n  export default \"import { Conversations, type ConversationsProps } from '@ant-design/x';\\nimport { type GetProp, theme } from 'antd';\\nimport React from 'react';\\n\\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 4 }).map((_, index) => ({\\n  key: `item${index + 1}`,\\n  label: `Conversation Item ${index + 1}`,\\n  disabled: index === 3,\\n  group: index === 3 ? 'Group2' : 'Group1',\\n}));\\n\\nconst App = () => {\\n  const { token } = theme.useToken();\\n\\n  // Customize the style of the container\\n  const style = {\\n    width: 256,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n  };\\n\\n  return <Conversations items={items} defaultActiveKey=\\\"item1\\\" style={style} groupable />;\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/welcome/demo/background.tsx?watch=parent';\n  export default \"import { Welcome } from '@ant-design/x';\\nimport { Card, ConfigProvider, Flex, theme } from 'antd';\\nimport React from 'react';\\n\\nconst items: {\\n  algorithm: typeof theme.defaultAlgorithm;\\n  background: string;\\n}[] = [\\n  {\\n    algorithm: theme.defaultAlgorithm,\\n    background: 'linear-gradient(97deg, #f2f9fe 0%, #f7f3ff 100%)',\\n  },\\n  {\\n    algorithm: theme.darkAlgorithm,\\n    background: 'linear-gradient(97deg, rgba(90,196,255,0.12) 0%, rgba(174,136,255,0.12) 100%)',\\n  },\\n];\\n\\nconst Demo = () => {\\n  return (\\n    <Flex vertical>\\n      {items.map(({ algorithm, background }, index) => (\\n        <ConfigProvider\\n          key={index}\\n          theme={{\\n            algorithm,\\n          }}\\n        >\\n          <Card style={{ borderRadius: 0 }}>\\n            <Welcome\\n              style={{\\n                backgroundImage: background,\\n                borderStartStartRadius: 4,\\n              }}\\n              icon=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n              title=\\\"Hello, I'm Ant Design X\\\"\\n              description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n            />\\n          </Card>\\n        </ConfigProvider>\\n      ))}\\n    </Flex>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/welcome/demo/variant.tsx?watch=parent';\n  export default \"import { EllipsisOutlined, ShareAltOutlined } from '@ant-design/icons';\\nimport { Welcome } from '@ant-design/x';\\nimport { Button, Space } from 'antd';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  return (\\n    <Welcome\\n      variant=\\\"borderless\\\"\\n      icon=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n      title=\\\"Hello, I'm Ant Design X\\\"\\n      description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n      extra={\\n        <Space>\\n          <Button icon={<ShareAltOutlined />} />\\n          <Button icon={<EllipsisOutlined />} />\\n        </Space>\\n      }\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/shape.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Flex } from 'antd';\\nimport React from 'react';\\n\\nconst sharedLongTextProps: BubbleProps = {\\n  placement: 'end',\\n  content:\\n    'This is a long text message to show the multiline view of the bubble component. '.repeat(3),\\n  styles: { content: { maxWidth: 500 } },\\n};\\n\\nconst App = () => (\\n  <Flex gap=\\\"middle\\\" vertical>\\n    <Bubble content=\\\"shape: default\\\" />\\n    <Bubble {...sharedLongTextProps} />\\n    <Bubble content=\\\"shape: round\\\" shape=\\\"round\\\" />\\n    <Bubble {...sharedLongTextProps} shape=\\\"round\\\" />\\n    <Bubble content=\\\"shape: corner\\\" shape=\\\"corner\\\" />\\n    <Bubble {...sharedLongTextProps} shape=\\\"corner\\\" />\\n  </Flex>\\n);\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/prompts/demo/nest.tsx?watch=parent';\n  export default \"import {\\n  CommentOutlined,\\n  FireOutlined,\\n  HeartOutlined,\\n  ReadOutlined,\\n  RocketOutlined,\\n  SmileOutlined,\\n} from '@ant-design/icons';\\nimport { Prompts } from '@ant-design/x';\\nimport type { PromptsProps } from '@ant-design/x';\\nimport { App, Card, ConfigProvider, Space, theme } from 'antd';\\nimport React from 'react';\\n\\nconst renderTitle = (icon: React.ReactElement, title: string) => (\\n  <Space align=\\\"start\\\">\\n    {icon}\\n    <span>{title}</span>\\n  </Space>\\n);\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    label: renderTitle(<FireOutlined style={{ color: '#FF4D4F' }} />, 'Hot Topics'),\\n    description: 'What are you interested in?',\\n    children: [\\n      {\\n        key: '1-1',\\n        description: `What's new in X?`,\\n      },\\n      {\\n        key: '1-2',\\n        description: `What's AGI?`,\\n      },\\n      {\\n        key: '1-3',\\n        description: `Where is the doc?`,\\n      },\\n    ],\\n  },\\n  {\\n    key: '2',\\n    label: renderTitle(<ReadOutlined style={{ color: '#1890FF' }} />, 'Design Guide'),\\n    description: 'How to design a good product?',\\n    children: [\\n      {\\n        key: '2-1',\\n        icon: <HeartOutlined />,\\n        description: `Know the well`,\\n      },\\n      {\\n        key: '2-2',\\n        icon: <SmileOutlined />,\\n        description: `Set the AI role`,\\n      },\\n      {\\n        key: '2-3',\\n        icon: <CommentOutlined />,\\n        description: `Express the feeling`,\\n      },\\n    ],\\n  },\\n  {\\n    key: '3',\\n    label: renderTitle(<RocketOutlined style={{ color: '#722ED1' }} />, 'Start Creating'),\\n    description: 'How to start a new project?',\\n    children: [\\n      {\\n        key: '3-1',\\n        label: 'Fast Start',\\n        description: `Install Ant Design X`,\\n      },\\n      {\\n        key: '3-2',\\n        label: 'Online Playground',\\n        description: `Play on the web without installing`,\\n      },\\n    ],\\n  },\\n];\\n\\nconst Demo = () => {\\n  const { message } = App.useApp();\\n\\n  return (\\n    <ConfigProvider\\n      theme={{\\n        algorithm: theme.defaultAlgorithm,\\n      }}\\n    >\\n      <Card style={{ borderRadius: 0, border: 0 }}>\\n        <Prompts\\n          title=\\\"Do you want?\\\"\\n          items={items}\\n          wrap\\n          styles={{\\n            item: {\\n              flex: 'none',\\n              width: 'calc(30% - 6px)',\\n              backgroundImage: `linear-gradient(137deg, #e5f4ff 0%, #efe7ff 100%)`,\\n              border: 0,\\n            },\\n            subItem: {\\n              background: 'rgba(255,255,255,0.45)',\\n              border: '1px solid #FFF',\\n            },\\n          }}\\n          onItemClick={(info) => {\\n            message.success(`You clicked a prompt: ${info.data.key}`);\\n          }}\\n        />\\n      </Card>\\n    </ConfigProvider>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { SearchOutlined } from '@ant-design/icons';\nimport { Affix, Card, Col, Divider, Flex, Input, Row, Tag, Typography } from 'antd';\nimport { createStyles, useTheme } from 'antd-style';\nimport { useIntl, useLocation, useSidebarData } from 'dumi';\nimport debounce from 'lodash/debounce';\nimport React, { memo, useContext, useMemo, useRef, useState } from 'react';\nimport type { CSSProperties } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport Link from '../../common/Link';\nimport SiteContext from '../../slots/SiteContext';\nimport type { Component } from './ProComponentsList';\n// import proComponentsList from './ProComponentsList';\n\nconst useStyle = createStyles(({ token, css }) => ({\n  componentsOverviewGroupTitle: css`\n    margin-bottom: ${token.marginLG}px !important;\n  `,\n  componentsOverviewTitle: css`\n    overflow: hidden;\n    color: ${token.colorTextHeading};\n    text-overflow: ellipsis;\n  `,\n  componentsOverviewImg: css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 152px;\n  `,\n  componentsOverviewCard: css`\n    cursor: pointer;\n    transition: all 0.5s;\n    &:hover {\n      box-shadow:\n        0 6px 16px -8px #00000014,\n        0 9px 28px #0000000d,\n        0 12px 48px 16px #00000008;\n    }\n  `,\n  componentsOverviewAffix: css`\n    display: flex;\n    transition: all ${token.motionDurationSlow};\n    justify-content: space-between;\n  `,\n  componentsOverviewSearch: css`\n    padding: 0;\n    box-shadow: none !important;\n    .anticon-search {\n      color: ${token.colorTextDisabled};\n    }\n  `,\n  componentsOverviewContent: css`\n    &:empty:after {\n      display: block;\n      padding: ${token.padding}px 0 ${token.paddingMD * 2}px;\n      color: ${token.colorTextDisabled};\n      text-align: center;\n      border-bottom: 1px solid ${token.colorSplit};\n      content: 'Not Found';\n    }\n  `,\n}));\n\nconst onClickCard = (pathname: string) => {\n  if (window.gtag) {\n    window.gtag('event', '点击', {\n      event_category: '组件总览卡片',\n      event_label: pathname,\n    });\n  }\n};\n\nconst reportSearch = debounce<(value: string) => void>((value) => {\n  if (window.gtag) {\n    window.gtag('event', '搜索', {\n      event_category: '组件总览卡片',\n      event_label: value,\n    });\n  }\n}, 2000);\n\nconst { Title } = Typography;\n\nconst Overview: React.FC = () => {\n  const { styles } = useStyle();\n  const { theme } = useContext(SiteContext);\n\n  const data = useSidebarData();\n  const [searchBarAffixed, setSearchBarAffixed] = useState<boolean>(false);\n\n  const token = useTheme();\n  const { borderRadius, colorBgContainer, fontSizeXL, anchorTop } = token;\n\n  const affixedStyle: CSSProperties = {\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0 6px 12px -2px, rgba(0, 0, 0, 0.3) 0 3px 7px -3px',\n    padding: 8,\n    margin: -8,\n    borderRadius,\n    backgroundColor: colorBgContainer,\n  };\n\n  const { search: urlSearch } = useLocation();\n  const { locale, formatMessage } = useIntl();\n\n  const [search, setSearch] = useState<string>(() => {\n    const params = new URLSearchParams(urlSearch);\n    if (params.has('s')) {\n      return params.get('s') || '';\n    }\n    return '';\n  });\n\n  const sectionRef = useRef<HTMLElement>(null);\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (event) => {\n    if (event.keyCode === 13 && search.trim().length) {\n      sectionRef.current?.querySelector<HTMLElement>(`.${styles.componentsOverviewCard}`)?.click();\n    }\n  };\n\n  const groups = useMemo<{ title: string; children: Component[] }[]>(\n    () =>\n      data\n        .filter((item) => item?.title)\n        .map<{ title: string; children: Component[] }>((item) => ({\n          title: item?.title || '',\n          children: item.children.map((child) => ({\n            title: child.frontmatter?.title || '',\n            subtitle: child.frontmatter?.subtitle,\n            cover: child.frontmatter?.cover,\n            coverDark: child.frontmatter?.coverDark,\n            link: child.link,\n          })),\n        })),\n    // .concat([\n    //   {\n    //     title: locale === 'zh-CN' ? '重型组件' : 'Others',\n    //     children:\n    //       locale === 'zh-CN'\n    //         ? proComponentsList\n    //         : proComponentsList.map((component) => ({ ...component, subtitle: '' })),\n    //   },\n    // ])\n    [data, locale],\n  );\n  return (\n    <section className=\"markdown\" ref={sectionRef}>\n      <Divider />\n      <Affix offsetTop={anchorTop} onChange={(affixed) => setSearchBarAffixed(!!affixed)}>\n        <div\n          className={styles.componentsOverviewAffix}\n          style={searchBarAffixed ? affixedStyle : {}}\n        >\n          <Input\n            autoFocus\n            value={search}\n            placeholder={formatMessage({ id: 'app.components.overview.search' })}\n            className={styles.componentsOverviewSearch}\n            onChange={(e) => {\n              setSearch(e.target.value);\n              reportSearch(e.target.value);\n              if (sectionRef.current && searchBarAffixed) {\n                scrollIntoView(sectionRef.current, {\n                  scrollMode: 'if-needed',\n                  block: 'start',\n                  behavior: (actions) =>\n                    actions.forEach(({ el, top }) => {\n                      el.scrollTop = top - 64;\n                    }),\n                });\n              }\n            }}\n            onKeyDown={onKeyDown}\n            variant=\"borderless\"\n            suffix={<SearchOutlined />}\n            style={{ fontSize: searchBarAffixed ? fontSizeXL - 2 : fontSizeXL }}\n          />\n        </div>\n      </Affix>\n      <Divider />\n      <div className={styles.componentsOverviewContent}>\n        {groups\n          .filter((i) => i?.title)\n          .map((group) => {\n            const components = group?.children?.filter(\n              (component) =>\n                !search.trim() ||\n                component?.title?.toLowerCase()?.includes(search.trim().toLowerCase()) ||\n                (component?.subtitle || '').toLowerCase().includes(search.trim().toLowerCase()),\n            );\n            return components?.length ? (\n              <div key={group?.title}>\n                <Title level={2} className={styles.componentsOverviewGroupTitle}>\n                  <Flex gap=\"small\" align=\"center\">\n                    <span style={{ fontSize: 24 }}>{group?.title}</span>\n                    <Tag style={{ display: 'block' }}>{components.length}</Tag>\n                  </Flex>\n                </Title>\n                <Row gutter={[24, 24]}>\n                  {components.map((component) => {\n                    let url = component.link;\n                    /** 是否是外链 */\n                    const isExternalLink = url.startsWith('http');\n\n                    if (!isExternalLink) {\n                      url += urlSearch;\n                    }\n\n                    const cardContent = (\n                      <Card\n                        key={component.title}\n                        onClick={() => onClickCard(url)}\n                        styles={{\n                          body: {\n                            backgroundRepeat: 'no-repeat',\n                            backgroundPosition: 'bottom right',\n                            backgroundImage: `url(${component.tag || ''})`,\n                          },\n                        }}\n                        size=\"small\"\n                        className={styles.componentsOverviewCard}\n                        title={\n                          <div className={styles.componentsOverviewTitle}>\n                            {component.title} {component.subtitle}\n                          </div>\n                        }\n                      >\n                        <div className={styles.componentsOverviewImg}>\n                          <img\n                            src={\n                              theme.includes('dark') && component.coverDark\n                                ? component.coverDark\n                                : component.cover\n                            }\n                            alt={component.title}\n                          />\n                        </div>\n                      </Card>\n                    );\n\n                    const linkContent = isExternalLink ? (\n                      <a href={url} key={component.title}>\n                        {cardContent}\n                      </a>\n                    ) : (\n                      <Link to={url} key={component.title}>\n                        {cardContent}\n                      </Link>\n                    );\n\n                    return (\n                      <Col xs={24} sm={12} lg={8} xl={6} key={component.title}>\n                        {linkContent}\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </div>\n            ) : null;\n          })}\n      </div>\n    </section>\n  );\n};\n\nexport default memo(Overview);\n","import { type GetRef, Upload, type UploadProps } from 'antd';\nimport React from 'react';\n\nexport interface SilentUploaderProps {\n  children: React.ReactElement;\n  upload: UploadProps;\n  rootClassName?: string;\n}\n\n/**\n * SilentUploader is only wrap children with antd Upload component.\n */\nfunction SilentUploader(props: SilentUploaderProps, ref: React.Ref<GetRef<typeof Upload>>) {\n  const { children, upload, rootClassName } = props;\n\n  const uploadRef = React.useRef<GetRef<typeof Upload>>(null);\n  React.useImperativeHandle(ref, () => uploadRef.current!);\n\n  // ============================ Render ============================\n  return (\n    <Upload {...upload} showUploadList={false} rootClassName={rootClassName} ref={uploadRef}>\n      {children}\n    </Upload>\n  );\n}\n\nexport default React.forwardRef(SilentUploader);\n","import fetch from 'cross-fetch';\n\nimport use from '../use';\nimport FetchCache from './cache';\n\nconst cache = new FetchCache();\n\nconst useFetch = <T>(options: string | { request: () => PromiseLike<T>; key: string }) => {\n  let request;\n  let key;\n  if (typeof options === 'string') {\n    request = () => fetch(options).then((res) => res.json());\n    key = options;\n  } else {\n    request = options.request;\n    key = options.key;\n  }\n  return use(cache.promise<T>(key, request));\n};\n\nexport default useFetch;\n","import React from 'react';\n\ninterface LoadingProps {\n  prefixCls?: string;\n}\n\nconst Loading: React.FC<Readonly<LoadingProps>> = ({ prefixCls }) => (\n  <span className={`${prefixCls}-dot`}>\n    <i className={`${prefixCls}-dot-item`} key={`item-${1}`} />\n    <i className={`${prefixCls}-dot-item`} key={`item-${2}`} />\n    <i className={`${prefixCls}-dot-item`} key={`item-${3}`} />\n  </span>\n);\n\nexport default Loading;\n","\n  import '/home/runner/work/x/x/components/sender/demo/submitType.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Sender } from '@ant-design/x';\\nimport { App } from 'antd';\\n\\nconst Demo: React.FC = () => {\\n  const { message } = App.useApp();\\n\\n  return (\\n    <Sender\\n      submitType=\\\"shiftEnter\\\"\\n      placeholder=\\\"Press Shift + Enter to send message\\\"\\n      onSubmit={() => {\\n        message.success('Send message successfully!');\\n      }}\\n    />\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\nimport { genShapeStyle, genVariantStyle } from './content';\nimport genBubbleListStyle from './list';\n\nconst loadingMove = new Keyframes('loadingMove', {\n  '0%': {\n    transform: 'translateY(0)',\n  },\n  '10%': {\n    transform: 'translateY(4px)',\n  },\n  '20%': {\n    transform: 'translateY(0)',\n  },\n  '30%': {\n    transform: 'translateY(-4px)',\n  },\n  '40%': {\n    transform: 'translateY(0)',\n  },\n});\n\nconst cursorBlink = new Keyframes('cursorBlink', {\n  '0%': {\n    opacity: 1,\n  },\n  '50%': {\n    opacity: 0,\n  },\n  '100%': {\n    opacity: 1,\n  },\n});\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface BubbleToken extends FullToken<'Bubble'> {}\n\nconst genBubbleStyle: GenerateStyle<BubbleToken> = (token) => {\n  const { componentCls, fontSize, lineHeight, paddingSM, colorText, calc } = token;\n  return {\n    [componentCls]: {\n      display: 'flex',\n      columnGap: paddingSM,\n      [`&${componentCls}-end`]: {\n        justifyContent: 'end',\n        flexDirection: 'row-reverse',\n\n        [`& ${componentCls}-content-wrapper`]: {\n          alignItems: 'flex-end',\n        },\n      },\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl',\n      },\n      [`&${componentCls}-typing ${componentCls}-content:last-child::after`]: {\n        content: '\"|\"',\n        fontWeight: 900,\n        userSelect: 'none',\n        opacity: 1,\n        marginInlineStart: '0.1em',\n        animationName: cursorBlink,\n        animationDuration: '0.8s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n      },\n\n      // ============================ Avatar =============================\n      [`& ${componentCls}-avatar`]: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignSelf: 'flex-start',\n      },\n\n      // ======================== Header & Footer ========================\n      [`& ${componentCls}-header, & ${componentCls}-footer`]: {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        color: token.colorText,\n      },\n\n      [`& ${componentCls}-header`]: {\n        marginBottom: token.paddingXXS,\n      },\n\n      [`& ${componentCls}-footer`]: {\n        marginTop: paddingSM,\n      },\n\n      // =========================== Content =============================\n      [`& ${componentCls}-content-wrapper`]: {\n        flex: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        minWidth: 0,\n        maxWidth: '100%',\n      },\n\n      [`& ${componentCls}-content`]: {\n        position: 'relative',\n        boxSizing: 'border-box',\n        minWidth: 0,\n        maxWidth: '100%',\n\n        color: colorText,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        minHeight: calc(paddingSM).mul(2).add(calc(lineHeight).mul(fontSize)).equal(),\n\n        wordBreak: 'break-word',\n\n        [`& ${componentCls}-dot`]: {\n          position: 'relative',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          columnGap: token.marginXS,\n          padding: `0 ${unit(token.paddingXXS)}`,\n          '&-item': {\n            backgroundColor: token.colorPrimary,\n            borderRadius: '100%',\n            width: 4,\n            height: 4,\n            animationName: loadingMove,\n            animationDuration: '2s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'linear',\n            '&:nth-child(1)': {\n              animationDelay: '0s',\n            },\n            '&:nth-child(2)': {\n              animationDelay: '0.2s',\n            },\n            '&:nth-child(3)': {\n              animationDelay: '0.4s',\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Bubble'> = () => ({});\n\nexport default genStyleHooks<'Bubble'>(\n  'Bubble',\n  (token) => {\n    const bubbleToken = mergeToken<BubbleToken>(token, {});\n    return [\n      genBubbleStyle(bubbleToken),\n      genBubbleListStyle(bubbleToken),\n      genVariantStyle(bubbleToken),\n      genShapeStyle(bubbleToken),\n    ];\n  },\n  prepareComponentToken,\n);\n","import { createStyles, css } from 'antd-style';\nimport classNames from 'classnames';\nimport React from 'react';\n\ninterface IconProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst useStyle = createStyles(() => ({\n  iconWrap: css`\n    display: inline-flex;\n    align-items: center;\n    line-height: 0;\n    text-align: center;\n    vertical-align: -0.125em;\n  `,\n}));\n\nconst NpmIcon: React.FC<IconProps> = (props) => {\n  const { className, style } = props;\n  const { styles } = useStyle();\n  return (\n    <span className={classNames(styles.iconWrap, className)} style={style}>\n      <svg\n        fill=\"#E53E3E\"\n        focusable=\"false\"\n        height=\"1em\"\n        stroke=\"#E53E3E\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 16 16\"\n        width=\"1em\"\n      >\n        <title>npm icon</title>\n        <path d=\"M0 0v16h16v-16h-16zM13 13h-2v-8h-3v8h-5v-10h10v10z\" />\n      </svg>\n    </span>\n  );\n};\n\nexport default NpmIcon;\n","import { AudioMutedOutlined, AudioOutlined } from '@ant-design/icons';\nimport type { ButtonProps } from 'antd';\nimport * as React from 'react';\nimport ActionButton, { ActionButtonContext } from '../ActionButton';\nimport RecordingIcon from './RecordingIcon';\n\nfunction SpeechButton(props: ButtonProps, ref: React.Ref<HTMLButtonElement>) {\n  const { speechRecording, onSpeechDisabled, prefixCls } = React.useContext(ActionButtonContext);\n\n  let icon: React.ReactNode = null;\n  if (speechRecording) {\n    icon = <RecordingIcon className={`${prefixCls}-recording-icon`} />;\n  } else if (onSpeechDisabled) {\n    icon = <AudioMutedOutlined />;\n  } else {\n    icon = <AudioOutlined />;\n  }\n\n  return (\n    <ActionButton\n      icon={icon}\n      color=\"primary\"\n      variant=\"text\"\n      {...props}\n      action=\"onSpeech\"\n      ref={ref}\n    />\n  );\n}\n\nexport default React.forwardRef(SpeechButton);\n","\n  import '/home/runner/work/x/x/components/x-provider/demo/use.tsx?watch=parent';\n  export default \"import {\\n  Bubble,\\n  Conversations,\\n  Prompts,\\n  Sender,\\n  Suggestion,\\n  ThoughtChain,\\n  XProvider,\\n} from '@ant-design/x';\\nimport { Card, Divider, Flex, Radio, Typography } from 'antd';\\nimport React from 'react';\\n\\nimport {\\n  AlipayCircleOutlined,\\n  BulbOutlined,\\n  CheckCircleOutlined,\\n  GithubOutlined,\\n  LoadingOutlined,\\n  SmileOutlined,\\n  UserOutlined,\\n} from '@ant-design/icons';\\nimport type { ConfigProviderProps, GetProp } from 'antd';\\n\\nexport default () => {\\n  const [value, setValue] = React.useState('');\\n  const [direction, setDirection] =\\n    React.useState<GetProp<ConfigProviderProps, 'direction'>>('ltr');\\n\\n  return (\\n    <>\\n      <Flex gap={12} style={{ marginBottom: 16 }} align=\\\"center\\\">\\n        <Typography.Text>Direction:</Typography.Text>\\n        <Radio.Group value={direction} onChange={(e) => setDirection(e.target.value)}>\\n          <Radio.Button value=\\\"ltr\\\">LTR</Radio.Button>\\n          <Radio.Button value=\\\"rtl\\\">RTL</Radio.Button>\\n        </Radio.Group>\\n      </Flex>\\n      <Card>\\n        <XProvider direction={direction}>\\n          <Flex style={{ height: 500 }} gap={12}>\\n            <Conversations\\n              style={{ width: 200 }}\\n              defaultActiveKey=\\\"1\\\"\\n              items={[\\n                {\\n                  key: '1',\\n                  label: 'Conversation - 1',\\n                  icon: <GithubOutlined />,\\n                },\\n                {\\n                  key: '2',\\n                  label: 'Conversation - 2',\\n                  icon: <AlipayCircleOutlined />,\\n                },\\n              ]}\\n            />\\n            <Divider type=\\\"vertical\\\" style={{ height: '100%' }} />\\n            <Flex vertical style={{ flex: 1 }} gap={8}>\\n              <Bubble.List\\n                style={{ flex: 1 }}\\n                items={[\\n                  {\\n                    key: '1',\\n                    placement: 'end',\\n                    content: 'Hello Ant Design X!',\\n                    avatar: { icon: <UserOutlined /> },\\n                  },\\n                  {\\n                    key: '2',\\n                    content: 'Hello World!',\\n                  },\\n                  {\\n                    key: '2',\\n                    content: '',\\n                    loading: true,\\n                  },\\n                ]}\\n              />\\n              <Prompts\\n                items={[\\n                  {\\n                    key: '1',\\n                    icon: <BulbOutlined style={{ color: '#FFD700' }} />,\\n                    label: 'Ignite Your Creativity',\\n                  },\\n                  {\\n                    key: '2',\\n                    icon: <SmileOutlined style={{ color: '#52C41A' }} />,\\n                    label: 'Tell me a Joke',\\n                  },\\n                ]}\\n              />\\n              <Suggestion items={[{ label: 'Write a report', value: 'report' }]}>\\n                {({ onTrigger, onKeyDown }) => {\\n                  return (\\n                    <Sender\\n                      value={value}\\n                      onChange={(nextVal) => {\\n                        if (nextVal === '/') {\\n                          onTrigger();\\n                        } else if (!nextVal) {\\n                          onTrigger(false);\\n                        }\\n                        setValue(nextVal);\\n                      }}\\n                      onKeyDown={onKeyDown}\\n                      placeholder='Type \\\"/\\\" to trigger suggestion'\\n                    />\\n                  );\\n                }}\\n              </Suggestion>\\n            </Flex>\\n            <Divider type=\\\"vertical\\\" style={{ height: '100%' }} />\\n            <ThoughtChain\\n              style={{ width: 200 }}\\n              items={[\\n                {\\n                  title: 'Hello Ant Design X!',\\n                  status: 'success',\\n                  description: 'status: success',\\n                  icon: <CheckCircleOutlined />,\\n                  content: 'Ant Design X help you build AI chat/platform app as ready-to-use 📦.',\\n                },\\n                {\\n                  title: 'Hello World!',\\n                  status: 'success',\\n                  description: 'status: success',\\n                  icon: <CheckCircleOutlined />,\\n                },\\n                {\\n                  title: 'Pending...',\\n                  status: 'pending',\\n                  description: 'status: pending',\\n                  icon: <LoadingOutlined />,\\n                },\\n              ]}\\n            />\\n          </Flex>\\n        </XProvider>\\n      </Card>\\n    </>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/prompts/demo/flex-vertical.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Prompts } from '@ant-design/x';\\nimport { FireOutlined, CoffeeOutlined, SmileOutlined } from '@ant-design/icons';\\n\\nimport type { PromptsProps } from '@ant-design/x';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '6',\\n    icon: <CoffeeOutlined style={{ color: '#964B00' }} />,\\n    description: 'How to rest effectively after long hours of work?',\\n    disabled: false,\\n  },\\n  {\\n    key: '7',\\n    icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\\n    description: 'What are the secrets to maintaining a positive mindset?',\\n    disabled: false,\\n  },\\n  {\\n    key: '8',\\n    icon: <FireOutlined style={{ color: '#FF4D4F' }} />,\\n    description: 'How to stay calm under immense pressure?',\\n    disabled: false,\\n  },\\n];\\n\\nconst App = () => <Prompts title=\\\"🤔 You might also want to ask:\\\" items={items} vertical />;\\n\\nexport default App;\\n\";;\n  ","import * as React from 'react';\nimport type { ColorInput } from '@ctrl/tinycolor';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { createStyles } from 'antd-style';\n\nconst useStyle = createStyles(({ token, css }) => ({\n  codeSpan: css`\n    padding: 0.2em 0.4em;\n    font-size: 0.9em;\n    background: ${token.siteMarkdownCodeBg};\n    border-radius: ${token.borderRadius}px;\n    font-family: monospace;\n  `,\n  dot: css`\n    display: inline-block;\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    margin-inline-end: ${token.marginXXS}px;\n    border: 1px solid ${token.colorSplit};\n  `,\n}));\n\ninterface ColorChunkProps {\n  value?: ColorInput;\n}\n\nconst ColorChunk: React.FC<React.PropsWithChildren<ColorChunkProps>> = (props) => {\n  const { styles } = useStyle();\n  const { value, children } = props;\n\n  const dotColor = React.useMemo(() => {\n    const _color = new TinyColor(value).toHex8String();\n    return _color.endsWith('ff') ? _color.slice(0, -2) : _color;\n  }, [value]);\n\n  return (\n    <span className={styles.codeSpan}>\n      <span className={styles.dot} style={{ backgroundColor: dotColor }} />\n      {children ?? dotColor}\n    </span>\n  );\n};\n\nexport default ColorChunk;\n","\n  import '/home/runner/work/x/x/components/attachments/demo/with-sender.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\\nimport { Attachments, AttachmentsProps, Sender } from '@ant-design/x';\\nimport { App, Badge, Button, Flex, type GetProp, type GetRef, Typography } from 'antd';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  const [open, setOpen] = React.useState(true);\\n  const [items, setItems] = React.useState<GetProp<AttachmentsProps, 'items'>>([]);\\n  const [text, setText] = React.useState('');\\n\\n  const { notification } = App.useApp();\\n\\n  const senderRef = React.useRef<GetRef<typeof Sender>>(null);\\n\\n  const senderHeader = (\\n    <Sender.Header\\n      title=\\\"Attachments\\\"\\n      open={open}\\n      onOpenChange={setOpen}\\n      styles={{\\n        content: {\\n          padding: 0,\\n        },\\n      }}\\n    >\\n      <Attachments\\n        // Mock not real upload file\\n        beforeUpload={() => false}\\n        items={items}\\n        onChange={({ fileList }) => setItems(fileList)}\\n        placeholder={(type) =>\\n          type === 'drop'\\n            ? {\\n                title: 'Drop file here',\\n              }\\n            : {\\n                icon: <CloudUploadOutlined />,\\n                title: 'Upload files',\\n                description: 'Click or drag files to this area to upload',\\n              }\\n        }\\n        getDropContainer={() => senderRef.current?.nativeElement}\\n      />\\n    </Sender.Header>\\n  );\\n\\n  return (\\n    <Flex style={{ minHeight: 250 }} align=\\\"flex-end\\\">\\n      <Sender\\n        ref={senderRef}\\n        header={senderHeader}\\n        prefix={\\n          <Badge dot={items.length > 0 && !open}>\\n            <Button onClick={() => setOpen(!open)} icon={<LinkOutlined />} />\\n          </Badge>\\n        }\\n        value={text}\\n        onChange={setText}\\n        onSubmit={() => {\\n          notification.info({\\n            message: 'Mock Submit',\\n            description: (\\n              <Typography>\\n                <ul>\\n                  <li>You said: {text}</li>\\n                  <li>\\n                    Attachments count: {items.length}\\n                    <ul>\\n                      {items.map((item) => (\\n                        <li key={item.uid}>{item.name}</li>\\n                      ))}\\n                    </ul>\\n                  </li>\\n                </ul>\\n              </Typography>\\n            ),\\n          });\\n\\n          setItems([]);\\n          setText('');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import React from 'react';\n\nexport default function VideoIcon() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      // xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <title>video</title>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path\n          d=\"M14.1178571,4.0125 C14.225,4.11964286 14.2857143,4.26428571 14.2857143,4.41607143 L14.2857143,15.4285714 C14.2857143,15.7446429 14.0303571,16 13.7142857,16 L2.28571429,16 C1.96964286,16 1.71428571,15.7446429 1.71428571,15.4285714 L1.71428571,0.571428571 C1.71428571,0.255357143 1.96964286,0 2.28571429,0 L9.86964286,0 C10.0214286,0 10.1678571,0.0607142857 10.275,0.167857143 L14.1178571,4.0125 Z M12.9678571,4.67857143 L9.60714286,1.31785714 L9.60714286,4.67857143 L12.9678571,4.67857143 Z M10.5379461,10.3101106 L6.68957555,13.0059749 C6.59910784,13.0693494 6.47439406,13.0473861 6.41101953,12.9569184 C6.3874624,12.9232903 6.37482581,12.8832269 6.37482581,12.8421686 L6.37482581,7.45043999 C6.37482581,7.33998304 6.46436886,7.25043999 6.57482581,7.25043999 C6.61588409,7.25043999 6.65594753,7.26307658 6.68957555,7.28663371 L10.5379461,9.98249803 C10.6284138,10.0458726 10.6503772,10.1705863 10.5870027,10.2610541 C10.5736331,10.2801392 10.5570312,10.2967411 10.5379461,10.3101106 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </svg>\n  );\n}\n","\n  import '/home/runner/work/x/x/components/suggestion/demo/trigger.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Suggestion } from '@ant-design/x';\\nimport { Select } from 'antd';\\n\\nlet uuid = 0;\\n\\nconst Demo: React.FC = () => {\\n  const [tags, setTags] = React.useState<string[]>([]);\\n  const [value, setValue] = React.useState('');\\n\\n  return (\\n    <Suggestion<string>\\n      items={(info) => [{ label: `Trigger by '${info}'`, value: String(info) }]}\\n      onSelect={(info) => {\\n        uuid += 1;\\n        setTags([...tags, `Cell_${uuid}`]);\\n        setValue(value.replace(info, ''));\\n      }}\\n    >\\n      {({ onTrigger, onKeyDown }) => {\\n        return (\\n          <Select\\n            value={tags}\\n            style={{ width: '100%' }}\\n            mode=\\\"tags\\\"\\n            open={false}\\n            searchValue={value}\\n            onChange={(nextTags) => {\\n              if (nextTags.length < tags.length) {\\n                setTags(nextTags);\\n              }\\n            }}\\n            onSearch={(nextVal) => {\\n              setValue(nextVal);\\n            }}\\n            onKeyDown={(e) => {\\n              if (e.key === '/' || e.key === '#') {\\n                onTrigger(e.key);\\n              }\\n              onKeyDown(e);\\n            }}\\n            placeholder=\\\"可任意输入 / 与 # 多次获取建议\\\"\\n          />\\n        );\\n      }}\\n    </Suggestion>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","import classnames from 'classnames';\nimport pickAttrs from 'rc-util/lib/pickAttrs';\nimport React from 'react';\n\nimport { useXProviderContext } from '../x-provider';\nimport useCollapsible from './hooks/useCollapsible';\nimport useStyle from './style';\n\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport ThoughtChainNode, { ThoughtChainNodeContext } from './Item';\n\nimport type { ConfigProviderProps } from 'antd';\nimport type { ThoughtChainItem } from './Item';\nimport type { Collapsible } from './hooks/useCollapsible';\n\nexport type SemanticType = 'item' | 'itemHeader' | 'itemContent' | 'itemFooter';\n\nexport interface ThoughtChainProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * @desc 思维节点集合\n   * @descEN chain items\n   */\n  items?: ThoughtChainItem[];\n\n  /**\n   * @desc 是否可折叠\n   * @descEN Whether collapsible\n   */\n  collapsible?: Collapsible;\n\n  /**\n   * @desc 组件大小\n   * @descEN Component size\n   */\n  size?: ConfigProviderProps['componentSize'];\n\n  /**\n   * @desc 语义化结构 style\n   * @descEN Semantic structure styles\n   */\n  styles?: Partial<Record<SemanticType, React.CSSProperties>>;\n\n  /**\n   * @desc 语义化结构 className\n   * @descEN Semantic structure class names\n   */\n  classNames?: Partial<Record<SemanticType, string>>;\n\n  /**\n   * @desc 自定义前缀\n   * @descEN Prefix\n   */\n  prefixCls?: string;\n\n  /**\n   * @desc 自定义根类名\n   * @descEN Custom class name\n   */\n  rootClassName?: string;\n}\n\nconst ThoughtChain: React.FC<ThoughtChainProps> = (props) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName,\n    className,\n    items,\n    collapsible,\n    styles = {},\n    style,\n    classNames = {},\n    size = 'middle',\n    ...restProps\n  } = props;\n\n  const domProps = pickAttrs(restProps, {\n    attr: true,\n    aria: true,\n    data: true,\n  });\n\n  // ============================ Prefix ============================\n  const { getPrefixCls, direction } = useXProviderContext();\n\n  const rootPrefixCls = getPrefixCls();\n\n  const prefixCls = getPrefixCls('thought-chain', customizePrefixCls);\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('thoughtChain');\n\n  // ============================ UseCollapsible ============================\n  const [enableCollapse, expandedKeys, onItemExpand, collapseMotion] = useCollapsible(\n    collapsible,\n    prefixCls,\n    rootPrefixCls,\n  );\n\n  // ============================ Style ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  const mergedCls = classnames(\n    className,\n    rootClassName,\n    prefixCls,\n    contextConfig.className,\n    hashId,\n    cssVarCls,\n    {\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n    },\n    `${prefixCls}-${size}`,\n  );\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <div {...domProps} className={mergedCls} style={{ ...contextConfig.style, ...style }}>\n      <ThoughtChainNodeContext.Provider\n        value={{\n          prefixCls,\n          enableCollapse,\n          collapseMotion,\n          expandedKeys,\n          direction,\n          classNames: {\n            itemHeader: classnames(contextConfig.classNames.itemHeader, classNames.itemHeader),\n            itemContent: classnames(contextConfig.classNames.itemContent, classNames.itemContent),\n            itemFooter: classnames(contextConfig.classNames.itemFooter, classNames.itemFooter),\n          },\n          styles: {\n            itemHeader: { ...contextConfig.styles.itemHeader, ...styles.itemHeader },\n            itemContent: { ...contextConfig.styles.itemContent, ...styles.itemContent },\n            itemFooter: { ...contextConfig.styles.itemFooter, ...styles.itemFooter },\n          },\n        }}\n      >\n        {items?.map((item, index) => (\n          <ThoughtChainNode\n            key={item.key || `key_${index}`}\n            className={classnames(contextConfig.classNames.item, classNames.item)}\n            style={{ ...contextConfig.styles.item, ...styles.item }}\n            info={{\n              ...item,\n              icon: item.icon || index + 1,\n            }}\n            onClick={onItemExpand}\n            nextStatus={items[index + 1]?.status || item.status}\n          />\n        ))}\n      </ThoughtChainNodeContext.Provider>\n    </div>,\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  ThoughtChain.displayName = 'ThoughtChain';\n}\n\nexport type { ThoughtChainItem };\n\nexport default ThoughtChain;\n","import React from 'react';\nimport XProviderContext from '../../x-provider/context';\n\nimport type { XComponentStyleConfig, XComponentsConfig } from '../../x-provider/context';\n\nconst defaultXComponentStyleConfig: XComponentStyleConfig = {\n  classNames: {},\n  styles: {},\n  className: '',\n  style: {},\n};\n\nconst useXComponentConfig = <C extends keyof XComponentsConfig>(\n  component: C,\n): Required<XComponentsConfig>[C] & XComponentStyleConfig => {\n  const xProviderContext = React.useContext(XProviderContext);\n\n  return React.useMemo(\n    () => ({\n      ...defaultXComponentStyleConfig,\n      ...xProviderContext[component],\n    }),\n    [xProviderContext[component]],\n  );\n};\n\nexport default useXComponentConfig;\n","\n  import '/home/runner/work/x/x/components/sender/demo/speech-custom.tsx?watch=parent';\n  export default \"import { Sender } from '@ant-design/x';\\nimport { App } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const { message } = App.useApp();\\n  const [recording, setRecording] = React.useState(false);\\n\\n  return (\\n    <Sender\\n      onSubmit={() => {\\n        message.success('Send message successfully!');\\n      }}\\n      allowSpeech={{\\n        // When setting `recording`, the built-in speech recognition feature will be disabled\\n        recording,\\n        onRecordingChange: (nextRecording) => {\\n          message.info(`Mock Customize Recording: ${nextRecording}`);\\n          setRecording(nextRecording);\\n        },\\n      }}\\n    />\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { Image } from 'antd';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport React from 'react';\n\ninterface ImagePreviewProps {\n  className?: string;\n  /** Do not show padding & background */\n  pure?: boolean;\n}\n\nfunction isGood(className: string): boolean {\n  return /\\bgood\\b/i.test(className);\n}\n\nfunction isBad(className: string): boolean {\n  return /\\bbad\\b/i.test(className);\n}\n\nfunction isInline(className: string): boolean {\n  return /\\binline\\b/i.test(className);\n}\n\nfunction isGoodBadImg(imgMeta: any): boolean {\n  return imgMeta.isGood || imgMeta.isBad;\n}\n\nfunction isCompareImg(imgMeta: any): boolean {\n  return isGoodBadImg(imgMeta) || imgMeta.inline;\n}\n\ninterface MateType {\n  className: string;\n  alt: string;\n  description: string;\n  src: string;\n  isGood: boolean;\n  isBad: boolean;\n  inline: boolean;\n}\n\nconst ImagePreview: React.FC<React.PropsWithChildren<ImagePreviewProps>> = (props) => {\n  const { children, className: rootClassName, pure } = props;\n  const imgs = toArray(children).filter((ele) => ele.type === 'img');\n\n  const imgsMeta = imgs.map<Partial<MateType>>((img) => {\n    const { alt, description, src, className } = img.props;\n    return {\n      className,\n      alt,\n      description,\n      src,\n      isGood: isGood(className),\n      isBad: isBad(className),\n      inline: isInline(className),\n    };\n  });\n\n  const imagesList = imgsMeta.map<React.ReactNode>((meta, index) => {\n    const metaCopy = { ...meta };\n    delete metaCopy.description;\n    delete metaCopy.isGood;\n    delete metaCopy.isBad;\n    return (\n      <div key={index}>\n        <div className=\"image-modal-container\">\n          <img {...metaCopy} src={meta.src} alt={meta.alt} />\n        </div>\n      </div>\n    );\n  });\n\n  const comparable =\n    (imgs.length === 2 && imgsMeta.every(isCompareImg)) ||\n    (imgs.length >= 2 && imgsMeta.every(isGoodBadImg));\n\n  const style: React.CSSProperties = comparable\n    ? { width: `${(100 / imgs.length).toFixed(3)}%` }\n    : {};\n\n  const hasCarousel = imgs.length > 1 && !comparable;\n\n  const previewClassName = classNames(rootClassName, 'clearfix', 'preview-image-boxes', {\n    'preview-image-boxes-compare': comparable,\n    'preview-image-boxes-with-carousel': hasCarousel,\n  });\n\n  // ===================== Render =====================\n  const imgWrapperCls = 'preview-image-wrapper';\n\n  return (\n    <div className={previewClassName}>\n      {!imgs.length && (\n        <div\n          className={imgWrapperCls}\n          style={pure ? { background: 'transparent', padding: 0 } : {}}\n        >\n          {children}\n        </div>\n      )}\n\n      {imagesList.map((_, index) => {\n        if (!comparable && index !== 0) {\n          return null;\n        }\n        const coverMeta = imgsMeta[index];\n        const imageWrapperClassName = classNames(imgWrapperCls, {\n          good: coverMeta.isGood,\n          bad: coverMeta.isBad,\n        });\n\n        return (\n          <div className=\"preview-image-box\" style={style} key={index}>\n            <div className={imageWrapperClassName}>\n              <Image className={coverMeta.className} src={coverMeta.src} alt={coverMeta.alt} />\n            </div>\n            <div className=\"preview-image-title\">{coverMeta.alt}</div>\n            <div\n              className=\"preview-image-description\"\n              // biome-ignore lint/security/noDangerouslySetInnerHtml: it's for markdown\n              dangerouslySetInnerHTML={{ __html: coverMeta.description ?? '' }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ImagePreview;\n","\n  import '/home/runner/work/x/x/components/conversations/demo/infinite-load.tsx?watch=parent';\n  export default \"import { RedoOutlined } from '@ant-design/icons';\\nimport { Conversations, type ConversationsProps } from '@ant-design/x';\\nimport { Avatar, Divider, type GetProp, Spin, theme } from 'antd';\\nimport React, { useEffect, useState } from 'react';\\nimport InfiniteScroll from 'react-infinite-scroll-component';\\n\\nconst App: React.FC = () => {\\n  const [loading, setLoading] = useState(false);\\n  const [data, setData] = useState<GetProp<ConversationsProps, 'items'>>([]);\\n\\n  const { token } = theme.useToken();\\n\\n  // Customize the style of the container\\n  const style = {\\n    width: 280,\\n    height: 600,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n    overflow: 'auto',\\n  };\\n\\n  const loadMoreData = () => {\\n    if (loading) {\\n      return;\\n    }\\n    setLoading(true);\\n    fetch('https://randomuser.me/api/?results=10&inc=name,gender,email,nat,picture&noinfo')\\n      .then((res) => res.json())\\n      .then((body) => {\\n        const formmatedData = body.results.map((i: any) => ({\\n          key: i.email,\\n          label: `${i.name.title} ${i.name.first} ${i.name.last}`,\\n          icon: <Avatar src={i.picture.thumbnail} />,\\n          group: i.nat,\\n        }));\\n\\n        setData([...data, ...formmatedData]);\\n        setLoading(false);\\n      })\\n      .catch(() => {\\n        setLoading(false);\\n      });\\n  };\\n\\n  useEffect(() => {\\n    loadMoreData();\\n  }, []);\\n\\n  return (\\n    <div id=\\\"scrollableDiv\\\" style={style}>\\n      <InfiniteScroll\\n        dataLength={data.length}\\n        next={loadMoreData}\\n        hasMore={data.length < 50}\\n        loader={\\n          <div style={{ textAlign: 'center' }}>\\n            <Spin indicator={<RedoOutlined spin />} size=\\\"small\\\" />\\n          </div>\\n        }\\n        endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\\n        scrollableTarget=\\\"scrollableDiv\\\"\\n        style={{ overflow: 'hidden' }}\\n      >\\n        <Conversations items={data} defaultActiveKey=\\\"demo1\\\" groupable />\\n      </InfiniteScroll>\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/thought-chain/demo/nested.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport type { ThoughtChainProps } from '@ant-design/x';\\n\\nimport { Card, Button } from 'antd';\\nimport { MoreOutlined } from '@ant-design/icons';\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    title: '1 - Thought Chain Item',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n    footer: <Button>1 - Thought Chain Item Footer</Button>,\\n    content: (\\n      <ThoughtChain\\n        items={[\\n          {\\n            title: '1-1 Thought Chain Item',\\n            description: 'description',\\n            extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n          },\\n          {\\n            title: '1-2 Thought Chain Item',\\n            description: 'description',\\n            extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n          },\\n        ]}\\n      />\\n    ),\\n  },\\n  {\\n    title: '2 - Thought Chain Item',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n    footer: <Button>2 - Thought Chain Item Footer</Button>,\\n    content: (\\n      <ThoughtChain\\n        items={[\\n          {\\n            title: '2-1 Thought Chain Item',\\n            description: 'description',\\n            extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n          },\\n          {\\n            title: '2-2 Thought Chain Item',\\n            description: 'description',\\n            extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n          },\\n        ]}\\n      />\\n    ),\\n  },\\n];\\n\\nexport default () => (\\n  <Card style={{ width: 500 }}>\\n    <ThoughtChain items={items} collapsible />\\n  </Card>\\n);\\n\";;\n  ","import { EllipsisOutlined } from '@ant-design/icons';\nimport { Dropdown, Tooltip, Typography } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport type { MenuProps } from 'antd';\nimport type { DirectionType } from 'antd/es/config-provider';\nimport pickAttrs from 'rc-util/lib/pickAttrs';\nimport type { Conversation } from './interface';\n\nexport interface ConversationsItemProps\n  extends Omit<React.HTMLAttributes<HTMLLIElement>, 'onClick'> {\n  info: Conversation;\n  prefixCls?: string;\n  direction?: DirectionType;\n  menu?: MenuProps;\n  active?: boolean;\n  onClick?: (info: Conversation) => void;\n}\n\nconst stopPropagation: React.MouseEventHandler<HTMLSpanElement> = (e) => {\n  e.stopPropagation();\n};\n\nconst ConversationsItem: React.FC<ConversationsItemProps> = (props) => {\n  const { prefixCls, info, className, direction, onClick, active, menu, ...restProps } = props;\n\n  const domProps = pickAttrs(restProps, {\n    aria: true,\n    data: true,\n    attr: true,\n  });\n\n  // ============================= MISC =============================\n  const { disabled } = info;\n\n  // =========================== Ellipsis ===========================\n  const [inEllipsis, onEllipsis] = React.useState(false);\n\n  // =========================== Tooltip ============================\n  const [opened, setOpened] = React.useState(false);\n\n  // ============================ Style =============================\n  const mergedCls = classnames(\n    className,\n    `${prefixCls}-item`,\n    { [`${prefixCls}-item-active`]: active && !disabled },\n    { [`${prefixCls}-item-disabled`]: disabled },\n  );\n\n  // ============================ Events ============================\n  const onInternalClick: React.MouseEventHandler<HTMLLIElement> = () => {\n    if (!disabled && onClick) {\n      onClick(info);\n    }\n  };\n\n  const onOpenChange = (open: boolean) => {\n    if (open) {\n      setOpened(!open);\n    }\n  };\n\n  // ============================ Render ============================\n  return (\n    <Tooltip\n      title={info.label}\n      open={inEllipsis && opened}\n      onOpenChange={setOpened}\n      placement={direction === 'rtl' ? 'left' : 'right'}\n    >\n      <li {...domProps} className={mergedCls} onClick={onInternalClick}>\n        {info.icon && <div className={`${prefixCls}-icon`}>{info.icon}</div>}\n        <Typography.Text\n          className={`${prefixCls}-label`}\n          ellipsis={{\n            onEllipsis,\n          }}\n        >\n          {info.label}\n        </Typography.Text>\n        {menu && !disabled && (\n          <Dropdown\n            menu={menu}\n            placement={direction === 'rtl' ? 'bottomLeft' : 'bottomRight'}\n            trigger={['click']}\n            disabled={disabled}\n            onOpenChange={onOpenChange}\n          >\n            <EllipsisOutlined\n              onClick={stopPropagation}\n              disabled={disabled}\n              className={`${prefixCls}-menu-icon`}\n            />\n          </Dropdown>\n        )}\n      </li>\n    </Tooltip>\n  );\n};\n\nexport default ConversationsItem;\n","import { Bubble, Prompts, Welcome, useXAgent, useXChat } from '@ant-design/x';\nimport { createStyles } from 'antd-style';\nimport React from 'react';\nimport useLocale from '../../../../hooks/useLocale';\nimport CustomizationProvider, { LOCALES } from '../../common/CustomizationProvider';\nimport CustomizationSender from '../../common/CustomizationSender';\n\nimport { BubbleDataType } from '@ant-design/x/es/bubble/BubbleList';\nimport { Flex, type GetProp, Skeleton } from 'antd';\n\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\n\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\n  ai: {\n    placement: 'start',\n    typing: { step: 5, interval: 20 },\n    style: {\n      maxWidth: 600,\n    },\n    styles: {\n      content: {\n        borderRadius: 16,\n      },\n    },\n  },\n  local: {\n    placement: 'end',\n    styles: {\n      content: {\n        borderRadius: 16,\n        background: '#3877FF',\n      },\n    },\n  },\n};\n\nlet mockSuccess = false;\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    container: css`\n      display: flex;\n      padding: ${token.paddingXL}px ${token.paddingMD}px;\n      box-sizing: border-box;\n      flex-direction: column;\n      gap: ${token.paddingSM}px;\n      height: 100%;\n      width: 350px;\n      background: #0000001a;\n   `,\n    content: css`\n      padding: ${token.paddingXL}px;\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      gap: ${token.padding}px;\n    `,\n    bubble_list: css`\n      flex: 1;\n    `,\n    placeholder_bubble: css`\n      .ant-welcome {\n        padding: 0;\n      }\n\n      .ant-welcome-title {\n        font-size: 16px !important;\n        font-weight: 500 !important;\n        opacity: 0.9;\n      }\n\n      .ant-welcome-description {\n        font-size: 12px;\n        opacity: 0.65;\n      }\n\n      .ant-welcome-icon {\n        img {\n          transform: scale(1.2);\n          margin-inline-end: 10px;\n        }\n      }\n\n      .ant-bubble-content {\n        overflow: hidden;\n        background: linear-gradient(135deg, #ffffff26 14%, #ffffff0d 59%) !important;\n        width: 100%;\n        border-radius: 16px;\n        padding: 24px;\n      }\n\n      .ant-prompts {\n        padding: 0;\n      }\n\n      .ant-prompts-item {\n        background: rgba(255, 255, 255, 0.05);\n        box-sizing: border-box;\n        padding: 8px 16px;\n        font-size: 12px;\n        height: 36px;\n        line-height: 36px;\n        border: none;\n        flex: 1;\n\n        \n      }\n    `,\n  };\n});\n\nconst AssistantScene: React.FC = () => {\n  const { styles } = useStyle();\n  const [locale] = useLocale(LOCALES);\n\n  const [content, setContent] = React.useState('');\n\n  const [agent] = useXAgent({\n    request: async ({ message }, { onSuccess, onError }) => {\n      await sleep();\n\n      mockSuccess = !mockSuccess;\n\n      if (mockSuccess) {\n        onSuccess(`Mock success return. You said: ${message}`);\n      }\n\n      onError(new Error('Mock request failed'));\n    },\n  });\n\n  // Chat messages\n  const { onRequest, messages } = useXChat({\n    agent,\n    requestPlaceholder: 'Waiting...',\n    requestFallback: 'Mock failed return. Please try again later.',\n  });\n\n  const placeholderMessage: BubbleDataType = {\n    key: 'placeholder',\n    variant: 'borderless',\n    className: styles.placeholder_bubble,\n    content: (\n      <Welcome\n        icon={\n          <img\n            src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n            alt=\"Ant Design X\"\n          />\n        }\n        variant=\"borderless\"\n        title={locale.greeting_short}\n        description={locale.description_short}\n      />\n    ),\n    footer: (\n      <Prompts\n        title={locale.help_text}\n        onItemClick={(item) => {\n          onRequest(item.data.description as string);\n        }}\n        vertical\n        items={[\n          {\n            key: '1-1',\n            description: locale.question1,\n          },\n          {\n            key: '1-2',\n            description: locale.question2,\n          },\n          {\n            key: '1-3',\n            description: locale.question3,\n          },\n          {\n            key: '1-4',\n            description: locale.question4,\n          },\n        ]}\n      />\n    ),\n  };\n\n  return (\n    <CustomizationProvider>\n      <Flex justify=\"space-between\" style={{ height: '100%' }}>\n        <div className={styles.content}>\n          <Skeleton />\n          <Skeleton />\n          <Skeleton />\n        </div>\n        <div className={styles.container}>\n          <Bubble.List\n            className={styles.bubble_list}\n            roles={roles}\n            items={[\n              placeholderMessage,\n              ...messages.map(({ id, message, status }) => ({\n                key: id,\n                loading: status === 'loading',\n                role: status === 'local' ? 'local' : 'ai',\n                content: message,\n              })),\n            ]}\n          />\n          <CustomizationSender\n            loading={agent.isRequesting()}\n            value={content}\n            onChange={setContent}\n            placeholder={locale.send_placeholder}\n            onSubmit={(nextContent) => {\n              if (!nextContent) return;\n              onRequest(nextContent);\n              setContent('');\n            }}\n          />\n        </div>\n      </Flex>\n    </CustomizationProvider>\n  );\n};\n\nexport default AssistantScene;\n","\n  import '/home/runner/work/x/x/components/use-x-chat/demo/stream.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble, Sender, useXAgent, useXChat } from '@ant-design/x';\\nimport { Flex, type GetProp } from 'antd';\\nimport React from 'react';\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n  },\\n  local: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n};\\n\\nconst App = () => {\\n  const [content, setContent] = React.useState('');\\n\\n  // Agent for request\\n  const [agent] = useXAgent({\\n    request: async ({ message }, { onSuccess, onUpdate }) => {\\n      const fullContent = `Streaming output instead of Bubble typing effect. You typed: ${message}`;\\n      let currentContent = '';\\n\\n      const id = setInterval(() => {\\n        currentContent = fullContent.slice(0, currentContent.length + 2);\\n        onUpdate(currentContent);\\n\\n        if (currentContent === fullContent) {\\n          clearInterval(id);\\n          onSuccess(fullContent);\\n        }\\n      }, 100);\\n    },\\n  });\\n\\n  // Chat messages\\n  const { onRequest, messages } = useXChat({\\n    agent,\\n  });\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Bubble.List\\n        roles={roles}\\n        style={{ maxHeight: 300 }}\\n        items={messages.map(({ id, message, status }) => ({\\n          key: id,\\n          role: status === 'local' ? 'local' : 'ai',\\n          content: message,\\n        }))}\\n      />\\n      <Sender\\n        loading={agent.isRequesting()}\\n        value={content}\\n        onChange={setContent}\\n        onSubmit={(nextContent) => {\\n          onRequest(nextContent);\\n          setContent('');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/sender/demo/speech.tsx?watch=parent';\n  export default \"import { Sender } from '@ant-design/x';\\nimport { App } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const { message } = App.useApp();\\n\\n  return (\\n    <Sender\\n      onSubmit={() => {\\n        message.success('Send message successfully!');\\n      }}\\n      allowSpeech\\n    />\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/attachments/demo/basic.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\\nimport { Attachments, Sender } from '@ant-design/x';\\nimport { App, Button, Flex, Switch } from 'antd';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  const { message } = App.useApp();\\n\\n  const [fullScreenDrop, setFullScreenDrop] = React.useState(false);\\n  const divRef = React.useRef<HTMLDivElement>(null);\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\" align=\\\"flex-start\\\" ref={divRef}>\\n      <Sender\\n        prefix={\\n          <Attachments\\n            beforeUpload={() => false}\\n            onChange={({ file }) => {\\n              message.info(`Mock upload: ${file.name}`);\\n            }}\\n            getDropContainer={() => (fullScreenDrop ? document.body : divRef.current)}\\n            placeholder={{\\n              icon: <CloudUploadOutlined />,\\n              title: 'Drag & Drop files here',\\n              description: 'Support file type: image, video, audio, document, etc.',\\n            }}\\n          >\\n            <Button type=\\\"text\\\" icon={<LinkOutlined />} />\\n          </Attachments>\\n        }\\n      />\\n\\n      <Switch\\n        checked={fullScreenDrop}\\n        onChange={setFullScreenDrop}\\n        checkedChildren=\\\"Full screen drop\\\"\\n        unCheckedChildren=\\\"Full screen drop\\\"\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","// Follow code is copy from `antd/components/upload/utils.ts`:\n\nexport const isImageFileType = (type: string): boolean => type.indexOf('image/') === 0;\n\nconst MEASURE_SIZE = 200;\n\nexport function previewImage(file: File | Blob): Promise<string> {\n  return new Promise<string>((resolve) => {\n    if (!file || !file.type || !isImageFileType(file.type)) {\n      resolve('');\n      return;\n    }\n\n    const img = new Image();\n    img.onload = () => {\n      const { width, height } = img;\n\n      const ratio = width / height;\n      const MEASURE_SIZE_WIDTH = ratio > 1 ? MEASURE_SIZE : MEASURE_SIZE * ratio;\n      const MEASURE_SIZE_HEIGHT = ratio > 1 ? MEASURE_SIZE / ratio : MEASURE_SIZE;\n\n      const canvas = document.createElement('canvas');\n      canvas.width = MEASURE_SIZE_WIDTH;\n      canvas.height = MEASURE_SIZE_HEIGHT;\n      canvas.style.cssText = `position: fixed; left: 0; top: 0; width: ${MEASURE_SIZE_WIDTH}px; height: ${MEASURE_SIZE_HEIGHT}px; z-index: 9999; display: none;`;\n      document.body.appendChild<HTMLCanvasElement>(canvas);\n      const ctx = canvas.getContext('2d');\n\n      ctx!.drawImage(img, 0, 0, MEASURE_SIZE_WIDTH, MEASURE_SIZE_HEIGHT);\n      const dataURL = canvas.toDataURL();\n      document.body.removeChild(canvas);\n      window.URL.revokeObjectURL(img.src);\n      resolve(dataURL);\n    };\n    img.crossOrigin = 'anonymous';\n    if (file.type.startsWith('image/svg+xml')) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (reader.result && typeof reader.result === 'string') {\n          img.src = reader.result;\n        }\n      };\n      reader.readAsDataURL(file);\n    } else if (file.type.startsWith('image/gif')) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (reader.result) {\n          resolve(reader.result as string);\n        }\n      };\n      reader.readAsDataURL(file);\n    } else {\n      img.src = window.URL.createObjectURL(file);\n    }\n  });\n}\n","\n  import '/home/runner/work/x/x/components/thought-chain/demo/status.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport { Card, Button } from 'antd';\\nimport { CheckCircleOutlined, InfoCircleOutlined, LoadingOutlined } from '@ant-design/icons';\\n\\nimport type { ThoughtChainItem } from '@ant-design/x';\\n\\nfunction getStatusIcon(status: ThoughtChainItem['status']) {\\n  switch (status) {\\n    case 'success':\\n      return <CheckCircleOutlined />;\\n    case 'error':\\n      return <InfoCircleOutlined />;\\n    case 'pending':\\n      return <LoadingOutlined />;\\n    default:\\n      return undefined;\\n  }\\n}\\n\\nconst mockServerResponseData: ThoughtChainItem[] = [\\n  {\\n    title: 'Thought Chain Item - 1',\\n    status: 'success',\\n    description: 'status: success',\\n    icon: getStatusIcon('success'),\\n  },\\n  {\\n    title: 'Thought Chain Item - 2',\\n    status: 'error',\\n    description: 'status: error',\\n    icon: getStatusIcon('error'),\\n  },\\n];\\n\\nconst delay = (ms: number) => {\\n  return new Promise<void>((resolve) => {\\n    const timer: NodeJS.Timeout = setTimeout(() => {\\n      clearTimeout(timer);\\n      resolve();\\n    }, ms);\\n  });\\n};\\n\\nfunction addChainItem() {\\n  mockServerResponseData.push({\\n    title: `Thought Chain Item - ${mockServerResponseData.length + 1}`,\\n    status: 'pending',\\n    icon: getStatusIcon('pending'),\\n    description: 'status: pending',\\n  });\\n}\\n\\nasync function updateChainItem(status: ThoughtChainItem['status']) {\\n  await delay(800);\\n  mockServerResponseData[mockServerResponseData.length - 1].status = status;\\n  mockServerResponseData[mockServerResponseData.length - 1].icon = getStatusIcon(status);\\n  mockServerResponseData[mockServerResponseData.length - 1].description = `status: ${status}`;\\n}\\n\\nexport default () => {\\n  const [items, setItems] = React.useState<ThoughtChainItem[]>(mockServerResponseData);\\n  const [loading, setLoading] = React.useState<boolean>(false);\\n\\n  const mockStatusChange = async () => {\\n    await updateChainItem('error');\\n    setItems([...mockServerResponseData]);\\n    await updateChainItem('pending');\\n    setItems([...mockServerResponseData]);\\n    await updateChainItem('success');\\n    setItems([...mockServerResponseData]);\\n  };\\n\\n  const onClick = async () => {\\n    setLoading(true);\\n    addChainItem();\\n    setItems([...mockServerResponseData]);\\n    await mockStatusChange();\\n    setLoading(false);\\n  };\\n\\n  return (\\n    <Card style={{ width: 500 }}>\\n      <Button onClick={onClick} style={{ marginBottom: 16 }} loading={loading}>\\n        {loading ? 'Running' : 'Run Next'}\\n      </Button>\\n      <ThoughtChain items={items} />\\n    </Card>\\n  );\\n};\\n\";;\n  ","import { unit } from '@ant-design/cssinjs';\nimport { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface PromptsToken extends FullToken<'Prompts'> {}\n\nconst genPromptsStyle: GenerateStyle<PromptsToken> = (token) => {\n  const { componentCls } = token;\n\n  return {\n    [componentCls]: {\n      // ======================== Prompt ========================\n      '&, & *': {\n        boxSizing: 'border-box',\n      },\n\n      maxWidth: '100%',\n\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl',\n      },\n      [`& ${componentCls}-title`]: {\n        marginBlockStart: 0,\n        fontWeight: 'normal',\n        color: token.colorTextTertiary,\n      },\n\n      [`& ${componentCls}-list`]: {\n        display: 'flex',\n        gap: token.paddingSM,\n        overflowX: 'scroll',\n        '&::-webkit-scrollbar': {\n          display: 'none',\n        },\n        listStyle: 'none',\n        paddingInlineStart: 0,\n        marginBlock: 0,\n        alignItems: 'stretch',\n\n        '&-wrap': {\n          flexWrap: 'wrap',\n        },\n        '&-vertical': {\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n        },\n      },\n\n      // ========================= Item =========================\n      [`${componentCls}-item`]: {\n        flex: 'none',\n        display: 'flex',\n        gap: token.paddingXS,\n        height: 'auto',\n        paddingBlock: token.paddingSM,\n        paddingInline: token.padding,\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        background: token.colorBgContainer,\n        borderRadius: token.borderRadiusLG,\n        transition: ['border', 'background']\n          .map((p) => `${p} ${token.motionDurationSlow}`)\n          .join(','),\n        border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`,\n\n        [`&:not(${componentCls}-item-has-nest)`]: {\n          '&:hover': {\n            cursor: 'pointer',\n            background: token.colorFillTertiary,\n          },\n\n          '&:active': {\n            background: token.colorFill,\n          },\n        },\n\n        [`${componentCls}-content`]: {\n          flex: 'auto',\n          minWidth: 0,\n          display: 'flex',\n          gap: token.paddingXXS,\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n        },\n\n        [`${componentCls}-icon, ${componentCls}-label, ${componentCls}-desc`]: {\n          margin: 0,\n          padding: 0,\n          fontSize: token.fontSize,\n          lineHeight: token.lineHeight,\n          textAlign: 'start',\n          whiteSpace: 'normal',\n        },\n\n        [`${componentCls}-label`]: {\n          color: token.colorTextHeading,\n          fontWeight: 500,\n        },\n\n        [`${componentCls}-label + ${componentCls}-desc`]: {\n          color: token.colorTextTertiary,\n        },\n\n        // Disabled\n        [`&${componentCls}-item-disabled`]: {\n          pointerEvents: 'none',\n          background: token.colorBgContainerDisabled,\n\n          [`${componentCls}-label, ${componentCls}-desc`]: {\n            color: token.colorTextTertiary,\n          },\n        },\n      },\n    },\n  };\n};\n\nconst genNestStyle: GenerateStyle<PromptsToken> = (token) => {\n  const { componentCls } = token;\n\n  return {\n    [componentCls]: {\n      // ========================= Parent =========================\n      [`${componentCls}-item-has-nest`]: {\n        [`> ${componentCls}-content`]: {\n          // gap: token.paddingSM,\n\n          [`> ${componentCls}-label`]: {\n            fontSize: token.fontSizeLG,\n            lineHeight: token.lineHeightLG,\n          },\n        },\n      },\n\n      // ========================= Nested =========================\n      [`&${componentCls}-nested`]: {\n        marginTop: token.paddingXS,\n\n        // ======================== Prompt ========================\n        alignSelf: 'stretch',\n\n        [`${componentCls}-list`]: {\n          alignItems: 'stretch',\n        },\n\n        // ========================= Item =========================\n        [`${componentCls}-item`]: {\n          border: 0,\n          background: token.colorFillQuaternary,\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Prompts'> = () => ({});\n\nexport default genStyleHooks(\n  'Prompts',\n  (token) => {\n    const compToken = mergeToken<PromptsToken>(token, {});\n    return [genPromptsStyle(compToken), genNestStyle(compToken)];\n  },\n  prepareComponentToken,\n);\n","import { genStyleUtils } from '@ant-design/cssinjs-utils';\n\nimport { useXProviderContext } from '../x-provider';\nimport { useInternalToken } from './useToken';\n\nimport type { ComponentTokenMap } from './components';\nimport type { AliasToken, SeedToken } from './cssinjs-utils';\n\nexport const { genStyleHooks, genComponentStyleHook, genSubStyleComponent } = genStyleUtils<\n  ComponentTokenMap,\n  AliasToken,\n  SeedToken\n>({\n  usePrefix: () => {\n    const { getPrefixCls, iconPrefixCls } = useXProviderContext();\n    return {\n      iconPrefixCls,\n      rootPrefixCls: getPrefixCls(),\n    };\n  },\n  useToken: () => {\n    const [theme, realToken, hashId, token, cssVar] = useInternalToken();\n    return { theme, realToken, hashId, token, cssVar };\n  },\n  useCSP: () => {\n    const { csp } = useXProviderContext();\n    return csp ?? {};\n  },\n  layer: {\n    name: 'antdx',\n    dependencies: ['antd'],\n  },\n});\n","module.exports = (typeof globalThis !== 'undefined' ? globalThis : self)['maplibregl'];","\n  import '/home/runner/work/x/x/components/use-x-chat/demo/basic.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble, Sender, useXAgent, useXChat } from '@ant-design/x';\\nimport { Flex, type GetProp } from 'antd';\\nimport React from 'react';\\n\\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 1000));\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n    typing: { step: 5, interval: 20 },\\n    style: {\\n      maxWidth: 600,\\n    },\\n  },\\n  local: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n};\\n\\nlet mockSuccess = false;\\n\\nconst App = () => {\\n  const [content, setContent] = React.useState('');\\n\\n  // Agent for request\\n  const [agent] = useXAgent({\\n    request: async ({ message }, { onSuccess, onError }) => {\\n      await sleep();\\n\\n      mockSuccess = !mockSuccess;\\n\\n      if (mockSuccess) {\\n        onSuccess(`Mock success return. You said: ${message}`);\\n      }\\n\\n      onError(new Error('Mock request failed'));\\n    },\\n  });\\n\\n  // Chat messages\\n  const { onRequest, messages } = useXChat({\\n    agent,\\n    requestPlaceholder: 'Waiting...',\\n    requestFallback: 'Mock failed return. Please try again later.',\\n  });\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Bubble.List\\n        roles={roles}\\n        style={{ maxHeight: 300 }}\\n        items={messages.map(({ id, message, status }) => ({\\n          key: id,\\n          loading: status === 'loading',\\n          role: status === 'local' ? 'local' : 'ai',\\n          content: message,\\n        }))}\\n      />\\n      <Sender\\n        loading={agent.isRequesting()}\\n        value={content}\\n        onChange={setContent}\\n        onSubmit={(nextContent) => {\\n          onRequest(nextContent);\\n          setContent('');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { mergeToken } from '@ant-design/cssinjs-utils';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\nimport { THOUGHT_CHAIN_ITEM_STATUS } from '../Item';\n\nimport { type CSSObject, unit } from '@ant-design/cssinjs';\nimport type { ConfigProviderProps } from 'antd';\nimport type { FullToken, GenerateStyle } from '../../theme/cssinjs-utils';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface ThoughtChainToken extends FullToken<'ThoughtChain'> {\n  /**\n   * @desc default size for item font size\n   */\n  itemFontSize: number;\n  /**\n   * @desc default size for item\n   */\n  itemSize: number;\n  /**\n   * @desc gap between items\n   */\n  itemGap: number;\n  /**\n   * @desc large size for item font size\n   */\n  itemFontSizeLG: number;\n  /**\n   * @desc large size for item\n   */\n  itemSizeLG: number;\n  /**\n   * @desc large gap between items\n   */\n  itemGapLG: number;\n  /**\n   * @desc small size for item font size\n   */\n  itemFontSizeSM: number;\n  /**\n   * @desc small size for item\n   */\n  itemSizeSM: number;\n  /**\n   * @desc small gap between items\n   */\n  itemGapSM: number;\n}\n\ntype GenerateThoughtChainItemStyle = GenerateStyle<ThoughtChainToken, CSSObject>;\n\nconst genThoughtChainItemStatusStyle: GenerateThoughtChainItemStyle = (token) => {\n  const { componentCls } = token;\n  const itemCls = `${componentCls}-item`;\n\n  const colors = {\n    [THOUGHT_CHAIN_ITEM_STATUS.PENDING]: token.colorPrimaryText,\n    [THOUGHT_CHAIN_ITEM_STATUS.SUCCESS]: token.colorSuccessText,\n    [THOUGHT_CHAIN_ITEM_STATUS.ERROR]: token.colorErrorText,\n  };\n\n  const statuses = Object.keys(colors) as (keyof typeof colors)[];\n\n  return statuses.reduce((acc, status) => {\n    const statusColor = colors[status];\n\n    statuses.forEach((nextStatus) => {\n      const itemStatusCls = `& ${itemCls}-${status}-${nextStatus}`;\n      const lastBeforePseudoStyle =\n        status === nextStatus\n          ? {}\n          : {\n              backgroundColor: 'none !important',\n              backgroundImage: `linear-gradient(${statusColor}, ${colors[nextStatus]})`,\n            };\n\n      acc[itemStatusCls] = {\n        [`& ${itemCls}-icon, & > *::before`]: {\n          backgroundColor: `${statusColor} !important`,\n        },\n        '& > :last-child::before': lastBeforePseudoStyle,\n      };\n    });\n\n    return acc;\n  }, {} as CSSObject);\n};\n\nconst genThoughtChainItemBeforePseudoStyle: GenerateThoughtChainItemStyle = (token) => {\n  const { calc, componentCls } = token;\n  const itemCls = `${componentCls}-item`;\n\n  const beforePseudoBaseStyle = {\n    content: '\"\"',\n    width: calc(token.lineWidth).mul(2).equal(),\n    display: 'block',\n    position: 'absolute',\n    insetInlineEnd: 'none',\n    backgroundColor: token.colorTextPlaceholder,\n  };\n\n  return {\n    '& > :last-child > :last-child': {\n      '&::before': {\n        display: 'none !important',\n      },\n      [`&${itemCls}-footer`]: {\n        '&::before': {\n          display: 'block !important',\n          bottom: 0,\n        },\n      },\n    },\n    [`& > ${itemCls}`]: {\n      [`& ${itemCls}-header, & ${itemCls}-content, & ${itemCls}-footer`]: {\n        position: 'relative',\n\n        '&::before': {\n          bottom: calc(token.itemGap).mul(-1).equal(),\n        },\n      },\n      [`& ${itemCls}-header, & ${itemCls}-content`]: {\n        marginInlineStart: calc(token.itemSize).mul(-1).equal(),\n\n        '&::before': {\n          ...beforePseudoBaseStyle,\n          insetInlineStart: calc(token.itemSize).div(2).sub(token.lineWidth).equal(),\n        },\n      },\n      [`& ${itemCls}-header::before`]: {\n        top: token.itemSize,\n        bottom: calc(token.itemGap).mul(-2).equal(),\n      },\n      [`& ${itemCls}-content::before`]: {\n        top: '100%',\n      },\n      [`& ${itemCls}-footer::before`]: {\n        ...beforePseudoBaseStyle,\n        top: 0,\n        insetInlineStart: calc(token.itemSize).div(-2).sub(token.lineWidth).equal(),\n      },\n    },\n  } as CSSObject;\n};\n\nconst genThoughtChainItemStyle: GenerateThoughtChainItemStyle = (token) => {\n  const { componentCls } = token;\n  const itemCls = `${componentCls}-item`;\n\n  return {\n    [itemCls]: {\n      display: 'flex',\n      flexDirection: 'column',\n\n      [`& ${itemCls}-collapsible`]: {\n        cursor: 'pointer',\n      },\n      [`& ${itemCls}-header`]: {\n        display: 'flex',\n        marginBottom: token.itemGap,\n        gap: token.itemGap,\n        alignItems: 'flex-start',\n\n        [`& ${itemCls}-icon`]: {\n          height: token.itemSize,\n          width: token.itemSize,\n          fontSize: token.itemFontSize,\n        },\n        [`& ${itemCls}-extra`]: {\n          height: token.itemSize,\n          maxHeight: token.itemSize,\n        },\n        [`& ${itemCls}-header-box`]: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n\n          [`& ${itemCls}-title`]: {\n            height: token.itemSize,\n            lineHeight: `${unit(token.itemSize)}`,\n            maxHeight: token.itemSize,\n            fontSize: token.itemFontSize,\n\n            [`& ${itemCls}-collapse-icon`]: {\n              marginInlineEnd: token.marginXS,\n            },\n          },\n          [`& ${itemCls}-desc`]: {\n            fontSize: token.itemFontSize,\n          },\n        },\n      },\n      [`& ${itemCls}-content`]: {\n        [`& ${itemCls}-content-hidden`]: {\n          display: 'none',\n        },\n        [`& ${itemCls}-content-box`]: {\n          padding: token.itemGap,\n          display: 'inline-block',\n          maxWidth: `calc(100% - ${token.itemSize})`,\n          borderRadius: token.borderRadiusLG,\n          backgroundColor: token.colorBgContainer,\n          border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`,\n        },\n      },\n      [`& ${itemCls}-footer`]: {\n        marginTop: token.itemGap,\n        display: 'inline-flex',\n      },\n    },\n  };\n};\n\nconst genThoughtChainSizeStyle = (\n  token: ThoughtChainToken,\n  size: ConfigProviderProps['componentSize'] = 'middle',\n) => {\n  const { componentCls } = token;\n\n  const sizeTokens = {\n    large: {\n      itemSize: token.itemSizeLG,\n      itemGap: token.itemGapLG,\n      itemFontSize: token.itemFontSizeLG,\n    },\n    middle: {\n      itemSize: token.itemSize,\n      itemGap: token.itemGap,\n      itemFontSize: token.itemFontSize,\n    },\n    small: {\n      itemSize: token.itemSizeSM,\n      itemGap: token.itemGapSM,\n      itemFontSize: token.itemFontSizeSM,\n    },\n  }[size];\n\n  return {\n    [`&${componentCls}-${size}`]: {\n      paddingInlineStart: sizeTokens.itemSize,\n      gap: sizeTokens.itemGap,\n\n      ...genThoughtChainItemStyle({\n        ...token,\n        ...sizeTokens,\n      }),\n      ...genThoughtChainItemBeforePseudoStyle({\n        ...token,\n        ...sizeTokens,\n      }),\n    },\n  };\n};\n\nconst genThoughtChainStyle: GenerateStyle<ThoughtChainToken> = (token) => {\n  const { componentCls } = token;\n\n  return {\n    [componentCls]: {\n      display: 'flex',\n      flexDirection: 'column',\n\n      ...genThoughtChainItemStatusStyle(token),\n      ...genThoughtChainSizeStyle(token),\n      ...genThoughtChainSizeStyle(token, 'large'),\n      ...genThoughtChainSizeStyle(token, 'small'),\n\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl',\n      },\n    },\n  };\n};\n\nexport default genStyleHooks('ThoughtChain', (token) => {\n  const compToken = mergeToken<ThoughtChainToken>(token, {\n    // small size tokens\n    itemFontSizeSM: token.fontSizeSM,\n    itemSizeSM: token\n      .calc(token.controlHeightXS)\n      .add(token.controlHeightSM)\n      .div(2)\n      .equal() as number,\n    itemGapSM: token.marginSM,\n    // default size tokens\n    itemFontSize: token.fontSize,\n    itemSize: token.calc(token.controlHeightSM).add(token.controlHeight).div(2).equal() as number,\n    itemGap: token.margin,\n    // large size tokens\n    itemFontSizeLG: token.fontSizeLG,\n    itemSizeLG: token.calc(token.controlHeight).add(token.controlHeightLG).div(2).equal() as number,\n    itemGapLG: token.marginLG,\n  });\n  return [genThoughtChainStyle(compToken), genCollapseMotion(compToken)];\n});\n","import { type GetProp, GetRef, Upload, type UploadProps } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\n\nimport { useEvent, useMergedState } from 'rc-util';\nimport DropArea from './DropArea';\nimport FileList, { type FileListProps } from './FileList';\nimport FileListCard from './FileList/FileListCard';\nimport PlaceholderUploader, {\n  type PlaceholderProps,\n  type PlaceholderType,\n} from './PlaceholderUploader';\nimport SilentUploader from './SilentUploader';\nimport { AttachmentContext } from './context';\nimport useStyle from './style';\n\nexport type SemanticType = 'list' | 'item' | 'placeholder';\n\nexport type Attachment = GetProp<UploadProps, 'fileList'>[number] & {\n  description?: React.ReactNode;\n};\n\nexport interface AttachmentsProps extends Omit<UploadProps, 'fileList'> {\n  prefixCls?: string;\n\n  rootClassName?: string;\n  rootStyle?: React.CSSProperties;\n\n  style?: React.CSSProperties;\n  className?: string;\n\n  classNames?: Partial<Record<SemanticType, string>>;\n  styles?: Partial<Record<SemanticType, React.CSSProperties>>;\n\n  children?: React.ReactElement;\n\n  disabled?: boolean;\n\n  // ============= placeholder =============\n  placeholder?: PlaceholderType | ((type: 'inline' | 'drop') => PlaceholderType);\n  getDropContainer?: null | (() => HTMLElement | null | undefined);\n\n  // ============== File List ==============\n  items?: Attachment[];\n  overflow?: FileListProps['overflow'];\n  imageProps?: FileListProps['imageProps'];\n}\n\nexport interface AttachmentsRef {\n  nativeElement: HTMLDivElement | null;\n  upload: (file: File) => void;\n}\n\nfunction Attachments(props: AttachmentsProps, ref: React.Ref<AttachmentsRef>) {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName,\n    rootStyle,\n    className,\n    style,\n    items,\n    children,\n    getDropContainer,\n    placeholder,\n    onChange,\n    onRemove,\n    overflow,\n    imageProps,\n    disabled,\n    classNames = {},\n    styles = {},\n    ...uploadProps\n  } = props;\n\n  // ============================ PrefixCls ============================\n  const { getPrefixCls, direction } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('attachment', customizePrefixCls);\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('attachments');\n\n  const { classNames: contextClassNames, styles: contextStyles } = contextConfig;\n\n  // ============================= Ref =============================\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  const uploadRef = React.useRef<GetRef<typeof Upload>>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    nativeElement: containerRef.current,\n    upload: (file) => {\n      const fileInput = uploadRef.current?.nativeElement?.querySelector('input[type=\"file\"]');\n\n      // Trigger native change event\n      if (fileInput) {\n        const dataTransfer = new DataTransfer();\n        dataTransfer.items.add(file);\n        fileInput.files = dataTransfer.files;\n\n        fileInput.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    },\n  }));\n\n  // ============================ Style ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  const cssinjsCls = classnames(hashId, cssVarCls);\n\n  // ============================ Upload ============================\n  const [fileList, setFileList] = useMergedState([], {\n    value: items,\n  });\n\n  const triggerChange: GetProp<AttachmentsProps, 'onChange'> = useEvent((info) => {\n    setFileList(info.fileList);\n    onChange?.(info);\n  });\n\n  const mergedUploadProps: UploadProps = {\n    ...uploadProps,\n    fileList,\n    onChange: triggerChange,\n  };\n\n  const onItemRemove = (item: Attachment) =>\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(item) : onRemove).then((ret) => {\n      // Prevent removing file\n      if (ret === false) {\n        return;\n      }\n\n      const newFileList = fileList.filter((fileItem) => fileItem.uid !== item.uid);\n\n      triggerChange({\n        file: { ...item, status: 'removed' },\n        fileList: newFileList,\n      });\n    });\n  // ============================ Render ============================\n  let renderChildren: React.ReactElement;\n\n  const getPlaceholderNode = (\n    type: 'inline' | 'drop',\n    props?: Pick<PlaceholderProps, 'style'>,\n    ref?: React.RefObject<GetRef<typeof Upload>>,\n  ) => {\n    const placeholderContent = typeof placeholder === 'function' ? placeholder(type) : placeholder;\n\n    return (\n      <PlaceholderUploader\n        placeholder={placeholderContent}\n        upload={mergedUploadProps}\n        prefixCls={prefixCls}\n        className={classnames(contextClassNames.placeholder, classNames.placeholder)}\n        style={{\n          ...contextStyles.placeholder,\n          ...styles.placeholder,\n          ...props?.style,\n        }}\n        ref={ref}\n      />\n    );\n  };\n\n  if (children) {\n    renderChildren = (\n      <>\n        <SilentUploader upload={mergedUploadProps} rootClassName={rootClassName} ref={uploadRef}>\n          {children}\n        </SilentUploader>\n        <DropArea\n          getDropContainer={getDropContainer}\n          prefixCls={prefixCls}\n          className={classnames(cssinjsCls, rootClassName)}\n        >\n          {getPlaceholderNode('drop')}\n        </DropArea>\n      </>\n    );\n  } else {\n    const hasFileList = fileList.length > 0;\n\n    renderChildren = (\n      <div\n        className={classnames(\n          prefixCls,\n          cssinjsCls,\n          {\n            [`${prefixCls}-rtl`]: direction === 'rtl',\n          },\n          className,\n          rootClassName,\n        )}\n        style={{\n          ...rootStyle,\n          ...style,\n        }}\n        dir={direction || 'ltr'}\n        ref={containerRef}\n      >\n        <FileList\n          prefixCls={prefixCls}\n          items={fileList}\n          onRemove={onItemRemove}\n          overflow={overflow}\n          upload={mergedUploadProps}\n          listClassName={classnames(contextClassNames.list, classNames.list)}\n          listStyle={{\n            ...contextStyles.list,\n            ...styles.list,\n            ...(!hasFileList && { display: 'none' }),\n          }}\n          itemClassName={classnames(contextClassNames.item, classNames.item)}\n          itemStyle={{\n            ...contextStyles.item,\n            ...styles.item,\n          }}\n          imageProps={imageProps}\n        />\n        {getPlaceholderNode('inline', hasFileList ? { style: { display: 'none' } } : {}, uploadRef)}\n        <DropArea\n          getDropContainer={getDropContainer || (() => containerRef.current)}\n          prefixCls={prefixCls}\n          className={cssinjsCls}\n        >\n          {getPlaceholderNode('drop')}\n        </DropArea>\n      </div>\n    );\n  }\n\n  return wrapCSSVar(\n    <AttachmentContext.Provider\n      value={{\n        disabled,\n      }}\n    >\n      {renderChildren}\n    </AttachmentContext.Provider>,\n  );\n}\n\nconst ForwardAttachments = React.forwardRef(Attachments) as React.ForwardRefExoticComponent<\n  AttachmentsProps & React.RefAttributes<AttachmentsRef>\n> & {\n  FileCard: typeof FileListCard;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardAttachments.displayName = 'Attachments';\n}\n\nForwardAttachments.FileCard = FileListCard;\n\nexport default ForwardAttachments;\n","\n  import '/home/runner/work/x/x/components/thought-chain/demo/collapsible.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport type { ThoughtChainProps } from '@ant-design/x';\\n\\nimport { Card, Typography } from 'antd';\\n\\nconst { Paragraph, Text } = Typography;\\n\\nconst mockContent = (\\n  <Typography>\\n    <Paragraph>\\n      In the process of internal desktop applications development, many different design specs and\\n      implementations would be involved, which might cause designers and developers difficulties and\\n      duplication and reduce the efficiency of development.\\n    </Paragraph>\\n    <Paragraph>\\n      After massive project practice and summaries, Ant Design, a design language for background\\n      applications, is refined by Ant UED Team, which aims to{' '}\\n      <Text strong>\\n        uniform the user interface specs for internal background projects, lower the unnecessary\\n        cost of design differences and implementation and liberate the resources of design and\\n        front-end development\\n      </Text>\\n    </Paragraph>\\n  </Typography>\\n);\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    title: 'Click me to expand the content',\\n    description: 'Collapsible',\\n    content: mockContent,\\n  },\\n  {\\n    title: 'Click me to expand the content',\\n    description: 'Collapsible',\\n    content: mockContent,\\n  },\\n];\\n\\nexport default () => (\\n  <Card style={{ width: 500 }}>\\n    <ThoughtChain items={items} collapsible />\\n  </Card>\\n);\\n\";;\n  ","import { Bubble, Conversations, Prompts, Suggestion, Welcome } from '@ant-design/x';\nimport { createStyles } from 'antd-style';\nimport React from 'react';\n\nimport { DeleteOutlined, EditOutlined, EnterOutlined } from '@ant-design/icons';\nimport type { BubbleProps, ConversationsProps, PromptsProps, WelcomeProps } from '@ant-design/x';\nimport useLocale from '../../../../hooks/useLocale';\nimport { LOCALES, useCustomizationBgStyle } from '../../common/CustomizationProvider';\nimport CustomizationSender from '../../common/CustomizationSender';\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    actions: css`\n      width: 230px;\n      display: flex;\n      align-items: end;\n      justify-content: end;\n      gap: ${token.paddingSM}px;\n      opacity: 0.65;\n    `,\n  };\n});\n\nexport const CustomizationWelcome: React.FC<WelcomeProps> = (props) => {\n  const [locale] = useLocale(LOCALES);\n\n  const {\n    styles: { background },\n  } = useCustomizationBgStyle();\n\n  return (\n    <Welcome\n      style={{\n        width: 290,\n      }}\n      icon=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n      title={locale.greeting_short}\n      description={locale.description_short}\n      className={background}\n      {...props}\n    />\n  );\n};\n\nexport const CustomizationPrompts: React.FC<PromptsProps> = (props) => {\n  const [locale] = useLocale(LOCALES);\n\n  const {\n    styles: { background },\n  } = useCustomizationBgStyle();\n\n  return (\n    <Prompts\n      styles={{\n        item: {\n          width: 290,\n          borderRadius: 20,\n        },\n        list: {\n          borderRadius: 20,\n        },\n      }}\n      classNames={{\n        item: background,\n      }}\n      items={[\n        {\n          key: '1',\n          label: `🎉 ${locale.greeting}`,\n          description: locale.description,\n          children: [\n            {\n              key: '1-1',\n              description: locale.question1,\n            },\n            {\n              key: '1-2',\n              description: locale.question4,\n            },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\nexport const CustomizationSuggestion: React.FC = () => {\n  const [locale] = useLocale(LOCALES);\n\n  return (\n    <Suggestion\n      items={[\n        { label: locale.question3, value: '3' },\n        { label: locale.question4, value: '4' },\n      ]}\n      block\n      open\n    >\n      {({ onTrigger, onKeyDown }) => {\n        return (\n          <CustomizationSender\n            style={{ width: 290 }}\n            onChange={(nextVal) => {\n              if (nextVal === '/') {\n                onTrigger();\n              } else if (!nextVal) {\n                onTrigger(false);\n              }\n            }}\n            onKeyDown={onKeyDown}\n            value=\"/\"\n            placeholder={locale.send_placeholder}\n          />\n        );\n      }}\n    </Suggestion>\n  );\n};\n\nexport const CustomizationBubble: React.FC<BubbleProps> = (props) => {\n  const { styles } = useStyle();\n  const [locale] = useLocale(LOCALES);\n\n  const {\n    styles: { background },\n  } = useCustomizationBgStyle();\n\n  return (\n    <Bubble\n      content={locale.question1}\n      classNames={{\n        content: background,\n      }}\n      footer={\n        <div className={styles.actions}>\n          <EditOutlined />\n          <DeleteOutlined />\n          <EnterOutlined />\n        </div>\n      }\n      {...props}\n    />\n  );\n};\n\nexport const CustomConversations: React.FC<ConversationsProps> = (props) => {\n  const [locale] = useLocale(LOCALES);\n\n  return (\n    <Conversations\n      style={{ width: 290 }}\n      activeKey=\"item2\"\n      groupable\n      items={[\n        {\n          key: 'item1',\n          group: locale.conversations_group,\n          label: locale.question1,\n        },\n        {\n          key: 'item2',\n          group: locale.conversations_group,\n          label: locale.question2,\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n","\n  import '/home/runner/work/x/x/components/use-x-agent/demo/custom.tsx?watch=parent';\n  export default \"import { useXAgent } from '@ant-design/x';\\nimport { Button, Divider, Form, Input, Typography } from 'antd';\\nimport React from 'react';\\n\\nconst App = () => {\\n  const [lines, setLines] = React.useState<string[]>([]);\\n\\n  const [form] = Form.useForm();\\n\\n  const log = (text: string) => {\\n    setLines((ori) => [...ori, text]);\\n  };\\n\\n  const [agent] = useXAgent({\\n    request: ({ message }, { onUpdate, onSuccess }) => {\\n      let times = 0;\\n\\n      const id = setInterval(() => {\\n        times += 1;\\n        onUpdate(`Thinking...(${times}/3)`);\\n\\n        if (times >= 3) {\\n          onSuccess(`It's funny that you ask: ${message}`);\\n          clearInterval(id);\\n        }\\n      }, 500);\\n    },\\n  });\\n\\n  const onFinish = ({ question }: { question: string }) => {\\n    log(`[You] Ask: ${question}`);\\n    agent.request(\\n      { message: question },\\n      {\\n        onUpdate: (message) => {\\n          log(`[Agent] Update: ${message}`);\\n        },\\n        onSuccess: (message) => {\\n          log(`[Agent] Answer: ${message}`);\\n          form.setFieldsValue({ question: '' });\\n        },\\n        // Current demo not use error\\n        onError: () => {},\\n      },\\n    );\\n  };\\n\\n  return (\\n    <>\\n      <Form form={form} layout=\\\"vertical\\\" onFinish={onFinish} autoComplete=\\\"off\\\">\\n        <Form.Item label=\\\"Question\\\" name=\\\"question\\\">\\n          <Input />\\n        </Form.Item>\\n        <Button htmlType=\\\"submit\\\" type=\\\"primary\\\" loading={agent.isRequesting()}>\\n          submit\\n        </Button>\\n      </Form>\\n\\n      <Divider />\\n\\n      <Typography>\\n        <ul>\\n          {lines.map((line, index) => (\\n            <li key={index}>{line}</li>\\n          ))}\\n        </ul>\\n      </Typography>\\n    </>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import React from 'react';\n\nimport ComponentChangelog from './ComponentChangelog';\n\nconst ChangeLog: React.FC<Readonly<React.PropsWithChildren>> = ({ children }) => (\n  <React.Suspense fallback={null}>\n    <ComponentChangelog>{children}</ComponentChangelog>\n  </React.Suspense>\n);\n\nexport default ChangeLog;\n","\n  import '/home/runner/work/x/x/components/conversations/demo/with-menu.tsx?watch=parent';\n  export default \"import { DeleteOutlined, EditOutlined, StopOutlined } from '@ant-design/icons';\\nimport { Conversations } from '@ant-design/x';\\nimport type { ConversationsProps } from '@ant-design/x';\\nimport { App, type GetProp, theme } from 'antd';\\nimport React from 'react';\\n\\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 4 }).map((_, index) => ({\\n  key: `item${index + 1}`,\\n  label: `Conversation Item ${index + 1}`,\\n  disabled: index === 3,\\n}));\\n\\nconst Demo = () => {\\n  const { message } = App.useApp();\\n  const { token } = theme.useToken();\\n\\n  const style = {\\n    width: 256,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n  };\\n\\n  const menuConfig: ConversationsProps['menu'] = (conversation) => ({\\n    items: [\\n      {\\n        label: 'Operation 1',\\n        key: 'operation1',\\n        icon: <EditOutlined />,\\n      },\\n      {\\n        label: 'Operation 2',\\n        key: 'operation2',\\n        icon: <StopOutlined />,\\n        disabled: true,\\n      },\\n      {\\n        label: 'Operation 3',\\n        key: 'operation3',\\n        icon: <DeleteOutlined />,\\n        danger: true,\\n      },\\n    ],\\n    onClick: (menuInfo) => {\\n      menuInfo.domEvent.stopPropagation();\\n      message.info(`Click ${conversation.key} - ${menuInfo.key}`);\\n    },\\n  });\\n\\n  return <Conversations defaultActiveKey=\\\"item1\\\" menu={menuConfig} items={items} style={style} />;\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/prompts/demo/basic.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Prompts } from '@ant-design/x';\\nimport type { PromptsProps } from '@ant-design/x';\\nimport {\\n  BulbOutlined,\\n  InfoCircleOutlined,\\n  RocketOutlined,\\n  SmileOutlined,\\n  WarningOutlined,\\n} from '@ant-design/icons';\\nimport { App } from 'antd';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    icon: <BulbOutlined style={{ color: '#FFD700' }} />,\\n    label: 'Ignite Your Creativity',\\n    description: 'Got any sparks for a new project?',\\n  },\\n  {\\n    key: '2',\\n    icon: <InfoCircleOutlined style={{ color: '#1890FF' }} />,\\n    label: 'Uncover Background Info',\\n    description: 'Help me understand the background of this topic.',\\n  },\\n  {\\n    key: '3',\\n    icon: <RocketOutlined style={{ color: '#722ED1' }} />,\\n    label: 'Efficiency Boost Battle',\\n    description: 'How can I work faster and better?',\\n  },\\n  {\\n    key: '4',\\n    icon: <SmileOutlined style={{ color: '#52C41A' }} />,\\n    label: 'Tell me a Joke',\\n    description: 'Why do not ants get sick? Because they have tiny ant-bodies!',\\n  },\\n  {\\n    key: '5',\\n    icon: <WarningOutlined style={{ color: '#FF4D4F' }} />,\\n    label: 'Common Issue Solutions',\\n    description: 'How to solve common issues? Share some tips!',\\n  },\\n];\\n\\nconst Demo = () => {\\n  const { message } = App.useApp();\\n\\n  return (\\n    <Prompts\\n      title=\\\"✨ Inspirational Sparks and Marvelous Tips\\\"\\n      items={items}\\n      onItemClick={(info) => {\\n        message.success(`You clicked a prompt: ${info.data.label}`);\\n      }}\\n    />\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { useEvent } from 'rc-util';\nimport React from 'react';\nimport { ListItemType } from './useListData';\n\nexport default function useDisplayData(items: ListItemType[]) {\n  const [displayCount, setDisplayCount] = React.useState(items.length);\n\n  const displayList = React.useMemo(() => items.slice(0, displayCount), [items, displayCount]);\n\n  const displayListLastKey = React.useMemo(() => {\n    const lastItem = displayList[displayList.length - 1];\n    return lastItem ? lastItem.key : null;\n  }, [displayList]);\n\n  // When `items` changed, we replaced with latest one\n  React.useEffect(() => {\n    if (displayList.length && displayList.every((item, index) => item.key === items[index]?.key)) {\n      return;\n    }\n\n    if (displayList.length === 0) {\n      setDisplayCount(1);\n    } else {\n      // Find diff index\n      for (let i = 0; i < displayList.length; i += 1) {\n        if (displayList[i].key !== items[i]?.key) {\n          setDisplayCount(i);\n          break;\n        }\n      }\n    }\n  }, [items]);\n\n  // Continue to show if last one finished typing\n  const onTypingComplete = useEvent((key: string | number) => {\n    if (key === displayListLastKey) {\n      setDisplayCount(displayCount + 1);\n    }\n  });\n\n  return [displayList, onTypingComplete] as const;\n}\n","import type { ButtonProps } from 'antd';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport StopLoadingIcon from '../StopLoading';\nimport ActionButton, { ActionButtonContext } from './ActionButton';\n\nfunction LoadingButton(props: ButtonProps, ref: React.Ref<HTMLButtonElement>) {\n  const { prefixCls } = React.useContext(ActionButtonContext);\n  const { className } = props;\n\n  return (\n    <ActionButton\n      icon={null}\n      color=\"primary\"\n      variant=\"text\"\n      shape=\"circle\"\n      {...props}\n      className={classNames(className, `${prefixCls}-loading-button`)}\n      action=\"onCancel\"\n      ref={ref}\n    >\n      <StopLoadingIcon className={`${prefixCls}-loading-icon`} />\n    </ActionButton>\n  );\n}\n\nexport default React.forwardRef(LoadingButton);\n","import useLayoutEffect from 'rc-util/lib/hooks/useLayoutEffect';\nimport * as React from 'react';\n\nfunction isString(str: any): str is string {\n  return typeof str === 'string';\n}\n\n/**\n * Return typed content and typing status when typing is enabled.\n * Or return content directly.\n */\nconst useTypedEffect = (\n  content: React.ReactNode | object,\n  typingEnabled: boolean,\n  typingStep: number,\n  typingInterval: number,\n): [typedContent: React.ReactNode | object, isTyping: boolean] => {\n\n  const prevContentRef = React.useRef<React.ReactNode | object>('');\n\n  const [typingIndex, setTypingIndex] = React.useState<number>(1);\n\n  const mergedTypingEnabled = typingEnabled && isString(content);\n\n  // Reset typing index when content changed\n  useLayoutEffect(() => {\n    if (!mergedTypingEnabled && isString(content)) {\n      setTypingIndex(content.length);\n    } else if (isString(content) && isString(prevContentRef.current) && content.indexOf(prevContentRef.current) !== 0) {\n      setTypingIndex(1);\n    }\n    prevContentRef.current = content;\n  }, [content]);\n\n  // Start typing\n  React.useEffect(() => {\n    if (mergedTypingEnabled && typingIndex < content.length) {\n      const id = setTimeout(() => {\n        setTypingIndex((prev) => prev + typingStep);\n      }, typingInterval);\n\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [typingIndex, typingEnabled, content]);\n\n  const mergedTypingContent = mergedTypingEnabled ? content.slice(0, typingIndex) : content;\n\n  return [mergedTypingContent, mergedTypingEnabled && typingIndex < content.length];\n};\n\nexport default useTypedEffect;","import { createStyles } from 'antd-style';\nimport { removeCSS, updateCSS } from 'rc-util/lib/Dom/dynamicCSS';\nimport * as React from 'react';\n\nimport useLocale from '../../../hooks/useLocale';\n\nconst whereCls = 'ant-where-checker';\n\nconst locales = {\n  cn: {\n    whereNotSupport: `你的浏览器不支持现代 CSS Selector，请使用现代浏览器（如 Chrome、Firefox 等等）查看官网。如果需要对旧版浏览器进行样式支持，欢迎查阅配置文档：`,\n    whereDocTitle: '兼容性调整（请使用现代浏览器访问）',\n    whereDocUrl: '/docs/react/customize-theme-cn#兼容性调整',\n  },\n  en: {\n    whereNotSupport:\n      'Your browser not support modern CSS Selector. Please use modern browser to view (e.g. Chrome, Firefox, etc). If you want to compatible style with legacy browser, please refer to the configuration document:',\n    whereDocTitle: 'Compatible adjustment (Please use modern browser to visit)',\n    whereDocUrl: '/docs/react/customize-theme#compatible-adjustment',\n  },\n};\n\nconst useStyle = createStyles(({ css, token }) => ({\n  container: css`\n    position: fixed;\n    inset-inline-start: 0;\n    inset-inline-end: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 99999999;\n    background-color: ${token.colorTextSecondary};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n  alertBox: css`\n    border: 1px solid ${token.colorWarningBorder};\n    background-color: ${token.colorWarningBg};\n    color: ${token.colorTextHeading};\n    padding: ${token.paddingXS}px ${token.paddingSM}px;\n    border-radius: ${token.borderRadiusLG}px;\n    z-index: 9999999999;\n    line-height: 22px;\n    width: 520px;\n    a {\n      color: ${token.colorPrimary};\n      text-decoration-line: none;\n    }\n  `,\n}));\n\n// Check for browser support `:where` or not\n// Warning user if not support to modern browser\nconst InfoNewVersion: React.FC = () => {\n  const [location] = useLocale(locales);\n  const [supportWhere, setSupportWhere] = React.useState(true);\n\n  React.useEffect(() => {\n    const p = document.createElement('p');\n    p.className = whereCls;\n    p.style.position = 'fixed';\n    p.style.pointerEvents = 'none';\n    p.style.visibility = 'hidden';\n    p.style.width = '0';\n    document.body.appendChild(p);\n    updateCSS(\n      `\n:where(.${whereCls}) {\n  content: \"__CHECK__\";\n}\n    `,\n      whereCls,\n    );\n\n    // Check style\n    const { content } = getComputedStyle(p);\n    setSupportWhere(String(content).includes('CHECK'));\n\n    document.body.removeChild(p);\n    removeCSS(whereCls);\n  }, []);\n\n  const { styles } = useStyle();\n\n  if (supportWhere) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.alertBox}>\n        {location.whereNotSupport} <a href={location.whereDocUrl}>{location.whereDocTitle}</a>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoNewVersion;\n","import { LeftOutlined, PlusOutlined, RightOutlined } from '@ant-design/icons';\nimport { Button, type ImageProps, type UploadProps } from 'antd';\nimport classnames from 'classnames';\nimport { CSSMotionList } from 'rc-motion';\nimport React from 'react';\nimport type { Attachment } from '..';\nimport SilentUploader from '../SilentUploader';\nimport { AttachmentContext } from '../context';\nimport FileListCard from './FileListCard';\n\nexport interface FileListProps {\n  prefixCls: string;\n  items: Attachment[];\n  onRemove: (item: Attachment) => void;\n  overflow?: 'scrollX' | 'scrollY' | 'wrap';\n  upload: UploadProps;\n  imageProps?: ImageProps;\n\n  // Semantic\n  listClassName?: string;\n  listStyle?: React.CSSProperties;\n  itemClassName?: string;\n  itemStyle?: React.CSSProperties;\n}\n\nconst TOLERANCE = 1;\n\nexport default function FileList(props: FileListProps) {\n  const {\n    prefixCls,\n    items,\n    onRemove,\n    overflow,\n    upload,\n    listClassName,\n    listStyle,\n    itemClassName,\n    itemStyle,\n    imageProps,\n  } = props;\n\n  const listCls = `${prefixCls}-list`;\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  const [firstMount, setFirstMount] = React.useState(false);\n\n  const { disabled } = React.useContext(AttachmentContext);\n\n  React.useEffect(() => {\n    setFirstMount(true);\n    return () => {\n      setFirstMount(false);\n    };\n  }, []);\n\n  // ================================= Scroll =================================\n  const [pingStart, setPingStart] = React.useState(false);\n  const [pingEnd, setPingEnd] = React.useState(false);\n\n  const checkPing = () => {\n    const containerEle = containerRef.current;\n\n    if (!containerEle) {\n      return;\n    }\n\n    if (overflow === 'scrollX') {\n      setPingStart(Math.abs(containerEle.scrollLeft) >= TOLERANCE);\n      setPingEnd(\n        containerEle.scrollWidth - containerEle.clientWidth - Math.abs(containerEle.scrollLeft) >=\n          TOLERANCE,\n      );\n    } else if (overflow === 'scrollY') {\n      setPingStart(containerEle.scrollTop !== 0);\n      setPingEnd(containerEle.scrollHeight - containerEle.clientHeight !== containerEle.scrollTop);\n    }\n  };\n\n  React.useEffect(() => {\n    checkPing();\n  }, [overflow, items.length]);\n\n  const onScrollOffset = (offset: -1 | 1) => {\n    const containerEle = containerRef.current;\n\n    if (containerEle) {\n      containerEle.scrollTo({\n        left: containerEle.scrollLeft + offset * containerEle.clientWidth,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const onScrollLeft = () => {\n    onScrollOffset(-1);\n  };\n\n  const onScrollRight = () => {\n    onScrollOffset(1);\n  };\n\n  // ================================= Render =================================\n  return (\n    <div\n      className={classnames(\n        listCls,\n        {\n          [`${listCls}-overflow-${props.overflow}`]: overflow,\n          [`${listCls}-overflow-ping-start`]: pingStart,\n          [`${listCls}-overflow-ping-end`]: pingEnd,\n        },\n        listClassName,\n      )}\n      ref={containerRef}\n      onScroll={checkPing}\n      style={listStyle}\n    >\n      <CSSMotionList\n        keys={items.map((item) => ({\n          key: item.uid,\n          item,\n        }))}\n        motionName={`${listCls}-card-motion`}\n        component={false}\n        motionAppear={firstMount}\n        motionLeave\n        motionEnter\n      >\n        {({ key, item, className: motionCls, style: motionStyle }) => {\n          return (\n            <FileListCard\n              key={key}\n              prefixCls={prefixCls}\n              item={item}\n              onRemove={onRemove}\n              className={classnames(motionCls, itemClassName)}\n              imageProps={imageProps}\n              style={{\n                ...motionStyle,\n                ...itemStyle,\n              }}\n            />\n          );\n        }}\n      </CSSMotionList>\n      {!disabled && (\n        <SilentUploader upload={upload}>\n          <Button className={`${listCls}-upload-btn`} type=\"dashed\">\n            <PlusOutlined className={`${listCls}-upload-btn-icon`} />\n          </Button>\n        </SilentUploader>\n      )}\n\n      {overflow === 'scrollX' && (\n        <>\n          <Button\n            size=\"small\"\n            shape=\"circle\"\n            className={`${listCls}-prev-btn`}\n            icon={<LeftOutlined />}\n            onClick={onScrollLeft}\n          />\n          <Button\n            size=\"small\"\n            shape=\"circle\"\n            className={`${listCls}-next-btn`}\n            icon={<RightOutlined />}\n            onClick={onScrollRight}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","import { Flex, Typography } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\n\nimport useStyle from './style';\n\nexport type SemanticType = 'title' | 'description' | 'icon' | 'extra';\n\nexport interface WelcomeProps {\n  prefixCls?: string;\n  rootClassName?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  variant?: 'filled' | 'borderless';\n\n  // Semantic\n  classNames?: Partial<Record<SemanticType, string>>;\n  styles?: Partial<Record<SemanticType, React.CSSProperties>>;\n\n  // Layout\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  extra?: React.ReactNode;\n}\n\nfunction Welcome(props: WelcomeProps, ref: React.Ref<HTMLDivElement>) {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName,\n    className,\n    style,\n    variant = 'filled',\n\n    // Semantic\n    classNames = {},\n    styles = {},\n\n    // Layout\n    icon,\n    title,\n    description,\n    extra,\n  } = props;\n\n  // ============================= MISC =============================\n  const { direction, getPrefixCls } = useXProviderContext();\n  const prefixCls = getPrefixCls('welcome', customizePrefixCls);\n\n  // ======================= Component Config =======================\n  const contextConfig = useXComponentConfig('welcome');\n\n  // ============================ Styles ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  // ============================= Icon =============================\n  const iconNode = React.useMemo(() => {\n    if (!icon) {\n      return null;\n    }\n\n    let iconEle = icon;\n    if (typeof icon === 'string' && icon.startsWith('http')) {\n      iconEle = <img src={icon} alt=\"icon\" />;\n    }\n    return (\n      <div\n        className={classnames(`${prefixCls}-icon`, contextConfig.classNames.icon, classNames.icon)}\n        style={styles.icon}\n      >\n        {iconEle}\n      </div>\n    );\n  }, [icon]);\n\n  const titleNode = React.useMemo(() => {\n    if (!title) {\n      return null;\n    }\n\n    return (\n      <Typography.Title\n        level={4}\n        className={classnames(\n          `${prefixCls}-title`,\n          contextConfig.classNames.title,\n          classNames.title,\n        )}\n        style={styles.title}\n      >\n        {title}\n      </Typography.Title>\n    );\n  }, [title]);\n\n  const extraNode = React.useMemo(() => {\n    if (!extra) {\n      return null;\n    }\n\n    return (\n      <div\n        className={classnames(\n          `${prefixCls}-extra`,\n          contextConfig.classNames.extra,\n          classNames.extra,\n        )}\n        style={styles.extra}\n      >\n        {extra}\n      </div>\n    );\n  }, [extra]);\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <Flex\n      ref={ref}\n      className={classnames(\n        prefixCls,\n        contextConfig.className,\n        className,\n        rootClassName,\n        hashId,\n        cssVarCls,\n        `${prefixCls}-${variant}`,\n        {\n          [`${prefixCls}-rtl`]: direction === 'rtl',\n        },\n      )}\n      style={style}\n    >\n      {/* Icon */}\n      {iconNode}\n\n      {/* Content */}\n      <Flex vertical className={`${prefixCls}-content-wrapper`}>\n        {/* Title */}\n        {extra ? (\n          <Flex align=\"flex-start\" className={`${prefixCls}-title-wrapper`}>\n            {titleNode}\n            {extraNode}\n          </Flex>\n        ) : (\n          titleNode\n        )}\n\n        {/* Description */}\n        {description && (\n          <Typography.Text\n            className={classnames(\n              `${prefixCls}-description`,\n              contextConfig.classNames.description,\n              classNames.description,\n            )}\n            style={styles.description}\n          >\n            {description}\n          </Typography.Text>\n        )}\n      </Flex>\n    </Flex>,\n  );\n}\n\nconst ForwardWelcome = React.forwardRef(Welcome);\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardWelcome.displayName = 'Welcome';\n}\n\nexport default ForwardWelcome;\n","\n  import '/home/runner/work/x/x/components/prompts/demo/_semantic.tsx?watch=parent';\n  export default \"import { BulbOutlined, InfoCircleOutlined, RocketOutlined } from '@ant-design/icons';\\nimport { Prompts, type PromptsProps } from '@ant-design/x';\\nimport { Divider, Flex } from 'antd';\\nimport React from 'react';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nconst locales = {\\n  cn: { title: '标题容器', list: '列表容器', item: '列表项', itemContent: '列表项内容' },\\n  en: {\\n    title: 'Title container',\\n    list: 'List container',\\n    item: 'List item',\\n    itemContent: 'List item content',\\n  },\\n};\\n\\nconst subLocales = {\\n  cn: { subList: '子列表容器', subItem: '子列表项' },\\n  en: {\\n    subList: 'Sub-list container',\\n    subItem: 'Sub-list item',\\n  },\\n};\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    icon: <BulbOutlined style={{ color: '#FFD700' }} />,\\n    label: 'Ignite Your Creativity',\\n    description: 'Got any sparks for a new project?',\\n    disabled: false,\\n  },\\n  {\\n    key: '2',\\n    icon: <InfoCircleOutlined style={{ color: '#1890FF' }} />,\\n    label: 'Uncover Background Info',\\n    description: 'Help me understand the background of this topic.',\\n    disabled: false,\\n  },\\n  {\\n    key: '3',\\n    icon: <RocketOutlined style={{ color: '#722ED1' }} />,\\n    label: 'Efficiency Boost Battle',\\n    description: 'How can I work faster and better?',\\n    disabled: false,\\n  },\\n];\\n\\nconst nestItems: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    label: '🔥 Ignite Your Creativity',\\n    children: [\\n      {\\n        key: '1-1',\\n        description: 'What sparks your creativity?',\\n      },\\n      {\\n        key: '1-2',\\n        description: 'How do you get inspired?',\\n      },\\n    ],\\n  },\\n  {\\n    key: '2',\\n    label: '🎨 Uncover Background Info',\\n    children: [\\n      {\\n        key: '2-1',\\n        description: 'What is the background of this topic?',\\n      },\\n      {\\n        key: '2-2',\\n        description: 'Why is this important?',\\n      },\\n    ],\\n  },\\n];\\n\\nconst App: React.FC = () => {\\n  const [locale] = useLocale(locales);\\n  const [subLocale] = useLocale(subLocales);\\n\\n  return (\\n    <Flex vertical>\\n      <SemanticPreview\\n        semantics={[\\n          { name: 'title', desc: locale.title },\\n          { name: 'list', desc: locale.list },\\n          { name: 'item', desc: locale.item },\\n          { name: 'itemContent', desc: locale.itemContent },\\n        ]}\\n      >\\n        <Prompts title=\\\"✨ Inspirational Sparks and Marvelous Tips\\\" items={items} />\\n      </SemanticPreview>\\n      <Divider style={{ margin: 0, padding: 0 }} />\\n      <SemanticPreview\\n        semantics={[\\n          { name: 'subList', desc: subLocale.subList },\\n          { name: 'subItem', desc: subLocale.subItem },\\n        ]}\\n      >\\n        <Prompts title=\\\"✨ Nested Prompts\\\" items={nestItems} />\\n      </SemanticPreview>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/basic.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Bubble } from '@ant-design/x';\\n\\nconst App = () => <Bubble content=\\\"hello world !\\\" />;\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/sender/demo/header-fixed.tsx?watch=parent';\n  export default \"import { EnterOutlined } from '@ant-design/icons';\\nimport { Sender } from '@ant-design/x';\\nimport { App, Flex, Space, Switch, Typography } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const { message } = App.useApp();\\n  const [hasRef, setHasRef] = React.useState(true);\\n\\n  const headerNode = (\\n    <Sender.Header\\n      open={hasRef}\\n      title={\\n        <Space>\\n          <EnterOutlined />\\n          <Typography.Text type=\\\"secondary\\\">\\\"Tell more about Ant Design X\\\"</Typography.Text>\\n        </Space>\\n      }\\n      onOpenChange={setHasRef}\\n    />\\n  );\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\" align=\\\"flex-start\\\">\\n      <Switch\\n        checked={hasRef}\\n        onChange={() => setHasRef(!hasRef)}\\n        checkedChildren=\\\"With Reference\\\"\\n        unCheckedChildren=\\\"With Reference\\\"\\n      />\\n      <Sender\\n        header={headerNode}\\n        onSubmit={() => {\\n          message.success('Send message successfully!');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import { mergeToken } from '@ant-design/cssinjs-utils';\nimport type { FullToken, GenerateStyle, GetDefaultToken } from '../../theme/cssinjs-utils';\nimport { genStyleHooks } from '../../theme/genStyleUtils';\n\n// biome-ignore lint/suspicious/noEmptyInterface: ComponentToken need to be empty by default\nexport interface ComponentToken {}\n\nexport interface WelcomeToken extends FullToken<'Welcome'> {}\n\nconst genWelcomeStyle: GenerateStyle<WelcomeToken> = (token) => {\n  const { componentCls, calc } = token;\n\n  const titleHeight = calc(token.fontSizeHeading3).mul(token.lineHeightHeading3).equal();\n  const descHeight = calc(token.fontSize).mul(token.lineHeight).equal();\n\n  return {\n    [componentCls]: {\n      gap: token.padding,\n\n      // ======================== Icon ========================\n      [`${componentCls}-icon`]: {\n        height: calc(titleHeight).add(descHeight).add(token.paddingXXS).equal(),\n        display: 'flex',\n\n        img: {\n          height: '100%',\n        },\n      },\n\n      // ==================== Content Wrap ====================\n      [`${componentCls}-content-wrapper`]: {\n        gap: token.paddingXS,\n        flex: 'auto',\n        minWidth: 0,\n\n        [`${componentCls}-title-wrapper`]: {\n          gap: token.paddingXS,\n        },\n\n        [`${componentCls}-title`]: {\n          margin: 0,\n        },\n        [`${componentCls}-extra`]: {\n          marginInlineStart: 'auto',\n        },\n      },\n    },\n  };\n};\n\nconst genVariantStyle: GenerateStyle<WelcomeToken> = (token) => {\n  const { componentCls } = token;\n\n  return {\n    [componentCls]: {\n      // ======================== Filled ========================\n      '&-filled': {\n        paddingInline: token.padding,\n        paddingBlock: token.paddingSM,\n        background: token.colorFillContent,\n        borderRadius: token.borderRadiusLG,\n      },\n\n      // ====================== Borderless ======================\n      '&-borderless': {\n        [`${componentCls}-title`]: {\n          fontSize: token.fontSizeHeading3,\n          lineHeight: token.lineHeightHeading3,\n        },\n      },\n    },\n  };\n};\n\nexport const prepareComponentToken: GetDefaultToken<'Welcome'> = () => ({});\n\nexport default genStyleHooks(\n  'Welcome',\n  (token) => {\n    const compToken = mergeToken<WelcomeToken>(token, {});\n    return [genWelcomeStyle(compToken), genVariantStyle(compToken)];\n  },\n  prepareComponentToken,\n);\n","\n  import '/home/runner/work/x/x/components/attachments/demo/placeholder.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined } from '@ant-design/icons';\\nimport { Attachments, type AttachmentsProps } from '@ant-design/x';\\nimport { Button, Flex, GetProp, Result, theme } from 'antd';\\nimport React from 'react';\\n\\nconst presetFiles: AttachmentsProps['items'] = [\\n  {\\n    uid: '1',\\n    name: 'uploading file.xlsx',\\n    status: 'uploading',\\n    url: 'http://www.baidu.com/xxx.png',\\n    percent: 93,\\n  },\\n  {\\n    uid: '2',\\n    name: 'uploaded file.docx',\\n    status: 'done',\\n    size: 123456,\\n    description: 'Customize description',\\n    url: 'http://www.baidu.com/yyy.png',\\n  },\\n  {\\n    uid: '3',\\n    name: 'upload error with long text file name.zip',\\n    status: 'error',\\n    response: 'Server Error 500', // custom error message to show\\n    url: 'http://www.baidu.com/zzz.png',\\n  },\\n  {\\n    uid: '4',\\n    name: 'image uploading preview.png',\\n    status: 'uploading',\\n    percent: 33,\\n    thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n    url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  },\\n  {\\n    uid: '5',\\n    name: 'image done preview.png',\\n    status: 'done',\\n    size: 123456,\\n    thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n    url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  },\\n  {\\n    uid: '6',\\n    name: 'image error preview.png',\\n    status: 'error',\\n    response: 'Server Error 500', // custom error message to show\\n    thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n    url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  },\\n];\\n\\ntype ExtractFunc<T> = T extends (...args: any) => any ? T : never;\\n\\nconst getPlaceholderFn = (\\n  inlinePlaceholder: ReturnType<ExtractFunc<AttachmentsProps['placeholder']>>,\\n) => {\\n  return (type: 'inline' | 'drop') =>\\n    type === 'drop'\\n      ? {\\n          title: 'Drop file here',\\n        }\\n      : inlinePlaceholder;\\n};\\n\\nconst Demo = () => {\\n  const { token } = theme.useToken();\\n\\n  const [items, setItems] = React.useState<GetProp<AttachmentsProps, 'items'>>([]);\\n\\n  const sharedBorderStyle: React.CSSProperties = {\\n    borderRadius: token.borderRadius,\\n    overflow: 'hidden',\\n    background: token.colorBgContainer,\\n  };\\n\\n  const sharedAttachmentProps: AttachmentsProps = {\\n    beforeUpload: () => false,\\n    items,\\n    onChange: ({ fileList }) => {\\n      console.log('onChange:', fileList);\\n      setItems(fileList);\\n    },\\n  };\\n\\n  return (\\n    <Flex\\n      vertical\\n      gap=\\\"middle\\\"\\n      style={{\\n        padding: token.padding,\\n        background: token.colorBgContainerDisabled,\\n      }}\\n    >\\n      <div style={sharedBorderStyle}>\\n        <Attachments\\n          {...sharedAttachmentProps}\\n          placeholder={getPlaceholderFn({\\n            icon: <CloudUploadOutlined />,\\n            title: 'Click or Drop files here',\\n            description: 'Support file type: image, video, audio, document, etc.',\\n          })}\\n        />\\n      </div>\\n\\n      <div style={sharedBorderStyle}>\\n        <Attachments\\n          {...sharedAttachmentProps}\\n          placeholder={getPlaceholderFn(\\n            <Result\\n              title=\\\"Custom Placeholder Node\\\"\\n              icon={<CloudUploadOutlined />}\\n              extra={<Button type=\\\"primary\\\">Do Upload</Button>}\\n              style={{ padding: 0 }}\\n            />,\\n          )}\\n        />\\n      </div>\\n\\n      <Flex gap=\\\"middle\\\">\\n        <Button\\n          style={{ flex: '1 1 50%' }}\\n          disabled={!!items.length}\\n          type=\\\"primary\\\"\\n          onClick={() => setItems(presetFiles)}\\n        >\\n          Fill Files\\n        </Button>\\n        <Button style={{ flex: '1 1 50%' }} disabled={!items.length} onClick={() => setItems([])}>\\n          Reset Files\\n        </Button>\\n      </Flex>\\n    </Flex>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/attachments/demo/overflow.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined } from '@ant-design/icons';\\nimport { Attachments, type AttachmentsProps } from '@ant-design/x';\\nimport { Flex, GetProp, Segmented, Switch } from 'antd';\\nimport React from 'react';\\n\\nconst presetFiles: AttachmentsProps['items'] = Array.from({ length: 30 }).map((_, index) => ({\\n  uid: String(index),\\n  name: `file-${index}.jpg`,\\n  status: 'done',\\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n}));\\n\\nconst Demo = () => {\\n  const [overflow, setOverflow] = React.useState<AttachmentsProps['overflow']>('wrap');\\n  const [items, setItems] = React.useState<GetProp<AttachmentsProps, 'items'>>(presetFiles);\\n  const [disabled, setDisabled] = React.useState(false);\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Flex gap=\\\"middle\\\" align=\\\"center\\\">\\n        <Segmented\\n          options={[\\n            { value: 'wrap', label: 'Wrap' },\\n            { value: 'scrollX', label: 'Scroll X' },\\n            { value: 'scrollY', label: 'Scroll Y' },\\n          ]}\\n          value={overflow}\\n          onChange={setOverflow}\\n          style={{ marginInlineEnd: 'auto' }}\\n        />\\n        <Switch\\n          checked={items.length !== 0}\\n          onChange={() => setItems((prev) => (prev.length ? [] : presetFiles))}\\n          checkedChildren=\\\"Data\\\"\\n          unCheckedChildren=\\\"Data\\\"\\n        />\\n        <Switch\\n          checked={disabled}\\n          onChange={setDisabled}\\n          checkedChildren=\\\"Disabled\\\"\\n          unCheckedChildren=\\\"Disabled\\\"\\n        />\\n      </Flex>\\n      <Attachments\\n        overflow={overflow}\\n        items={items}\\n        onChange={(info) => setItems(info.fileList)}\\n        beforeUpload={() => false}\\n        placeholder={{\\n          icon: <CloudUploadOutlined />,\\n          title: 'Click or Drop files here',\\n          description: 'Support file type: image, video, audio, document, etc.',\\n        }}\\n        disabled={disabled}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","import { useEvent } from 'rc-util';\nimport type { SuggestionItem } from '.';\nimport React from 'react';\n\n/**\n * Since Cascader not support ref active, we use `value` to mock the active item.\n */\nexport default function useActive(\n  items: SuggestionItem[],\n  open: boolean,\n  rtl: boolean,\n  onSelect: (value: string[]) => void,\n  onCancel: () => void,\n) {\n  const [activePaths, setActivePaths] = React.useState<string[]>([]);\n\n  /** Get items by column index */\n  const getItems = (colIndex: number, paths = activePaths) => {\n    let currentItems = items;\n\n    for (let i = 0; i < colIndex - 1; i += 1) {\n      const activePath = paths[i];\n      const activeItem = currentItems.find((item) => item.value === activePath);\n\n      if (!activeItem) {\n        break;\n      }\n\n      currentItems = activeItem.children || [];\n    }\n\n    return currentItems;\n  };\n\n  const getValues = (paths: string[]) => {\n    return paths.map((path, index) => {\n      const currentItems = getItems(index + 1, paths);\n      const currentItem = currentItems.find((item) => item.value === path);\n\n      return currentItem?.value;\n    }) as string[];\n  };\n\n  const offsetRow = (offset: number) => {\n    const currentColIndex = activePaths.length || 1;\n\n    const currentItems = getItems(currentColIndex);\n    const currentRowIndex = currentItems.findIndex(\n      (item) => item.value === activePaths[currentColIndex - 1],\n    );\n    const itemCount = currentItems.length;\n\n    const nextItem = currentItems[(currentRowIndex + offset + itemCount) % itemCount];\n    setActivePaths([...activePaths.slice(0, currentColIndex - 1), nextItem.value]);\n  };\n\n  const offsetPrev = () => {\n    if (activePaths.length > 1) {\n      setActivePaths(activePaths.slice(0, activePaths.length - 1));\n    }\n  };\n\n  const offsetNext = () => {\n    const nextItems = getItems(activePaths.length + 1);\n    if (nextItems.length) {\n      setActivePaths([...activePaths, nextItems[0].value]);\n    }\n  };\n\n  const onKeyDown: React.KeyboardEventHandler = useEvent((e) => {\n    if (!open) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowDown':\n        offsetRow(1);\n        e.preventDefault();\n        break;\n\n      case 'ArrowUp':\n        offsetRow(-1);\n        e.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        if (rtl) {\n          offsetPrev();\n        } else {\n          offsetNext();\n        }\n        e.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        if (rtl) {\n          offsetNext();\n        } else {\n          offsetPrev();\n        }\n        e.preventDefault();\n        break;\n\n      case 'Enter':\n        // Submit if not have children\n        if (!getItems(activePaths.length + 1).length) {\n          onSelect(getValues(activePaths));\n        }\n        e.preventDefault();\n        break;\n\n      case 'Escape':\n        onCancel();\n        e.preventDefault();\n        break;\n    }\n  });\n\n  React.useEffect(() => {\n    if (open) {\n      setActivePaths([items[0].value]);\n    }\n  }, [open]);\n\n  return [activePaths, onKeyDown] as const;\n}\n","import * as React from 'react';\nimport type { BubbleProps, TypingOption } from '../interface';\n\nfunction useTypingConfig(typing: BubbleProps['typing']) {\n  return React.useMemo<\n    [enableTyping: boolean, step: number, interval: number, suffix: React.ReactNode]\n  >(() => {\n    if (!typing) {\n      return [false, 0, 0, null];\n    }\n\n    let baseConfig: Required<TypingOption> = {\n      step: 1,\n      interval: 50,\n      // set default suffix is empty\n      suffix: null,\n    };\n\n    if (typeof typing === 'object') {\n      baseConfig = { ...baseConfig, ...typing };\n    }\n\n    return [true, baseConfig.step, baseConfig.interval, baseConfig.suffix];\n  }, [typing]);\n}\n\nexport default useTypingConfig;\n","import useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport React from 'react';\nimport initCollapseMotion from '../../_util/motion';\n\nimport type { CSSMotionProps } from 'rc-motion';\n\nexport type CollapsibleOptions = {\n  /**\n   * @desc 当前展开的节点\n   * @descEN current expanded keys\n   */\n  expandedKeys?: string[];\n\n  /**\n   * @desc 展开节点变化回调\n   * @descEN callback when expanded keys change\n   */\n  onExpand?: (expandedKeys: string[]) => void;\n};\n\nexport type Collapsible = boolean | CollapsibleOptions;\n\ntype RequiredCollapsibleOptions = Required<CollapsibleOptions>;\n\ntype UseCollapsible = (\n  collapsible?: Collapsible,\n  prefixCls?: string,\n  rootPrefixCls?: string,\n) => [\n  boolean,\n  RequiredCollapsibleOptions['expandedKeys'],\n  ((curKey: string) => void) | undefined,\n  CSSMotionProps,\n];\n\nconst useCollapsible: UseCollapsible = (collapsible, prefixCls, rootPrefixCls) => {\n  // ============================ Collapsible ============================\n  const [enableCollapse, customizeExpandedKeys, customizeOnExpand] = React.useMemo(() => {\n    let baseConfig: RequiredCollapsibleOptions = {\n      expandedKeys: [],\n      onExpand: () => {},\n    };\n\n    if (!collapsible) {\n      return [false, baseConfig.expandedKeys, baseConfig.onExpand];\n    }\n\n    if (typeof collapsible === 'object') {\n      baseConfig = { ...baseConfig, ...collapsible };\n    }\n\n    return [true, baseConfig.expandedKeys, baseConfig.onExpand];\n  }, [collapsible]);\n\n  // ============================ ExpandedKeys ============================\n  const [mergedExpandedKeys, setMergedExpandedKeys] = useMergedState<\n    RequiredCollapsibleOptions['expandedKeys']\n  >([], {\n    value: customizeExpandedKeys,\n    onChange: customizeOnExpand,\n  });\n\n  // ============================ Event ============================\n  const onItemExpand = (curKey: string) => {\n    setMergedExpandedKeys((preKeys) => {\n      const keys = preKeys.includes(curKey)\n        ? preKeys.filter((key) => key !== curKey)\n        : [...preKeys, curKey];\n      customizeOnExpand?.(keys);\n      return keys;\n    });\n  };\n\n  // ============================ Motion ============================\n  const collapseMotion: CSSMotionProps = React.useMemo(() => {\n    if (!enableCollapse) return {};\n\n    return {\n      ...initCollapseMotion(rootPrefixCls),\n      motionAppear: false,\n      leavedClassName: `${prefixCls}-content-hidden`,\n    };\n  }, [rootPrefixCls, prefixCls, enableCollapse]);\n\n  // ============================ Return ============================\n  return [\n    enableCollapse,\n    mergedExpandedKeys,\n    enableCollapse ? onItemExpand : undefined,\n    collapseMotion,\n  ];\n};\n\nexport default useCollapsible;\n","import type { GenerateStyle } from '../../theme/cssinjs-utils';\nimport type { BubbleToken } from '.';\n\nconst genBubbleListStyle: GenerateStyle<BubbleToken> = (token) => {\n  const { componentCls, padding } = token;\n  return {\n    [`${componentCls}-list`]: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: padding,\n      overflowY: 'auto',\n    },\n  };\n};\n\nexport default genBubbleListStyle;\n","import { useEvent, useMergedState } from 'rc-util';\nimport React from 'react';\n\n// Ensure that the SpeechRecognition API is available in the browser\nlet SpeechRecognition: any;\n\nif (!SpeechRecognition && typeof window !== 'undefined') {\n  SpeechRecognition = (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n}\n\nexport type ControlledSpeechConfig = {\n  recording?: boolean;\n  onRecordingChange: (recording: boolean) => void;\n};\n\nexport type AllowSpeech = boolean | ControlledSpeechConfig;\n\nexport default function useSpeech(\n  onSpeech: (transcript: string) => void,\n  allowSpeech?: AllowSpeech,\n) {\n  const onEventSpeech = useEvent(onSpeech);\n\n  // ========================== Speech Config ==========================\n  const [controlledRecording, onControlledRecordingChange, speechInControlled] =\n    React.useMemo(() => {\n      if (typeof allowSpeech === 'object') {\n        return [\n          allowSpeech.recording,\n          allowSpeech.onRecordingChange,\n          typeof allowSpeech.recording === 'boolean',\n        ] as const;\n      }\n\n      return [undefined, undefined, false] as const;\n    }, [allowSpeech]);\n\n  // ======================== Speech Permission ========================\n  const [permissionState, setPermissionState] = React.useState<PermissionState | null>(null);\n\n  React.useEffect(() => {\n    if (typeof navigator !== 'undefined' && 'permissions' in navigator) {\n      let lastPermission: PermissionStatus | null = null;\n\n      (navigator as any).permissions\n        .query({ name: 'microphone' })\n        .then((permissionStatus: PermissionStatus) => {\n          setPermissionState(permissionStatus.state);\n\n          // Keep the last permission status.\n          permissionStatus.onchange = function () {\n            setPermissionState(this.state);\n          };\n\n          lastPermission = permissionStatus;\n        });\n\n      return () => {\n        // Avoid memory leaks\n        if (lastPermission) {\n          lastPermission.onchange = null;\n        }\n      };\n    }\n  }, []);\n\n  // Convert permission state to a simple type\n  const mergedAllowSpeech = SpeechRecognition && permissionState !== 'denied';\n\n  // ========================== Speech Events ==========================\n  const recognitionRef = React.useRef<any | null>(null);\n  const [recording, setRecording] = useMergedState(false, {\n    value: controlledRecording,\n  });\n\n  const forceBreakRef = React.useRef(false);\n\n  const ensureRecognition = () => {\n    if (mergedAllowSpeech && !recognitionRef.current) {\n      const recognition = new SpeechRecognition();\n\n      recognition.onstart = () => {\n        setRecording(true);\n      };\n\n      recognition.onend = () => {\n        setRecording(false);\n      };\n\n      recognition.onresult = (event: SpeechRecognitionResult) => {\n        if (!forceBreakRef.current) {\n          const transcript = (event as any).results?.[0]?.[0]?.transcript;\n          onEventSpeech(transcript);\n        }\n\n        forceBreakRef.current = false;\n      };\n\n      recognitionRef.current = recognition;\n    }\n  };\n\n  const triggerSpeech = useEvent((forceBreak: boolean) => {\n    // Ignore if `forceBreak` but is not recording\n    if (forceBreak && !recording) {\n      return;\n    }\n\n    forceBreakRef.current = forceBreak;\n\n    if (speechInControlled) {\n      // If in controlled mode, do nothing\n      onControlledRecordingChange?.(!recording);\n    } else {\n      ensureRecognition();\n\n      if (recognitionRef.current) {\n        if (recording) {\n          recognitionRef.current.stop();\n          onControlledRecordingChange?.(false);\n        } else {\n          recognitionRef.current.start();\n          onControlledRecordingChange?.(true);\n        }\n      }\n    }\n  });\n\n  return [mergedAllowSpeech, triggerSpeech, recording] as const;\n}\n","\n  import '/home/runner/work/x/x/components/bubble/demo/header-and-footer.tsx?watch=parent';\n  export default \"import { CopyOutlined, SyncOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport { Button, Space, message, theme } from 'antd';\\nimport React from 'react';\\n\\nconst App: React.FC = () => {\\n  const { token } = theme.useToken();\\n\\n  // 豆包中生成的图片也是不支持复制的 如果期望的是复制待md格式的内容?\\n  const onCopy = (textToCopy: string) => {\\n    navigator.clipboard.writeText(textToCopy);\\n    message.success('文本复制成功');\\n  };\\n\\n  return (\\n    <Bubble\\n      content=\\\"Hello, welcome to use Ant Design X! Just ask if you have any questions.\\\"\\n      avatar={{ icon: <UserOutlined /> }}\\n      header=\\\"Ant Design X\\\"\\n      footer={(messageContext) => (\\n        <Space size={token.paddingXXS}>\\n          <Button color=\\\"default\\\" variant=\\\"text\\\" size=\\\"small\\\" icon={<SyncOutlined />} />\\n          <Button\\n            // onClick={() => console.log('Copy message:', messageContext.content)}\\n            onClick={() => onCopy(messageContext)}\\n            color=\\\"default\\\"\\n            variant=\\\"text\\\"\\n            size=\\\"small\\\"\\n            icon={<CopyOutlined />}\\n          />\\n        </Space>\\n      )}\\n    />\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","function use<T>(promise: PromiseLike<T>): T {\n  const internal: PromiseLike<T> & {\n    status?: 'pending' | 'fulfilled' | 'rejected';\n    value?: T;\n    reason?: any;\n  } = promise;\n  if (internal.status === 'fulfilled') {\n    return internal.value as T;\n  }\n  if (internal.status === 'rejected') {\n    throw internal.reason;\n  }\n  if (internal.status === 'pending') {\n    throw internal;\n  }\n  internal.status = 'pending';\n  internal.then(\n    (result) => {\n      internal.status = 'fulfilled';\n      internal.value = result;\n    },\n    (reason) => {\n      internal.status = 'rejected';\n      internal.reason = reason;\n    },\n  );\n  throw internal;\n}\n\nexport default use;\n","import { createStyles } from 'antd-style';\nimport React from 'react';\nimport CustomizationSender from '../../common/CustomizationSender';\n\nimport useLocale from '../../../../hooks/useLocale';\nimport { LOCALES, useCustomizationBgStyle } from '../../common/CustomizationProvider';\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    container: css`\n      display: flex;\n      height: 100%;\n      width: 100%;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      gap: ${token.paddingLG}px;\n    `,\n    title: css`\n      font-size: 42px;\n      color: #ffffff3f;\n      line-height: 50px;\n      font-weight: 500;\n    `,\n  };\n});\n\nconst NestScene: React.FC = () => {\n  const { styles } = useStyle();\n\n  const {\n    styles: { background },\n  } = useCustomizationBgStyle();\n\n  const [locale] = useLocale(LOCALES);\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>{locale.greeting_short}</div>\n      <CustomizationSender\n        style={{\n          width: 580,\n          borderRadius: 32,\n        }}\n        value={locale.question1}\n        className={background}\n      />\n    </div>\n  );\n};\n\nexport default NestScene;\n","import React, { memo } from 'react';\n\nconst StopLoadingIcon = memo((props: { className?: string }) => {\n  const { className } = props;\n\n  return (\n    <svg\n      color=\"currentColor\"\n      viewBox=\"0 0 1000 1000\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      //xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      className={className}\n    >\n      <title>Stop Loading</title>\n      <rect fill=\"currentColor\" height=\"250\" rx=\"24\" ry=\"24\" width=\"250\" x=\"375\" y=\"375\" />\n\n      <circle\n        cx=\"500\"\n        cy=\"500\"\n        fill=\"none\"\n        r=\"450\"\n        stroke=\"currentColor\"\n        strokeWidth=\"100\"\n        opacity=\"0.45\"\n      />\n\n      <circle\n        cx=\"500\"\n        cy=\"500\"\n        fill=\"none\"\n        r=\"450\"\n        stroke=\"currentColor\"\n        strokeWidth=\"100\"\n        strokeDasharray=\"600 9999999\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"1s\"\n          from=\"0 500 500\"\n          repeatCount=\"indefinite\"\n          to=\"360 500 500\"\n          type=\"rotate\"\n        />\n      </circle>\n    </svg>\n  );\n});\nexport default StopLoadingIcon;\n","\n  import '/home/runner/work/x/x/components/prompts/demo/flex-wrap.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Prompts } from '@ant-design/x';\\nimport type { PromptsProps } from '@ant-design/x';\\nimport {\\n  BulbOutlined,\\n  InfoCircleOutlined,\\n  WarningOutlined,\\n  RocketOutlined,\\n  CheckCircleOutlined,\\n  CoffeeOutlined,\\n  SmileOutlined,\\n  FireOutlined,\\n} from '@ant-design/icons';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    icon: <BulbOutlined style={{ color: '#FFD700' }} />,\\n    description: 'Got any sparks for a new project?',\\n  },\\n  {\\n    key: '2',\\n    icon: <InfoCircleOutlined style={{ color: '#1890FF' }} />,\\n    description: 'Help me understand the background of this topic.',\\n  },\\n  {\\n    key: '3',\\n    icon: <WarningOutlined style={{ color: '#FF4D4F' }} />,\\n    description: 'How to solve common issues? Share some tips!',\\n  },\\n  {\\n    key: '4',\\n    icon: <RocketOutlined style={{ color: '#722ED1' }} />,\\n    description: 'How can I work faster and better?',\\n  },\\n  {\\n    key: '5',\\n    icon: <CheckCircleOutlined style={{ color: '#52C41A' }} />,\\n    description: 'What are some tricks for getting tasks done?',\\n  },\\n  {\\n    key: '6',\\n    icon: <CoffeeOutlined style={{ color: '#964B00' }} />,\\n    description: 'How to rest effectively after long hours of work?',\\n  },\\n  {\\n    key: '7',\\n    icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\\n    description: 'What are the secrets to maintaining a positive mindset?',\\n  },\\n  {\\n    key: '8',\\n    icon: <FireOutlined style={{ color: '#FF4D4F' }} />,\\n    description: 'How to stay calm under immense pressure?',\\n  },\\n];\\n\\nconst App = () => <Prompts title=\\\"✨ Inspirational Sparks and Marvelous Tips\\\" items={items} wrap />;\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/thought-chain/demo/basic.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport type { ThoughtChainProps } from '@ant-design/x';\\n\\nimport { Card, Button } from 'antd';\\nimport { MoreOutlined } from '@ant-design/icons';\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n];\\n\\nexport default () => (\\n  <Card style={{ width: 500 }}>\\n    <ThoughtChain items={items} />\\n  </Card>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/use-x-chat/demo/stream-cancel.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble, Sender, XStream, useXAgent, useXChat } from '@ant-design/x';\\nimport { Flex, type GetProp } from 'antd';\\nimport React, { useEffect, useRef } from 'react';\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n  },\\n  local: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n};\\n\\nconst contentChunks = [\\n  'He',\\n  'llo',\\n  ', w',\\n  'or',\\n  'ld!',\\n  ' Ant',\\n  ' Design',\\n  ' X',\\n  ' is',\\n  ' the',\\n  ' best',\\n  '!',\\n];\\n\\nfunction mockReadableStream() {\\n  const sseChunks: string[] = [];\\n\\n  for (let i = 0; i < contentChunks.length; i++) {\\n    const sseEventPart = `event: message\\\\ndata: {\\\"id\\\":\\\"${i}\\\",\\\"content\\\":\\\"${contentChunks[i]}\\\"}\\\\n\\\\n`;\\n    sseChunks.push(sseEventPart);\\n  }\\n\\n  return new ReadableStream({\\n    async start(controller) {\\n      for (const chunk of sseChunks) {\\n        await new Promise((resolve) => setTimeout(resolve, 300));\\n        controller.enqueue(new TextEncoder().encode(chunk));\\n      }\\n      controller.close();\\n    },\\n  });\\n}\\n\\nconst App = () => {\\n  const [content, setContent] = React.useState('');\\n\\n  const abortRef = useRef(() => {});\\n\\n  useEffect(() => {\\n    return () => {\\n      abortRef.current();\\n    };\\n  }, []);\\n\\n  // Agent for request\\n  const [agent] = useXAgent({\\n    request: async (_, { onSuccess, onUpdate }) => {\\n      const stream = XStream({\\n        readableStream: mockReadableStream(),\\n      });\\n\\n      const reader = stream.getReader();\\n      abortRef.current = () => {\\n        reader?.cancel();\\n      };\\n\\n      let current = '';\\n      while (reader) {\\n        const { value, done } = await reader.read();\\n        if (done) {\\n          onSuccess(current);\\n          break;\\n        }\\n        if (!value) continue;\\n        const data = JSON.parse(value.data);\\n        current += data.content || '';\\n        onUpdate(current);\\n      }\\n    },\\n  });\\n\\n  // Chat messages\\n  const { onRequest, messages } = useXChat({\\n    agent,\\n  });\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      <Bubble.List\\n        roles={roles}\\n        style={{ maxHeight: 300 }}\\n        items={messages.map(({ id, message, status }) => ({\\n          key: id,\\n          role: status === 'local' ? 'local' : 'ai',\\n          content: message,\\n        }))}\\n      />\\n      <Sender\\n        loading={agent.isRequesting()}\\n        value={content}\\n        onChange={setContent}\\n        onSubmit={(nextContent) => {\\n          onRequest(nextContent);\\n          setContent('');\\n        }}\\n        onCancel={() => abortRef.current()}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { Typography } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\n\nimport useStyle from './style';\n\nexport interface BasePromptItem {\n  /**\n   * @desc 唯一标识用于区分每个提示项。\n   * @descEN Unique identifier used to distinguish each prompt item.\n   */\n  key: string;\n\n  /**\n   * @desc 提示图标显示在提示项的左侧。\n   * @descEN Prompt icon displayed on the left side of the prompt item.\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * @desc 提示标签显示提示的主要内容。\n   * @descEN Prompt label displaying the main content of the prompt.\n   */\n  label?: React.ReactNode;\n\n  /**\n   * @desc 提示描述提供额外的信息。\n   * @descEN Prompt description providing additional information.\n   */\n  description?: React.ReactNode;\n\n  /**\n   * @desc 设置为 true 时禁用点击事件。\n   * @descEN When set to true, click events are disabled.\n   */\n  disabled?: boolean;\n}\n\nexport interface PromptProps extends BasePromptItem {\n  children?: BasePromptItem[];\n}\n\nexport type SemanticType = 'list' | 'item' | 'itemContent' | 'title' | 'subList' | 'subItem';\n\nexport interface PromptsProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onClick' | 'title'> {\n  /**\n   * @desc 包含多个提示项的列表。\n   * @descEN List containing multiple prompt items.\n   */\n  items?: PromptProps[];\n\n  /**\n   * @desc 显示在提示列表顶部的标题。\n   * @descEN Title displayed at the top of the prompt list.\n   */\n  title?: React.ReactNode;\n\n  /**\n   * @desc Item 提示项被点击时的回调函数。\n   * @descEN Callback function when a prompt item is clicked.\n   */\n  onItemClick?: (info: { data: PromptProps }) => void;\n\n  /**\n   * @desc 提示列表是否垂直排列。\n   * @descEN Whether the prompt list is arranged vertically.\n   */\n  vertical?: boolean;\n\n  /**\n   * @desc 提示列表是否换行。\n   * @descEN Whether the prompt list is wrapped.\n   */\n  wrap?: boolean;\n\n  /**\n   * @desc 自定义样式，用于各个提示项的不同部分。\n   * @descEN Custom styles for different parts of each prompt item.\n   */\n  styles?: Partial<Record<SemanticType, React.CSSProperties>>;\n\n  /**\n   * @desc 自定义样式类名，用于各个提示项的不同部分。\n   * @descEN Custom style class names for different parts of each prompt item.\n   */\n  classNames?: Partial<Record<SemanticType, string>>;\n\n  /**\n   * @desc 样式类名的前缀。\n   * @descEN Prefix for style class names.\n   */\n  prefixCls?: string;\n\n  /**\n   * @desc 根节点的样式类名。\n   * @descEN Style class name for the root node.\n   */\n  rootClassName?: string;\n}\n\nconst Prompts: React.FC<PromptsProps> = (props) => {\n  const {\n    prefixCls: customizePrefixCls,\n    title,\n    className,\n    items,\n    onItemClick,\n    vertical,\n    wrap,\n    rootClassName,\n    styles = {},\n    classNames = {},\n    style,\n    ...htmlProps\n  } = props;\n\n  // ============================ PrefixCls ============================\n  const { getPrefixCls, direction } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('prompts', customizePrefixCls);\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('prompts');\n\n  // ============================ Style ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  const mergedCls = classnames(\n    prefixCls,\n    contextConfig.className,\n    className,\n    rootClassName,\n    hashId,\n    cssVarCls,\n    {\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n    },\n  );\n\n  const mergedListCls = classnames(\n    `${prefixCls}-list`,\n    contextConfig.classNames.list,\n    classNames.list,\n    { [`${prefixCls}-list-wrap`]: wrap },\n    { [`${prefixCls}-list-vertical`]: vertical },\n  );\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <div {...htmlProps} className={mergedCls} style={{ ...style, ...contextConfig.style }}>\n      {/* Title */}\n      {title && (\n        <Typography.Title\n          level={5}\n          className={classnames(\n            `${prefixCls}-title`,\n            contextConfig.classNames.title,\n            classNames.title,\n          )}\n          style={{ ...contextConfig.styles.title, ...styles.title }}\n        >\n          {title}\n        </Typography.Title>\n      )}\n      {/* Prompt List */}\n      <div className={mergedListCls} style={{ ...contextConfig.styles.list, ...styles.list }}>\n        {items?.map((info, index) => {\n          const isNest = info.children && info.children.length > 0;\n\n          return (\n            <div\n              key={info.key || `key_${index}`}\n              style={{ ...contextConfig.styles.item, ...styles.item }}\n              className={classnames(\n                `${prefixCls}-item`,\n                contextConfig.classNames.item,\n                classNames.item,\n                {\n                  [`${prefixCls}-item-disabled`]: info.disabled,\n                  [`${prefixCls}-item-has-nest`]: isNest,\n                },\n              )}\n              onClick={() => {\n                if (!isNest && onItemClick) {\n                  onItemClick({ data: info });\n                }\n              }}\n            >\n              {/* Icon */}\n              {info.icon && <div className={`${prefixCls}-icon`}>{info.icon}</div>}\n              {/* Content */}\n              <div\n                className={classnames(\n                  `${prefixCls}-content`,\n                  contextConfig.classNames.itemContent,\n                  classNames.itemContent,\n                )}\n                style={{ ...contextConfig.styles.itemContent, ...styles.itemContent }}\n              >\n                {/* Label */}\n                {info.label && <h6 className={`${prefixCls}-label`}>{info.label}</h6>}\n\n                {/* Description */}\n                {info.description && <p className={`${prefixCls}-desc`}>{info.description}</p>}\n\n                {/* Children */}\n                {isNest && (\n                  <Prompts\n                    className={`${prefixCls}-nested`}\n                    items={info.children}\n                    vertical\n                    onItemClick={onItemClick}\n                    classNames={{\n                      list: classNames.subList,\n                      item: classNames.subItem,\n                    }}\n                    styles={{\n                      list: styles.subList,\n                      item: styles.subItem,\n                    }}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>,\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Prompts.displayName = 'Prompts';\n}\n\nexport default Prompts;\n","import { createStyles } from 'antd-style';\nimport classnames from 'classnames';\nimport { useLocation } from 'dumi';\nimport React from 'react';\n\nimport { Button } from 'antd';\nimport useLocale from '../../../hooks/useLocale';\nimport useLottie from '../../../hooks/useLottie';\nimport Link from '../../../theme/common/Link';\nimport { getLocalizedPathname, isZhCN } from '../../../theme/utils';\nimport Container from '../common/Container';\nimport SiteContext from './SiteContext';\nimport type { SiteContextProps } from './SiteContext';\n\nconst locales = {\n  cn: {\n    slogan: 'AI 体验新秩序',\n    desc: 'Ant Design 团队匠心呈现 RICH 设计范式，打造卓越 AI 界面解决方案，引领智能新体验。',\n    start: '开始使用',\n    design: '设计语言',\n  },\n  en: {\n    slogan: 'New AI Experience',\n    desc: 'The Ant Design team presents the RICH paradigm, crafting superior AI interface solutions and pioneering intelligent experiences.',\n    start: 'Get Started',\n    design: 'Get Design',\n  },\n};\n\nconst useStyle = createStyles(({ token, css }) => {\n  const minBannerWidth = token.mobileMaxWidth - token.padding * 2;\n\n  return {\n    banner: css`\n      width: 100vw;\n      height: calc(100vh - 160px);\n      min-height: 600px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: relative;\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        height: calc(100vh - ${token.paddingLG}px);\n      }\n    `,\n    background: css`\n      width: 100%;\n      height: 100vh;\n      position: absolute;\n      filter: blur(50px);\n      background: linear-gradient(135deg, #ffffff26 14%, #ffffff0d 59%);\n    `,\n    container: css`\n      height: 100%;\n      max-height: calc(100vh - ${token.headerHeight * 2}px);\n      position: relative;\n    `,\n    title: css`\n      max-width: ${minBannerWidth}px;\n      position: absolute;\n      top: 50%;\n      inset-inline-start: 0;\n      transform: translateY(-50%);\n      z-index: 1;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        gap: ${token.paddingXS}px;\n      }\n    `,\n    lottie: css`\n      position: absolute;\n      top: 50%;\n      inset-inline-end: 0;\n      transform: translate(${token.pcContainerMargin}px, -40%);\n      z-index: 0;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        display: none;\n      }\n    `,\n    lottie_rtl: css`\n      transform: translate(${token.pcContainerMargin * -2}px, -40%) !important;\n    `,\n    name: css`\n      font-size: 80px !important;\n      line-height: 1.3;\n      color: ${token.colorText};\n      font-weight: bold;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        font-size: 54px !important;\n      }\n    `,\n    desc: css`\n      font-size: ${token.fontSizeHeading5}px;\n      font-weight: 400;\n      max-width: 500px;\n      color: ${token.colorText};\n      opacity: 0.65;\n      margin: ${token.marginLG}px 0 ${token.marginLG * 2}px 0;\n      \n    `,\n    iAlphabet: css`\n      position: relative;\n      font-size: 60px;\n      display: inline-block;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        transform: scale(0.7);\n        top: 6px;\n      }\n    `,\n    iAlphabetStar: css`\n      position: absolute;\n      top: 0;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 22px;\n      height: 22px;\n      background: no-repeat center url('https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*RMOpRLHgA9wAAAAAAAAAAAAADgCCAQ/original');\n      background-size: cover;\n\n      &::before {\n        content: '';\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        border-radius: inherit;\n        position: absolute;\n        background: radial-gradient(circle, #fe8aff 0%, #fe8aff00 100%);\n        filter: blur(12px);\n      };\n    `,\n    content: css`\n      display: flex;\n      gap: ${token.paddingLG}px;\n      flex-wrap: wrap;\n    `,\n    btn: css`\n      height: 56px;\n      border: none;\n      border-radius: 40px;\n      padding: 0 40px;\n      display: inline-block;\n      font-size: 18px;\n      cursor: pointer;\n      font-weight: 600;\n      box-shadow: ${token.boxShadow};\n      position: relative;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        padding: 0 ${token.paddingLG}px;\n      }\n    `,\n    startBtn: css`\n      background: linear-gradient(90deg, #c7deff 0%, #ffffffd9 76%);\n      color: #14204c;\n      position: relative;\n\n      ::after {\n        content: '';\n        position: absolute;\n        border-radius: 40px;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(255, 255, 255, 0.5);\n        opacity: 0;\n        z-index: -1;\n        transition: opacity 0.2s;\n      }\n\n      :hover::after {\n        opacity: 1;\n      }\n    `,\n    designBtn: css`\n      background: #ffffff1a;\n      backdrop-filter: blur(40px);\n\n      &::after {\n        content: '';\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        border-radius: inherit;\n\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        inset-inline-start: 0;\n        inset-inline-end: 0;\n\n        padding: ${token.lineWidth}px;\n        background: linear-gradient(180deg, #ffffff26 0%, #ffffff00 100%);\n        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n        mask-composite: exclude;\n      };\n  `,\n  };\n});\n\nconst MainBanner: React.FC = () => {\n  const [locale] = useLocale(locales);\n\n  const { pathname, search } = useLocation();\n\n  const { direction, isMobile } = React.useContext<SiteContextProps>(SiteContext);\n\n  const { styles } = useStyle();\n\n  const [bgLottieRef, bgAnimation] = useLottie({\n    renderer: 'svg',\n    loop: false,\n    autoplay: false,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n    path: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/file/A*3QcuQpaOguQAAAAAAAAAAAAADgCCAQ',\n  });\n\n  const [ipLottieRef, ipAnimation] = useLottie({\n    renderer: 'svg',\n    loop: false,\n    autoplay: true,\n    disabled: isMobile,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid meet',\n    },\n    path: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/file/A*YbV2QqZdDQ0AAAAAAAAAAAAADgCCAQ',\n  });\n\n  React.useEffect(() => {\n    if (!bgAnimation) return;\n\n    let isReverse = false;\n\n    function playAnimation() {\n      if (!bgAnimation) return;\n\n      if (isReverse) {\n        bgAnimation.setDirection(-1);\n        bgAnimation.goToAndPlay(bgAnimation.totalFrames - 1, true);\n      } else {\n        bgAnimation.setDirection(1);\n        bgAnimation.goToAndPlay(0, true);\n      }\n      isReverse = !isReverse;\n    }\n\n    bgAnimation.addEventListener('data_ready', playAnimation);\n\n    playAnimation();\n\n    return () => {\n      bgAnimation.destroy();\n    };\n  }, [!!bgAnimation]);\n\n  React.useEffect(() => {\n    if (!ipAnimation) return;\n\n    let reverseFrameInterval: NodeJS.Timeout;\n\n    ipAnimation.addEventListener('data_ready', () => {\n      let currentFrame = ipAnimation.totalFrames;\n      const reverseFrames = 30;\n\n      reverseFrameInterval = setInterval(() => {\n        currentFrame--;\n        ipAnimation.goToAndStop(currentFrame, true);\n\n        if (currentFrame <= ipAnimation.totalFrames - reverseFrames) {\n          clearInterval(reverseFrameInterval);\n          ipAnimation.play();\n        }\n      }, 1000 / 30);\n    });\n\n    return () => {\n      ipAnimation.destroy();\n      window.clearInterval(reverseFrameInterval);\n    };\n  }, [!!ipAnimation]);\n\n  return (\n    <section className={styles.banner}>\n      <div ref={bgLottieRef} className={styles.background} />\n      <Container className={styles.container}>\n        <div className={styles.title}>\n          <h1 className={styles.name}>\n            Ant Des\n            <span className={styles.iAlphabet}>\n              I<span className={styles.iAlphabetStar} />\n            </span>\n            gn X\n          </h1>\n          <h1 className={styles.name}>{locale.slogan}</h1>\n          <h5 className={styles.desc}>{locale.desc}</h5>\n\n          <div className={styles.content}>\n            <Link to={getLocalizedPathname('components/overview', isZhCN(pathname), search)}>\n              <button type=\"button\" className={classnames(styles.btn, styles.startBtn)}>\n                {locale.start}\n              </button>\n            </Link>\n            <Link to={getLocalizedPathname('/docs/spec/introduce', isZhCN(pathname), search)}>\n              <Button type=\"text\" className={classnames(styles.btn, styles.designBtn)}>\n                {locale.design}\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div\n          ref={ipLottieRef}\n          className={classnames(styles.lottie, direction === 'rtl' && styles.lottie_rtl)}\n        />\n      </Container>\n    </section>\n  );\n};\n\nexport default MainBanner;\n","import { createStyles } from 'antd-style';\nimport { useLocation, useNavigate } from 'dumi';\nimport React, { useContext } from 'react';\n\nimport useLocale from '../../../hooks/useLocale';\nimport SiteContext from '../../../theme/slots/SiteContext';\nimport * as utils from '../../../theme/utils';\nimport Introduction from '../common/Introduction';\n\nconst locales = {\n  cn: {\n    title: 'AI 设计语言与研发框架',\n    desc: '配套生态 , 让你快速搭建网站应用',\n\n    values: 'RICH 设计指南',\n    valuesDesc: '意图、角色、会话、混合 UI',\n    guide: '组件设计指引',\n    guideDesc: '全局样式、设计模式',\n    lib: '组件库',\n    libDesc: 'Ant Design of React / Angular / Vue',\n\n    // Secondary\n    antd: 'Ant Design',\n    antdDesc: '企业级 UI 设计语言和 React 组件库',\n    antdMobile: 'Ant Design Mobile',\n    antdMobileDesc: 'Ant Design移动端 UI 组件库',\n    antv: 'AntV',\n    antvDesc: '全新一代数据可视化解决方案',\n  },\n  en: {\n    title: 'Design & Framework',\n    desc: 'An ecosystem for rapid web app development',\n\n    values: 'RICH Design Guide',\n    valuesDesc: 'Intention, Role, Conversation, Hybrid',\n    guide: 'Design guide',\n    guideDesc: 'Global style and design pattern',\n    lib: 'Components Libraries',\n    libDesc: 'Ant Design of React / Angular / Vue',\n\n    // Secondary\n    antd: 'Ant Design',\n    antdDesc:\n      'Help designers/developers building beautiful products more flexible and working with happiness',\n    antdMobile: 'Ant Design Mobile',\n    antdMobileDesc: 'Mobile UI component library',\n    antv: 'AntV',\n    antvDesc: 'New generation of data visualization solutions',\n  },\n};\n\nconst useStyle = () => {\n  return createStyles(({ token, css }) => ({\n    container: css`\n    `,\n    header: css`\n    display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 270px;\n\n    `,\n    card: css`\n      padding: ${token.paddingSM}px;\n      border-radius: ${token.borderRadius * 2}px;\n      box-shadow:\n        0 1px 2px rgba(0, 0, 0, 0.03),\n        0 1px 6px -1px rgba(0, 0, 0, 0.02),\n        0 2px 4px rgba(0, 0, 0, 0.02);\n\n        background: #ffffff1a;\n        border-radius: 24px;  \n\n      img {\n        width: 100%;\n        vertical-align: top;\n        border-radius: ${token.borderRadius}px;\n      }\n    `,\n\n    cardMini: css`\n      background: #ffffff1a;\n      border-radius: 24px;  \n      display: block;\n      border-radius: ${token.borderRadius * 2}px;\n      padding: ${token.paddingMD}px ${token.paddingLG}px;\n\n      img {\n        height: 48px;\n      }\n    `,\n  }))();\n};\n\nconst DesignFramework: React.FC = () => {\n  const [locale] = useLocale(locales);\n  const { styles } = useStyle();\n  const { pathname, search } = useLocation();\n  const isZhCN = utils.isZhCN(pathname);\n  const { isMobile } = useContext(SiteContext);\n  const navigate = useNavigate();\n\n  const items = [\n    {\n      title: locale.values,\n      desc: locale.valuesDesc,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 261 }}\n            src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*poTnSZrI7-oAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n          />\n        </div>\n      ),\n      onClick: () => navigate(utils.getLocalizedPathname('/docs/spec/introduce', isZhCN, search)),\n    },\n    {\n      title: locale.guide,\n      desc: locale.guideDesc,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 184 }}\n            src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*Off_QYoo0GIAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n          />\n        </div>\n      ),\n      onClick: () =>\n        navigate(utils.getLocalizedPathname('/docs/spec/hybrid-ui-design', isZhCN, search)),\n    },\n    {\n      title: locale.lib,\n      desc: locale.libDesc,\n      header: (\n        <div className={styles.header}>\n          <img\n            loading=\"lazy\"\n            alt=\"thumbnails\"\n            style={{ width: 227 }}\n            src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*AhrTT6K2vU0AAAAAAAAAAAAADgCCAQ/fmt.webp\"\n          />\n        </div>\n      ),\n      onClick: () => navigate(utils.getLocalizedPathname('/components/overview', isZhCN, search)),\n    },\n    {\n      title: locale.antd,\n      desc: locale.antdDesc,\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*dUzuRJes4pUAAAAAAAAAAAAADgCCAQ/original',\n      onClick: () => window.open('https://ant.design/'),\n    },\n    {\n      title: locale.antdMobile,\n      desc: locale.antdMobileDesc,\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*rzh3RoWC9zAAAAAAAAAAAAAADgCCAQ/original',\n      onClick: () => window.open('https://mobile.ant.design/'),\n    },\n    {\n      title: locale.antv,\n      desc: locale.antvDesc,\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*9MFyQ77L6E4AAAAAAAAAAAAADgCCAQ/fmt.webp',\n      onClick: () => window.open('https://antv.vision/'),\n    },\n  ];\n\n  return (\n    <Introduction\n      cardStyle={{ background: '#ffffff1a' }}\n      title={locale.title}\n      desc={locale.desc}\n      items={items}\n      column={isMobile ? 1 : 3}\n    />\n  );\n};\n\nexport default DesignFramework;\n","\n  import '/home/runner/work/x/x/components/use-x-agent/demo/preset.tsx?watch=parent';\n  export default \"import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\\nimport { ThoughtChain, useXAgent } from '@ant-design/x';\\nimport { Button, Descriptions, Splitter } from 'antd';\\nimport React from 'react';\\n\\nimport type { ThoughtChainItem } from '@ant-design/x';\\n\\n/**\\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\\n */\\nconst BASE_URL = 'https://api.example.com';\\nconst PATH = '/chat';\\nconst MODEL = 'gpt-3.5-turbo';\\n/** 🔥🔥 Its dangerously! */\\n// const API_KEY = '';\\n\\ninterface YourMessageType {\\n  role: string;\\n  content: string;\\n}\\n\\nconst App = () => {\\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\\n  const [lines, setLines] = React.useState<any[]>([]);\\n\\n  const [agent] = useXAgent<YourMessageType>({\\n    baseURL: BASE_URL + PATH,\\n    model: MODEL,\\n    // dangerouslyApiKey: API_KEY\\n  });\\n\\n  async function request() {\\n    setStatus('pending');\\n\\n    agent.request(\\n      {\\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\\n        stream: true,\\n      },\\n      {\\n        onSuccess: (messages) => {\\n          setStatus('success');\\n          console.log('onSuccess', messages);\\n        },\\n        onError: (error) => {\\n          setStatus('error');\\n          console.error('onError', error);\\n        },\\n        onUpdate: (msg) => {\\n          setLines((pre) => [...pre, msg]);\\n          console.log('onUpdate', msg);\\n        },\\n      },\\n    );\\n  }\\n\\n  return (\\n    <Splitter>\\n      <Splitter.Panel>\\n        <Button type=\\\"primary\\\" disabled={status === 'pending'} onClick={request}>\\n          Agent Request\\n        </Button>\\n      </Splitter.Panel>\\n      <Splitter.Panel>\\n        <ThoughtChain\\n          style={{ marginLeft: 16 }}\\n          items={[\\n            {\\n              title: 'Agent Request Log',\\n              status: status,\\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\\n              description:\\n                status === 'error' &&\\n                agent.config.baseURL === BASE_URL + PATH &&\\n                'Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.',\\n              content: (\\n                <Descriptions column={1}>\\n                  <Descriptions.Item label=\\\"Status\\\">{status || '-'}</Descriptions.Item>\\n                  <Descriptions.Item label=\\\"Update Times\\\">{lines.length}</Descriptions.Item>\\n                </Descriptions>\\n              ),\\n            },\\n          ]}\\n        />\\n      </Splitter.Panel>\\n    </Splitter>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { createTheme, useCacheToken } from '@ant-design/cssinjs';\nimport { theme as antdTheme } from 'antd';\nimport { ignore, unitless } from 'antd/es/theme/useToken';\nimport formatToken from 'antd/es/theme/util/alias';\nimport React from 'react';\n\nimport version from '../version';\n\nimport type { Theme } from '@ant-design/cssinjs';\nimport type { DesignTokenProviderProps } from 'antd/es/theme/context';\nimport type { AliasToken, GlobalToken, SeedToken } from './cssinjs-utils';\n\nconst defaultTheme: Theme<SeedToken, AliasToken> = createTheme(antdTheme.defaultAlgorithm);\n\nconst preserve: {\n  [key in keyof AliasToken]?: boolean;\n} = {\n  screenXS: true,\n  screenXSMin: true,\n  screenXSMax: true,\n  screenSM: true,\n  screenSMMin: true,\n  screenSMMax: true,\n  screenMD: true,\n  screenMDMin: true,\n  screenMDMax: true,\n  screenLG: true,\n  screenLGMin: true,\n  screenLGMax: true,\n  screenXL: true,\n  screenXLMin: true,\n  screenXLMax: true,\n  screenXXL: true,\n  screenXXLMin: true,\n};\n\nexport const getComputedToken = (\n  originToken: SeedToken,\n  overrideToken: DesignTokenProviderProps['components'] & {\n    override?: Partial<AliasToken>;\n  },\n  theme: Theme<any, any>,\n) => {\n  const derivativeToken = theme.getDerivativeToken(originToken);\n\n  const { override, ...components } = overrideToken;\n\n  // Merge with override\n  let mergedDerivativeToken = {\n    ...derivativeToken,\n    override,\n  };\n\n  // Format if needed\n  mergedDerivativeToken = formatToken(mergedDerivativeToken);\n\n  if (components) {\n    Object.entries(components).forEach(([key, value]) => {\n      const { theme: componentTheme, ...componentTokens } = value;\n      let mergedComponentToken = componentTokens;\n      if (componentTheme) {\n        mergedComponentToken = getComputedToken(\n          {\n            ...mergedDerivativeToken,\n            ...componentTokens,\n          },\n          {\n            override: componentTokens,\n          },\n          componentTheme,\n        );\n      }\n      mergedDerivativeToken[key] = mergedComponentToken;\n    });\n  }\n\n  return mergedDerivativeToken;\n};\nexport function useInternalToken(): [\n  theme: Theme<SeedToken, AliasToken>,\n  token: GlobalToken,\n  hashId: string,\n  realToken: GlobalToken,\n  cssVar?: DesignTokenProviderProps['cssVar'],\n] {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme = defaultTheme,\n    override,\n    cssVar,\n  } = React.useContext(antdTheme._internalContext);\n\n  const [token, hashId, realToken] = useCacheToken<GlobalToken, SeedToken>(\n    theme,\n    [antdTheme.defaultSeed, rootDesignToken],\n    {\n      salt: `${version}-${hashed || ''}`,\n      override,\n      getComputedToken,\n      cssVar: cssVar && {\n        prefix: cssVar.prefix,\n        key: cssVar.key,\n        unitless,\n        ignore,\n        preserve,\n      },\n    },\n  );\n  return [theme as Theme<SeedToken, AliasToken>, realToken, hashed ? hashId : '', token, cssVar];\n}\n\nexport default function useToken() {\n  const [theme, token, hashId] = useInternalToken();\n\n  return { theme, token, hashId };\n}\n","import classnames from 'classnames';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { AttachmentContext } from './context';\n\nexport interface DropUploaderProps {\n  prefixCls: string;\n  className: string;\n  getDropContainer?: null | (() => HTMLElement | null | undefined);\n  children?: React.ReactNode;\n}\n\nexport default function DropArea(props: DropUploaderProps) {\n  const { getDropContainer, className, prefixCls, children } = props;\n  const { disabled } = React.useContext(AttachmentContext);\n\n  const [container, setContainer] = React.useState<HTMLElement | null | undefined>();\n  const [showArea, setShowArea] = React.useState<boolean | null>(null);\n\n  // ========================== Container ===========================\n  React.useEffect(() => {\n    const nextContainer = getDropContainer?.();\n    if (container !== nextContainer) {\n      setContainer(nextContainer);\n    }\n  }, [getDropContainer]);\n\n  // ============================= Drop =============================\n  React.useEffect(() => {\n    // Add global drop event\n    if (container) {\n      const onDragEnter = () => {\n        setShowArea(true);\n      };\n\n      // Should prevent default to make drop event work\n      const onDragOver = (e: DragEvent) => {\n        e.preventDefault();\n      };\n\n      const onDragLeave = (e: DragEvent) => {\n        if (!e.relatedTarget) {\n          setShowArea(false);\n        }\n      };\n      const onDrop = (e: DragEvent) => {\n        setShowArea(false);\n        e.preventDefault();\n      };\n\n      document.addEventListener('dragenter', onDragEnter);\n      document.addEventListener('dragover', onDragOver);\n      document.addEventListener('dragleave', onDragLeave);\n      document.addEventListener('drop', onDrop);\n      return () => {\n        document.removeEventListener('dragenter', onDragEnter);\n        document.removeEventListener('dragover', onDragOver);\n        document.removeEventListener('dragleave', onDragLeave);\n        document.removeEventListener('drop', onDrop);\n      };\n    }\n  }, [!!container]);\n\n  // =========================== Visible ============================\n  const showDropdown = getDropContainer && container && !disabled;\n\n  // ============================ Render ============================\n  if (!showDropdown) {\n    return null;\n  }\n\n  const areaCls = `${prefixCls}-drop-area`;\n\n  return createPortal(\n    <div\n      className={classnames(areaCls, className, {\n        [`${areaCls}-on-body`]: container.tagName === 'BODY',\n      })}\n      style={{ display: showArea ? 'block' : 'none' }}\n    >\n      {children}\n    </div>,\n    container,\n  );\n}\n","\n  import '/home/runner/work/x/x/components/suggestion/demo/basic.tsx?watch=parent';\n  export default \"import { OpenAIFilled } from '@ant-design/icons';\\nimport { Sender, Suggestion } from '@ant-design/x';\\nimport type { GetProp } from 'antd';\\nimport React from 'react';\\n\\ntype SuggestionItems = Exclude<GetProp<typeof Suggestion, 'items'>, () => void>;\\n\\nconst suggestions: SuggestionItems = [\\n  { label: 'Write a report', value: 'report' },\\n  { label: 'Draw a picture', value: 'draw' },\\n  {\\n    label: 'Check some knowledge',\\n    value: 'knowledge',\\n    icon: <OpenAIFilled />,\\n    children: [\\n      {\\n        label: 'About React',\\n        value: 'react',\\n      },\\n      {\\n        label: 'About Ant Design',\\n        value: 'antd',\\n      },\\n    ],\\n  },\\n];\\n\\nconst Demo: React.FC = () => {\\n  const [value, setValue] = React.useState('');\\n\\n  return (\\n    <Suggestion\\n      items={suggestions}\\n      onSelect={(itemVal) => {\\n        setValue(`[${itemVal}]:`);\\n      }}\\n    >\\n      {({ onTrigger, onKeyDown }) => {\\n        return (\\n          <Sender\\n            value={value}\\n            onChange={(nextVal) => {\\n              if (nextVal === '/') {\\n                onTrigger();\\n              } else if (!nextVal) {\\n                onTrigger(false);\\n              }\\n              setValue(nextVal);\\n            }}\\n            onKeyDown={onKeyDown}\\n            placeholder=\\\"输入 / 获取建议\\\"\\n          />\\n        );\\n      }}\\n    </Suggestion>\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","// Proxy the dom ref with `{ nativeElement, otherFn }` type\n// ref: https://github.com/ant-design/ant-design/discussions/45242\n\nimport { useImperativeHandle } from 'react';\nimport type { Ref } from 'react';\n\nexport default function useProxyImperativeHandle<\n  NativeELementType extends HTMLElement,\n  ReturnRefType extends { nativeElement: NativeELementType },\n>(ref: Ref<any> | undefined, init: () => ReturnRefType) {\n  return useImperativeHandle(ref, () => {\n    const refObj = init();\n    const { nativeElement } = refObj;\n\n    return new Proxy(nativeElement, {\n      get(obj: any, prop: any) {\n        if ((refObj as any)[prop]) {\n          return (refObj as any)[prop];\n        }\n\n        return Reflect.get(obj, prop);\n      },\n    });\n  });\n}\n","import { BugOutlined } from '@ant-design/icons';\nimport { Button, Drawer, Flex, Grid, Popover, Tag, Timeline, Typography } from 'antd';\nimport type { TimelineItemProps } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { cloneElement, isValidElement } from 'react';\nimport semver from 'semver';\n\nimport deprecatedVersions from '../../../../BUG_VERSIONS.json';\nimport useFetch from '../../../hooks/useFetch';\nimport useLocale from '../../../hooks/useLocale';\nimport useLocation from '../../../hooks/useLocation';\nimport Link from '../Link';\n\ninterface MatchDeprecatedResult {\n  match?: string;\n  reason: string[];\n}\n\ninterface ChangelogInfo {\n  version: string;\n  changelog: string;\n  refs: string[];\n  releaseDate: string;\n}\n\nfunction matchDeprecated(v: string): MatchDeprecatedResult {\n  const match = Object.keys(deprecatedVersions).find((depreciated) =>\n    semver.satisfies(v, depreciated),\n  );\n  const reason = deprecatedVersions[match as keyof typeof deprecatedVersions] || [];\n  return {\n    match,\n    reason: Array.isArray(reason) ? reason : [reason],\n  };\n}\n\nconst useStyle = createStyles(({ token, css }) => ({\n  listWrap: css`\n    > li {\n      line-height: 2;\n    }\n  `,\n  linkRef: css`\n    margin-inline-start: ${token.marginXS}px;\n  `,\n  bug: css`\n    font-size: ${token.fontSize}px;\n    color: #aaa;\n    margin-inline-start: ${token.marginXS}px;\n    display: inline-block;\n    vertical-align: inherit;\n    cursor: pointer;\n    &:hover {\n      color: #333;\n    }\n  `,\n  bugReasonTitle: css`\n    padding: ${token.paddingXXS}px ${token.paddingXS}px;\n  `,\n  bugReasonList: css`\n    width: 100%;\n    max-width: 100%;\n    li {\n      padding: ${token.paddingXXS}px ${token.paddingXS}px;\n      a {\n        display: flex;\n        align-items: center;\n        gap: ${token.marginXXS}px;\n      }\n    }\n  `,\n  extraLink: css`\n    font-size: ${token.fontSize}px;\n  `,\n  drawerContent: {\n    position: 'relative',\n    [`> ${token.antCls}-drawer-body`]: {\n      scrollbarWidth: 'thin',\n      scrollbarGutter: 'stable',\n    },\n  },\n  versionWrap: css`\n    margin-bottom: 1em;\n  `,\n  versionTitle: css`\n    height: 28px;\n    line-height: 28px;\n    font-weight: 600;\n    font-size: 20px;\n    margin: 0 !important;\n  `,\n  versionTag: css`\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    &:last-child {\n      margin-inline-end: 0;\n    }\n  `,\n}));\n\nconst locales = {\n  cn: {\n    full: '查看完整日志',\n    changelog: '更新日志',\n    loading: '加载中...',\n    empty: '暂无更新',\n    bugList: 'Bug 版本',\n  },\n  en: {\n    full: 'Full Changelog',\n    changelog: 'Changelog',\n    loading: 'loading...',\n    empty: 'Nothing update',\n    bugList: 'Bug Versions',\n  },\n};\n\nconst ParseChangelog: React.FC<{ changelog: string }> = (props) => {\n  const { changelog = '' } = props;\n\n  const parsedChangelog = React.useMemo(() => {\n    const nodes: React.ReactNode[] = [];\n\n    let isQuota = false;\n    let isBold = false;\n    let lastStr = '';\n\n    for (let i = 0; i < changelog.length; i += 1) {\n      const char = changelog[i];\n      const isDoubleAsterisk = char === '*' && changelog[i + 1] === '*';\n\n      if (char !== '`' && !isDoubleAsterisk) {\n        lastStr += char;\n      } else {\n        let node: React.ReactNode = lastStr;\n        if (isQuota) {\n          node = <code>{node}</code>;\n        } else if (isBold) {\n          node = <strong>{node}</strong>;\n        }\n\n        nodes.push(node);\n        lastStr = '';\n        if (char === '`') {\n          isQuota = !isQuota;\n        } else if (isDoubleAsterisk) {\n          isBold = !isBold;\n          i += 1; // Skip the next '*'\n        }\n      }\n    }\n\n    nodes.push(lastStr);\n\n    return nodes;\n  }, [changelog]);\n\n  return <span>{parsedChangelog}</span>;\n};\n\nconst RefLinks: React.FC<{ refs: string[] }> = ({ refs }) => {\n  const { styles } = useStyle();\n  return (\n    <>\n      {refs?.map((ref) => (\n        <a className={styles.linkRef} key={ref} href={ref} target=\"_blank\" rel=\"noreferrer\">\n          #{ref.match(/^.*\\/(\\d+)$/)?.[1]}\n        </a>\n      ))}\n    </>\n  );\n};\n\nconst RenderChangelogList: React.FC<{ changelogList: ChangelogInfo[] }> = ({ changelogList }) => {\n  const elements: React.ReactNode[] = [];\n  const { styles } = useStyle();\n  const len = changelogList.length;\n  for (let i = 0; i < len; i += 1) {\n    const { refs, changelog } = changelogList[i];\n    // Check if the next line is an image link and append it to the current line\n    if (i + 1 < len && changelogList[i + 1].changelog.trim().startsWith('<img')) {\n      const imgDom = new DOMParser().parseFromString(changelogList[i + 1].changelog, 'text/html');\n      const imgElement = imgDom.querySelector<HTMLImageElement>('img');\n      elements.push(\n        <li key={i}>\n          <ParseChangelog changelog={changelog} />\n          <RefLinks refs={refs} />\n          <br />\n          <img\n            src={imgElement?.getAttribute('src') || ''}\n            alt={imgElement?.getAttribute('alt') || ''}\n            width={imgElement?.getAttribute('width') || ''}\n          />\n        </li>,\n      );\n      i += 1; // Skip the next line\n    } else {\n      elements.push(\n        <li key={i}>\n          <ParseChangelog changelog={changelog} />\n          <RefLinks refs={refs} />\n        </li>,\n      );\n    }\n  }\n  return <ul className={styles.listWrap}>{elements}</ul>;\n};\n\nconst useChangelog = (componentPath: string, lang: 'cn' | 'en'): ChangelogInfo[] => {\n  const logFileName = `components-changelog-${lang}.json`;\n\n  const data = useFetch({\n    key: `component-changelog-${lang}`,\n    request: () => import(`../../../preset/${logFileName}`),\n  });\n  return React.useMemo(() => {\n    const component = componentPath.replace(/-/g, '');\n    const componentName = Object.keys(data).find(\n      (name) => name.toLowerCase() === component.toLowerCase(),\n    );\n    return data[componentName as keyof typeof data] as ChangelogInfo[];\n  }, [data, componentPath]);\n};\n\nconst ComponentChangelog: React.FC<Readonly<React.PropsWithChildren>> = (props) => {\n  const { children } = props;\n  const [locale, lang] = useLocale(locales);\n  const [show, setShow] = React.useState(false);\n  const { pathname } = useLocation();\n\n  const { styles } = useStyle();\n\n  const componentPath = pathname.match(/\\/components\\/([^/]+)/)?.[1] || '';\n\n  const list = useChangelog(componentPath, lang);\n\n  const timelineItems = React.useMemo<TimelineItemProps[]>(() => {\n    const changelogMap: Record<string, ChangelogInfo[]> = {};\n\n    list?.forEach((info) => {\n      changelogMap[info.version] = changelogMap[info.version] || [];\n      changelogMap[info.version].push(info);\n    });\n\n    return Object.keys(changelogMap).map((version) => {\n      const changelogList = changelogMap[version];\n      const bugVersionInfo = matchDeprecated(version);\n      return {\n        children: (\n          <Typography>\n            <Flex className={styles.versionWrap} justify=\"flex-start\" align=\"center\" gap=\"middle\">\n              <Button\n                color=\"default\"\n                className={styles.versionTitle}\n                variant=\"link\"\n                href={`/changelog${lang === 'cn' ? '-cn' : ''}/#${version.replace(/\\./g, '').replace(/\\s.*/g, '-')}`}\n              >\n                {version}\n                {bugVersionInfo.match && (\n                  <Popover\n                    destroyTooltipOnHide\n                    placement=\"right\"\n                    title={<span className={styles.bugReasonTitle}>{locale.bugList}</span>}\n                    content={\n                      <ul className={styles.bugReasonList}>\n                        {bugVersionInfo.reason.map<React.ReactNode>((reason, index) => (\n                          <li key={`reason-${index}`}>\n                            <a type=\"link\" target=\"_blank\" rel=\"noreferrer\" href={reason}>\n                              <BugOutlined />\n                              {reason\n                                ?.replace(/#.*$/, '')\n                                ?.replace(\n                                  /^https:\\/\\/github\\.com\\/ant-design\\/ant-design\\/(issues|pull)\\//,\n                                  '#',\n                                )}\n                            </a>\n                          </li>\n                        ))}\n                      </ul>\n                    }\n                  >\n                    <BugOutlined className={styles.bug} />\n                  </Popover>\n                )}\n              </Button>\n              <Tag className={styles.versionTag} bordered={false} color=\"blue\">\n                {changelogList[0]?.releaseDate}\n              </Tag>\n            </Flex>\n            <RenderChangelogList changelogList={changelogList} />\n          </Typography>\n        ),\n      };\n    });\n  }, [list]);\n\n  const screens = Grid.useBreakpoint();\n  const width = screens.md ? '48vw' : '90vw';\n\n  if (!pathname.startsWith('/components/') || !list || !list.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {isValidElement(children) &&\n        cloneElement(children as React.ReactElement<any>, {\n          onClick: () => setShow(true),\n        })}\n      <Drawer\n        destroyOnClose\n        className={styles.drawerContent}\n        title={locale.changelog}\n        extra={\n          <Link className={styles.extraLink} to={`/changelog${lang === 'cn' ? '-cn' : ''}`}>\n            {locale.full}\n          </Link>\n        }\n        open={show}\n        width={width}\n        onClose={() => setShow(false)}\n      >\n        <Timeline items={timelineItems} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default ComponentChangelog;\n","import React from 'react';\n\nexport interface AttachmentContextProps {\n  disabled?: boolean;\n}\n\nexport const AttachmentContext = React.createContext<AttachmentContextProps>(null!);\n","\n  import '/home/runner/work/x/x/components/conversations/demo/group-sort.tsx?watch=parent';\n  export default \"import { CommentOutlined } from '@ant-design/icons';\\nimport type { ConversationsProps } from '@ant-design/x';\\nimport { Conversations } from '@ant-design/x';\\nimport { type GetProp, Space, theme } from 'antd';\\nimport React from 'react';\\n\\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 6 }).map((_, index) => {\\n  const timestamp = index <= 3 ? 1732204800000 : 1732204800000 - 60 * 60 * 24;\\n\\n  return {\\n    key: `item${index + 1}`,\\n    label: `Conversation ${timestamp + index * 60 * 60}`,\\n    timestamp: timestamp + index * 60 * 60,\\n    group: index <= 3 ? 'Today' : 'Yesterday',\\n  };\\n});\\n\\nconst App = () => {\\n  const { token } = theme.useToken();\\n\\n  // Customize the style of the container\\n  const style = {\\n    width: 256,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n  };\\n\\n  const groupable: GetProp<typeof Conversations, 'groupable'> = {\\n    sort(a, b) {\\n      if (a === b) return 0;\\n\\n      return a === 'Today' ? -1 : 1;\\n    },\\n    title: (group, { components: { GroupTitle } }) =>\\n      group ? (\\n        <GroupTitle>\\n          <Space>\\n            <CommentOutlined />\\n            <span>{group}</span>\\n          </Space>\\n        </GroupTitle>\\n      ) : (\\n        <GroupTitle />\\n      ),\\n  };\\n\\n  return (\\n    <Conversations style={style} groupable={groupable} defaultActiveKey=\\\"demo1\\\" items={items} />\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { LinkOutlined, QuestionCircleOutlined, RightOutlined } from '@ant-design/icons';\nimport { XProvider } from '@ant-design/x';\nimport { Popover, Table, Typography } from 'antd';\nimport { createStyles, css, useTheme } from 'antd-style';\nimport { getDesignToken } from 'antd-token-previewer';\nimport tokenMeta from 'antd/es/version/token-meta.json';\nimport tokenData from 'antd/es/version/token.json';\nimport React, { useMemo, useState } from 'react';\n\nimport useLocale from '../../../hooks/useLocale';\nimport { useColumns } from '../TokenTable';\nimport type { TokenData } from '../TokenTable';\n\nconst compare = (token1: string, token2: string) => {\n  const hasColor1 = token1.toLowerCase().includes('color');\n  const hasColor2 = token2.toLowerCase().includes('color');\n  if (hasColor1 && !hasColor2) {\n    return -1;\n  }\n  if (!hasColor1 && hasColor2) {\n    return 1;\n  }\n  return token1 < token2 ? -1 : 1;\n};\n\nconst defaultToken = getDesignToken();\n\nconst locales = {\n  cn: {\n    token: 'Token 名称',\n    description: '描述',\n    type: '类型',\n    value: '默认值',\n    componentToken: '组件 Token',\n    globalToken: '全局 Token',\n    componentComment: '这里是你的组件 token',\n    globalComment: '这里是你的全局 token',\n    help: '如何定制？',\n    customizeTokenLink: '/docs/react/customize-theme-cn#修改主题变量',\n    customizeComponentTokenLink: '/docs/react/customize-theme-cn#修改组件变量',\n  },\n  en: {\n    token: 'Token Name',\n    description: 'Description',\n    type: 'Type',\n    value: 'Default Value',\n    componentToken: 'Component Token',\n    globalToken: 'Global Token',\n    componentComment: 'here is your component tokens',\n    globalComment: 'here is your global tokens',\n    help: 'How to use?',\n    customizeTokenLink: '/docs/react/customize-theme#customize-design-token',\n    customizeComponentTokenLink: 'docs/react/customize-theme#customize-component-token',\n  },\n};\n\nconst useStyle = createStyles(({ token }) => ({\n  tableTitle: css`\n    cursor: pointer;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    line-height: 40px;\n  `,\n  arrowIcon: css`\n    font-size: ${token.fontSizeLG}px;\n    margin-inline-end: ${token.marginXS}px;\n    & svg {\n      transition: all ${token.motionDurationSlow};\n    }\n  `,\n  help: css`\n    margin-inline-start: ${token.marginXS}px;\n    font-size: ${token.fontSizeSM}px;\n    font-weight: normal;\n    color: #999;\n    a {\n      color: #999;\n    }\n  `,\n}));\n\ninterface SubTokenTableProps {\n  defaultOpen?: boolean;\n  title: string;\n  helpText: React.ReactNode;\n  helpLink: string;\n  tokens: string[];\n  component?: string;\n  comment?: {\n    componentComment?: string;\n    globalComment?: string;\n  };\n}\n\nconst SubTokenTable: React.FC<SubTokenTableProps> = (props) => {\n  const { defaultOpen, tokens, title, helpText, helpLink, component, comment } = props;\n  const [, lang] = useLocale(locales);\n  const token = useTheme();\n  const columns = useColumns();\n\n  const [open, setOpen] = useState<boolean>(defaultOpen ?? process.env.NODE_ENV !== 'production');\n\n  const { styles } = useStyle();\n\n  if (!tokens.length) {\n    return null;\n  }\n\n  const data = tokens\n    .sort(component ? undefined : compare)\n    .map<TokenData>((name) => {\n      const meta = component\n        ? tokenMeta.components[component].find((item) => item.token === name)\n        : tokenMeta.global[name];\n\n      if (!meta) {\n        return null as unknown as TokenData;\n      }\n\n      return {\n        name,\n        desc: lang === 'cn' ? meta.desc : meta.descEn,\n        type: meta.type,\n        value: component ? tokenData[component].component[name] : defaultToken[name],\n      };\n    })\n    .filter(Boolean);\n\n  const code = component\n    ? `<XProvider\n  theme={{\n    components: {\n      ${component}: {\n        /* ${comment?.componentComment} */\n      },\n    },\n  }}\n>\n  ...\n</XProvider>`\n    : `<XProvider\n  theme={{\n    token: {\n      /* ${comment?.globalComment} */\n    },\n  }}\n>\n  ...\n</XProvider>`;\n\n  return (\n    <>\n      <div className={styles.tableTitle} onClick={() => setOpen(!open)}>\n        <RightOutlined className={styles.arrowIcon} rotate={open ? 90 : 0} />\n        <h3>\n          {title}\n          <Popover\n            title={null}\n            overlayStyle={{ width: 400 }}\n            content={\n              <Typography>\n                {/* <SourceCode lang=\"jsx\">{code}</SourceCode> */}\n                <pre style={{ fontSize: 12 }}>{code}</pre>\n                <a href={helpLink} target=\"_blank\" rel=\"noreferrer\">\n                  <LinkOutlined style={{ marginInlineEnd: 4 }} />\n                  {helpText}\n                </a>\n              </Typography>\n            }\n          >\n            <span className={styles.help}>\n              <QuestionCircleOutlined style={{ marginInlineEnd: 4 }} />\n              {helpText}\n            </span>\n          </Popover>\n        </h3>\n      </div>\n      {open && (\n        <XProvider theme={{ token: { borderRadius: 0 } }}>\n          <Table<TokenData>\n            size=\"middle\"\n            columns={columns}\n            bordered\n            dataSource={data}\n            style={{ marginBottom: token.margin }}\n            pagination={false}\n            rowKey={(record) => record.name}\n          />\n        </XProvider>\n      )}\n    </>\n  );\n};\n\nexport interface ComponentTokenTableProps {\n  component: string;\n}\n\nconst ComponentTokenTable: React.FC<ComponentTokenTableProps> = ({ component }) => {\n  const [locale] = useLocale(locales);\n  const [mergedGlobalTokens] = useMemo(() => {\n    const globalTokenSet = new Set<string>();\n\n    component.split(',').forEach((comp) => {\n      const { global: globalTokens = [] } = tokenData[comp] || {};\n\n      globalTokens.forEach((token: string) => {\n        globalTokenSet.add(token);\n      });\n    });\n\n    return [Array.from(globalTokenSet)] as const;\n  }, [component]);\n\n  return (\n    <>\n      {tokenMeta.components[component] && (\n        <SubTokenTable\n          defaultOpen\n          title={locale.componentToken}\n          helpText={locale.help}\n          helpLink={locale.customizeTokenLink}\n          tokens={tokenMeta.components[component].map((item) => item.token)}\n          component={component}\n          comment={{\n            componentComment: locale.componentComment,\n            globalComment: locale.globalComment,\n          }}\n        />\n      )}\n      <SubTokenTable\n        title={locale.globalToken}\n        helpText={locale.help}\n        helpLink={locale.customizeComponentTokenLink}\n        tokens={mergedGlobalTokens}\n        comment={{\n          componentComment: locale.componentComment,\n          globalComment: locale.globalComment,\n        }}\n      />\n    </>\n  );\n};\n\nexport default React.memo(ComponentTokenTable);\n","import { createStyles, css } from 'antd-style';\nimport classNames from 'classnames';\nimport React from 'react';\n\ninterface IconProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst useStyle = createStyles(() => ({\n  iconWrap: css`\n    display: inline-flex;\n    align-items: center;\n    line-height: 0;\n    text-align: center;\n    vertical-align: -0.125em;\n  `,\n}));\n\nconst PnpmIcon: React.FC<IconProps> = (props) => {\n  const { className, style } = props;\n  const { styles } = useStyle();\n  return (\n    <span className={classNames(styles.iconWrap, className)} style={style}>\n      <svg\n        aria-hidden=\"true\"\n        fill=\"#F69220\"\n        focusable=\"false\"\n        height=\"1em\"\n        role=\"img\"\n        stroke=\"#F69220\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 24 24\"\n        width=\"1em\"\n      >\n        <title>pnpm icon</title>\n        <path d=\"M0 0v7.5h7.5V0zm8.25 0v7.5h7.498V0zm8.25 0v7.5H24V0zM8.25 8.25v7.5h7.498v-7.5zm8.25 0v7.5H24v-7.5zM0 16.5V24h7.5v-7.5zm8.25 0V24h7.498v-7.5zm8.25 0V24H24v-7.5z\" />\n      </svg>\n    </span>\n  );\n};\n\nexport default PnpmIcon;\n","\n  import '/home/runner/work/x/x/.dumi/components/SemanticPreview.tsx?watch=parent';\n  export default \"import { XProvider } from '@ant-design/x';\\nimport { Col, Flex, Row, Tag, Typography, theme } from 'antd';\\nimport { createStyles, css } from 'antd-style';\\nimport classnames from 'classnames';\\nimport React from 'react';\\n\\nconst MARK_BORDER_SIZE = 2;\\n\\nconst useStyle = createStyles(({ token }, markPos: [number, number, number, number]) => ({\\n  container: css`\\n    position: relative;\\n  `,\\n  colWrap: css`\\n    border-right: 1px solid ${token.colorBorderSecondary};\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    padding: ${token.paddingMD}px;\\n    overflow: hidden;\\n  `,\\n  listWrap: css`\\n    display: flex;\\n    flex-direction: column;\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n  `,\\n  listItem: css`\\n    cursor: pointer;\\n    padding: ${token.paddingSM}px;\\n    transition: background-color ${token.motionDurationFast} ease;\\n    &:hover {\\n      background-color: ${token.controlItemBgHover};\\n    }\\n    &:not(:first-of-type) {\\n      border-top: 1px solid ${token.colorBorderSecondary};\\n    }\\n  `,\\n  marker: css`\\n    position: absolute;\\n    border: ${MARK_BORDER_SIZE}px solid ${token.colorWarning};\\n    box-sizing: border-box;\\n    z-index: 999999;\\n    box-shadow: 0 0 0 1px #fff;\\n    pointer-events: none;\\n    inset-inline-start: ${markPos[0] - MARK_BORDER_SIZE}px;\\n    top: ${markPos[1] - MARK_BORDER_SIZE}px;\\n    width: ${markPos[2] + MARK_BORDER_SIZE * 2}px;\\n    height: ${markPos[3] + MARK_BORDER_SIZE * 2}px;\\n  `,\\n  markerActive: css`\\n    opacity: 1;\\n  `,\\n  markerNotActive: css`\\n    opacity: 0;\\n  `,\\n  markerMotion: css`\\n    transition:\\n      opacity ${token.motionDurationSlow} ease,\\n      all ${token.motionDurationSlow} ease;\\n  `,\\n  markerNotMotion: css`\\n    transition: opacity ${token.motionDurationSlow} ease;\\n  `,\\n}));\\n\\nexport interface SemanticPreviewProps {\\n  semantics: { name: string; desc: string; version?: string }[];\\n  children: React.ReactElement | ((injectProps: any) => React.ReactElement);\\n  height?: number;\\n}\\n\\nconst SemanticPreview: React.FC<SemanticPreviewProps> = (props) => {\\n  const { semantics = [], children, height } = props;\\n  const { token } = theme.useToken();\\n\\n  // ======================= Semantic =======================\\n  const getMarkClassName = React.useCallback(\\n    (semanticKey: string) => `semantic-mark-${semanticKey}`,\\n    [],\\n  );\\n\\n  const semanticClassNames = React.useMemo<Record<string, string>>(() => {\\n    const classNames: Record<string, string> = {};\\n\\n    semantics.forEach((semantic) => {\\n      classNames[semantic.name] = getMarkClassName(semantic.name);\\n    });\\n\\n    return classNames;\\n  }, [semantics]);\\n\\n  const injectProps = {\\n    classNames: semanticClassNames,\\n  };\\n\\n  const cloneNode =\\n    typeof children === 'function'\\n      ? children(injectProps)\\n      : React.cloneElement(children, injectProps);\\n\\n  // ======================== Hover =========================\\n  const containerRef = React.useRef<HTMLDivElement>(null);\\n\\n  const timerRef = React.useRef<ReturnType<typeof setTimeout>>(null);\\n\\n  const [positionMotion, setPositionMotion] = React.useState<boolean>(false);\\n  const [hoverSemantic, setHoverSemantic] = React.useState<string | null>(null);\\n  const [markPos, setMarkPos] = React.useState<[number, number, number, number]>([0, 0, 0, 0]);\\n\\n  const { styles } = useStyle(markPos);\\n\\n  React.useEffect(() => {\\n    if (hoverSemantic) {\\n      const targetClassName = getMarkClassName(hoverSemantic);\\n      const targetElement = containerRef.current?.querySelector<HTMLElement>(`.${targetClassName}`);\\n      const containerRect = containerRef.current?.getBoundingClientRect();\\n      const targetRect = targetElement?.getBoundingClientRect();\\n      setMarkPos([\\n        (targetRect?.left || 0) - (containerRect?.left || 0),\\n        (targetRect?.top || 0) - (containerRect?.top || 0),\\n        targetRect?.width || 0,\\n        targetRect?.height || 0,\\n      ]);\\n      timerRef.current = setTimeout(() => {\\n        setPositionMotion(true);\\n      }, 10);\\n    } else {\\n      timerRef.current = setTimeout(() => {\\n        setPositionMotion(false);\\n      }, 500);\\n    }\\n    return () => {\\n      if (timerRef.current) {\\n        clearTimeout(timerRef.current);\\n      }\\n    };\\n  }, [hoverSemantic]);\\n\\n  // ======================== Render ========================\\n  return (\\n    <div className={classnames(styles.container)} ref={containerRef}>\\n      <Row style={{ minHeight: height }}>\\n        <Col span={16} className={classnames(styles.colWrap)}>\\n          <XProvider theme={{ token: { motion: false } }}>{cloneNode}</XProvider>\\n        </Col>\\n        <Col span={8}>\\n          <ul className={classnames(styles.listWrap)}>\\n            {semantics.map<React.ReactNode>((semantic) => (\\n              <li\\n                key={semantic.name}\\n                className={classnames(styles.listItem)}\\n                onMouseEnter={() => setHoverSemantic(semantic.name)}\\n                onMouseLeave={() => setHoverSemantic(null)}\\n              >\\n                <Flex vertical gap=\\\"small\\\">\\n                  <Flex gap=\\\"small\\\" align=\\\"center\\\">\\n                    <Typography.Title level={5} style={{ margin: 0 }}>\\n                      {semantic.name}\\n                    </Typography.Title>\\n                    {semantic.version && <Tag color=\\\"blue\\\">{semantic.version}</Tag>}\\n                  </Flex>\\n                  <Typography.Paragraph style={{ margin: 0, fontSize: token.fontSizeSM }}>\\n                    {semantic.desc}\\n                  </Typography.Paragraph>\\n                </Flex>\\n              </li>\\n            ))}\\n          </ul>\\n        </Col>\\n      </Row>\\n      <div\\n        className={classnames(\\n          styles.marker,\\n          hoverSemantic ? styles.markerActive : styles.markerNotActive,\\n          positionMotion ? styles.markerMotion : styles.markerNotMotion,\\n        )}\\n      />\\n    </div>\\n  );\\n};\\n\\nexport default SemanticPreview;\\n\";;\n  ","import { createStyles } from 'antd-style';\nimport React from 'react';\n\nimport { useLocation, useNavigate } from 'dumi';\nimport { getLocalizedPathname, isZhCN } from '../../../theme/utils';\n\nimport useLocale from '../../../hooks/useLocale';\nimport useLottie from '../../../hooks/useLottie';\nimport Container from '../common/Container';\n\nconst locales = {\n  cn: {\n    title: 'AI 设计范式 - RICH',\n    desc: '我们致力于构建 AI 设计理论，并在蚂蚁内部海量 AI 产品中实践、迭代。在此过程中，RICH 设计范式应运而生：角色（Role）、意图（Intention）、会话（Conversation）和混合界面（Hybrid UI） ',\n  },\n  en: {\n    title: 'AI Design Paradigm - RICH',\n    desc: \"We focus on developing AI design theory, iterating it across Ant Group's AI products, leading to the RICH design paradigm: Role, Intention, Conversation, and Hybrid UI.\",\n  },\n};\n\nconst useStyle = createStyles(({ css }) => {\n  return {\n    container: css`\n      height: 500px;\n      overflow: hidden;\n\n      cursor: pointer;\n    `,\n    lottie: css`\n      width: 100%;\n      height: auto;\n      transform: translate(0, -20%);\n    `,\n  };\n});\n\nconst DesignBanner: React.FC = () => {\n  const [locale] = useLocale(locales);\n\n  const { pathname, search } = useLocation();\n  const navigate = useNavigate();\n\n  const { styles } = useStyle();\n\n  const [lottieRef] = useLottie({\n    renderer: 'svg',\n    loop: false,\n    autoplay: true,\n    path: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/file/A*eZsQT5KKBtIAAAAAAAAAAAAADgCCAQ',\n  });\n\n  return (\n    <Container\n      className={styles.container}\n      title={locale.title}\n      desc={locale.desc}\n      onClick={() =>\n        navigate(getLocalizedPathname('docs/spec/introduce', isZhCN(pathname), search))\n      }\n    >\n      <div ref={lottieRef} className={styles.lottie} />\n    </Container>\n  );\n};\n\nexport default DesignBanner;\n","import type { TableProps } from 'antd';\nimport { Table } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { getDesignToken } from 'antd-token-previewer';\nimport tokenMeta from 'antd/es/version/token-meta.json';\nimport type { FC } from 'react';\nimport * as React from 'react';\n\nimport useLocale from '../../../hooks/useLocale';\nimport ColorChunk from '../ColorChunk';\n\ntype TokenTableProps = {\n  type: 'seed' | 'map' | 'alias';\n  lang: 'zh' | 'en';\n};\n\nexport type TokenData = {\n  name: string;\n  desc: string;\n  type: string;\n  value: any;\n};\n\nconst defaultToken = getDesignToken();\n\nconst locales = {\n  cn: {\n    token: 'Token 名称',\n    description: '描述',\n    type: '类型',\n    value: '默认值',\n  },\n  en: {\n    token: 'Token Name',\n    description: 'Description',\n    type: 'Type',\n    value: 'Default Value',\n  },\n};\n\nconst useStyle = createStyles(({ token, css }) => ({\n  codeSpan: css`\n    margin: 0 1px;\n    padding: 0.2em 0.4em;\n    font-size: 0.9em;\n    background: ${token.siteMarkdownCodeBg};\n    border: 1px solid ${token.colorSplit};\n    border-radius: ${token.borderRadiusSM}px;\n    font-family: monospace;\n  `,\n}));\n\nexport function useColumns(): Exclude<TableProps<TokenData>['columns'], undefined> {\n  const [locale] = useLocale(locales);\n  const { styles } = useStyle();\n\n  return [\n    {\n      title: locale.token,\n      key: 'name',\n      dataIndex: 'name',\n    },\n    {\n      title: locale.description,\n      key: 'desc',\n      dataIndex: 'desc',\n    },\n    {\n      title: locale.type,\n      key: 'type',\n      dataIndex: 'type',\n      render: (_, record) => <span className={styles.codeSpan}>{record.type}</span>,\n    },\n    {\n      title: locale.value,\n      key: 'value',\n      render: (_, record) => {\n        const isColor =\n          typeof record.value === 'string' &&\n          (record.value.startsWith('#') || record.value.startsWith('rgb'));\n        if (isColor) {\n          return <ColorChunk value={record.value}>{record.value}</ColorChunk>;\n        }\n        return typeof record.value !== 'string' ? JSON.stringify(record.value) : record.value;\n      },\n    },\n  ];\n}\n\nconst TokenTable: FC<TokenTableProps> = ({ type }) => {\n  const [, lang] = useLocale(locales);\n  const columns = useColumns();\n\n  const data = React.useMemo<TokenData[]>(\n    () =>\n      Object.entries(tokenMeta.global)\n        .filter(([, meta]) => meta.source === type)\n        .map(([token, meta]) => ({\n          name: token,\n          desc: lang === 'cn' ? meta.desc : meta.descEn,\n          type: meta.type,\n          value: defaultToken[token],\n        })),\n    [type, lang],\n  );\n\n  return <Table dataSource={data} columns={columns} pagination={false} bordered />;\n};\n\nexport default TokenTable;\n","import { CloseOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport classNames from 'classnames';\nimport CSSMotion, { type MotionEventHandler } from 'rc-motion';\nimport * as React from 'react';\n\nexport interface SendHeaderContextProps {\n  prefixCls: string;\n}\n\nexport const SendHeaderContext = React.createContext<SendHeaderContextProps>({} as any);\n\nexport type SemanticType = 'header' | 'content';\n\nexport interface SenderHeaderProps {\n  forceRender?: boolean;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  classNames?: Partial<Record<SemanticType, string>>;\n  styles?: Partial<Record<SemanticType, React.CSSProperties>>;\n  closable?: boolean;\n}\n\nconst collapseHeight: MotionEventHandler = () => ({\n  height: 0,\n});\nconst expandedHeight: MotionEventHandler = (ele) => ({\n  height: ele.scrollHeight,\n});\n\nexport default function SenderHeader(props: SenderHeaderProps) {\n  const {\n    title,\n    onOpenChange,\n    open,\n    children,\n    className,\n    style,\n    classNames: classes = {},\n    styles = {},\n    closable,\n    forceRender,\n  } = props;\n\n  const { prefixCls } = React.useContext(SendHeaderContext);\n\n  const headerCls = `${prefixCls}-header`;\n\n  return (\n    <CSSMotion\n      motionEnter\n      motionLeave\n      motionName={`${headerCls}-motion`}\n      leavedClassName={`${headerCls}-motion-hidden`}\n      onEnterStart={collapseHeight}\n      onEnterActive={expandedHeight}\n      onLeaveStart={expandedHeight}\n      onLeaveActive={collapseHeight}\n      visible={open}\n      forceRender={forceRender}\n    >\n      {({ className: motionClassName, style: motionStyle }) => {\n        return (\n          <div\n            className={classNames(headerCls, motionClassName, className)}\n            style={{\n              ...motionStyle,\n              ...style,\n            }}\n          >\n            {/* Header */}\n            {(closable !== false || title) && (\n              <div\n                className={\n                  // We follow antd naming standard here.\n                  // So the header part is use `-header` suffix.\n                  // Though its little bit weird for double `-header`.\n                  classNames(`${headerCls}-header`, classes.header)\n                }\n                style={{\n                  ...styles.header,\n                }}\n              >\n                <div className={`${headerCls}-title`}>{title}</div>\n                {closable !== false && (\n                  <div className={`${headerCls}-close`}>\n                    <Button\n                      type=\"text\"\n                      icon={<CloseOutlined />}\n                      size=\"small\"\n                      onClick={() => {\n                        onOpenChange?.(!open);\n                      }}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Content */}\n            {children && (\n              <div\n                className={classNames(`${headerCls}-content`, classes.content)}\n                style={{\n                  ...styles.content,\n                }}\n              >\n                {children}\n              </div>\n            )}\n          </div>\n        );\n      }}\n    </CSSMotion>\n  );\n}\n","import { XProvider } from '@ant-design/x';\nimport { Tabs } from 'antd';\nimport SourceCode from 'dumi/theme-default/builtins/SourceCode';\nimport type { Tab } from 'rc-tabs/lib/interface';\nimport React from 'react';\n\nimport BunLogo from './bun';\nimport NpmLogo from './npm';\nimport PnpmLogo from './pnpm';\nimport YarnLogo from './yarn';\n\ninterface InstallProps {\n  npm?: string;\n  yarn?: string;\n  pnpm?: string;\n  bun?: string;\n}\n\nconst InstallDependencies: React.FC<InstallProps> = (props) => {\n  const { npm, yarn, pnpm, bun } = props;\n  const items: Tab[] = [\n    {\n      key: 'npm',\n      label: 'npm',\n      children: npm ? <SourceCode lang=\"bash\">{npm}</SourceCode> : null,\n      icon: <NpmLogo />,\n    },\n    {\n      key: 'yarn',\n      label: 'yarn',\n      children: yarn ? <SourceCode lang=\"bash\">{yarn}</SourceCode> : null,\n      icon: <YarnLogo />,\n    },\n    {\n      key: 'pnpm',\n      label: 'pnpm',\n      children: pnpm ? <SourceCode lang=\"bash\">{pnpm}</SourceCode> : null,\n      icon: <PnpmLogo />,\n    },\n    {\n      key: 'bun',\n      label: 'Bun',\n      children: bun ? <SourceCode lang=\"bash\">{bun}</SourceCode> : null,\n      icon: <BunLogo />,\n    },\n  ].filter((item) => item.children);\n\n  return (\n    <XProvider theme={{ components: { Tabs: { horizontalMargin: '0' } } }}>\n      <Tabs className=\"markdown\" size=\"small\" defaultActiveKey=\"npm\" items={items} />\n    </XProvider>\n  );\n};\n\nexport default InstallDependencies;\n","import { unit } from '@ant-design/cssinjs';\nimport type { BubbleToken } from '.';\nimport type { GenerateStyle } from '../../theme/cssinjs-utils';\n\nexport const genVariantStyle: GenerateStyle<BubbleToken> = (token) => {\n  const { componentCls, paddingSM, padding } = token;\n  return {\n    [componentCls]: {\n      [`${componentCls}-content`]: {\n        // Shared: filled, outlined, shadow\n        '&-filled,&-outlined,&-shadow': {\n          padding: `${unit(paddingSM)} ${unit(padding)}`,\n          borderRadius: token.borderRadiusLG,\n        },\n\n        // Filled:\n        '&-filled': {\n          backgroundColor: token.colorFillContent,\n        },\n\n        // Outlined:\n        '&-outlined': {\n          border: `1px solid ${token.colorBorderSecondary}`,\n        },\n\n        // Shadow:\n        '&-shadow': {\n          boxShadow: token.boxShadowTertiary,\n        },\n      },\n    },\n  };\n};\n\nexport const genShapeStyle: GenerateStyle<BubbleToken> = (token) => {\n  const { componentCls, fontSize, lineHeight, paddingSM, padding, calc } = token;\n\n  const halfRadius = calc(fontSize).mul(lineHeight).div(2).add(paddingSM).equal();\n\n  const contentCls = `${componentCls}-content`;\n\n  return {\n    [componentCls]: {\n      [contentCls]: {\n        // round:\n        '&-round': {\n          borderRadius: {\n            _skip_check_: true,\n            value: halfRadius,\n          },\n          paddingInline: calc(padding).mul(1.25).equal(),\n        },\n      },\n\n      // corner:\n      [`&-start ${contentCls}-corner`]: {\n        borderStartStartRadius: token.borderRadiusXS,\n      },\n      [`&-end ${contentCls}-corner`]: {\n        borderStartEndRadius: token.borderRadiusXS,\n      },\n    },\n  };\n};\n","import {\n  CloseCircleFilled,\n  FileExcelFilled,\n  FileImageFilled,\n  FileMarkdownFilled,\n  FilePdfFilled,\n  FilePptFilled,\n  FileTextFilled,\n  FileWordFilled,\n  FileZipFilled,\n} from '@ant-design/icons';\nimport { Image, type ImageProps } from 'antd';\nimport classnames from 'classnames';\nimport React from 'react';\nimport type { Attachment } from '..';\nimport { useXProviderContext } from '../../x-provider';\nimport { AttachmentContext } from '../context';\nimport useStyle from '../style';\nimport { previewImage } from '../util';\nimport AudioIcon from './AudioIcon';\nimport Progress from './Progress';\nimport VideoIcon from './VideoIcon';\n\nexport interface FileListCardProps {\n  prefixCls?: string;\n  item: Attachment;\n  onRemove?: (item: Attachment) => void;\n  className?: string;\n  style?: React.CSSProperties;\n  imageProps?: ImageProps;\n}\n\nconst EMPTY = '\\u00A0';\n\nconst DEFAULT_ICON_COLOR = '#8c8c8c';\n\nconst IMG_EXTS = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'webp', 'svg'];\n\nconst PRESET_FILE_ICONS: {\n  ext: string[];\n  color: string;\n  icon: React.ReactElement;\n}[] = [\n  {\n    icon: <FileExcelFilled />,\n    color: '#22b35e',\n    ext: ['xlsx', 'xls'],\n  },\n  {\n    icon: <FileImageFilled />,\n    color: DEFAULT_ICON_COLOR,\n    ext: IMG_EXTS,\n  },\n  {\n    icon: <FileMarkdownFilled />,\n    color: DEFAULT_ICON_COLOR,\n    ext: ['md', 'mdx'],\n  },\n  {\n    icon: <FilePdfFilled />,\n    color: '#ff4d4f',\n    ext: ['pdf'],\n  },\n  {\n    icon: <FilePptFilled />,\n    color: '#ff6e31',\n    ext: ['ppt', 'pptx'],\n  },\n  {\n    icon: <FileWordFilled />,\n    color: '#1677ff',\n    ext: ['doc', 'docx'],\n  },\n  {\n    icon: <FileZipFilled />,\n    color: '#fab714',\n    ext: ['zip', 'rar', '7z', 'tar', 'gz'],\n  },\n  {\n    icon: <VideoIcon />,\n    color: '#ff4d4f',\n    ext: ['mp4', 'avi', 'mov', 'wmv', 'flv', 'mkv'],\n  },\n  {\n    icon: <AudioIcon />,\n    color: '#8c8c8c',\n    ext: ['mp3', 'wav', 'flac', 'ape', 'aac', 'ogg'],\n  },\n];\n\nfunction matchExt(suffix: string, ext: string[]) {\n  return ext.some((e) => suffix.toLowerCase() === `.${e}`);\n}\n\nfunction getSize(size: number) {\n  let retSize = size;\n  const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB'];\n  let unitIndex = 0;\n\n  while (retSize >= 1024 && unitIndex < units.length - 1) {\n    retSize /= 1024;\n    unitIndex++;\n  }\n\n  return `${retSize.toFixed(0)} ${units[unitIndex]}`;\n}\n\nfunction FileListCard(props: FileListCardProps, ref: React.Ref<HTMLDivElement>) {\n  const { prefixCls: customizePrefixCls, item, onRemove, className, style, imageProps } = props;\n  const context = React.useContext(AttachmentContext);\n  const { disabled } = context || {};\n\n  const { name, size, percent, status = 'done', description } = item;\n\n  // ============================= Prefix =============================\n  const { getPrefixCls } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('attachment', customizePrefixCls);\n  const cardCls = `${prefixCls}-list-card`;\n\n  // ============================= Style ==============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  // ============================== Name ==============================\n  const [namePrefix, nameSuffix] = React.useMemo(() => {\n    const nameStr = name || '';\n    const match = nameStr.match(/^(.*)\\.[^.]+$/);\n    return match ? [match[1], nameStr.slice(match[1].length)] : [nameStr, ''];\n  }, [name]);\n\n  const isImg = React.useMemo(() => matchExt(nameSuffix, IMG_EXTS), [nameSuffix]);\n\n  // ============================== Desc ==============================\n  const desc = React.useMemo(() => {\n    if (description) {\n      return description;\n    }\n\n    if (status === 'uploading') {\n      return `${percent || 0}%`;\n    }\n\n    if (status === 'error') {\n      return item.response || EMPTY;\n    }\n\n    return size ? getSize(size) : EMPTY;\n  }, [status, percent]);\n\n  // ============================== Icon ==============================\n  const [icon, iconColor] = React.useMemo(() => {\n    for (const { ext, icon, color } of PRESET_FILE_ICONS) {\n      if (matchExt(nameSuffix, ext)) {\n        return [icon, color];\n      }\n    }\n\n    return [<FileTextFilled key=\"defaultIcon\" />, DEFAULT_ICON_COLOR];\n  }, [nameSuffix]);\n\n  // ========================== ImagePreview ==========================\n  const [previewImg, setPreviewImg] = React.useState<string>();\n\n  React.useEffect(() => {\n    if (item.originFileObj) {\n      let synced = true;\n      previewImage(item.originFileObj).then((url) => {\n        if (synced) {\n          setPreviewImg(url);\n        }\n      });\n\n      return () => {\n        synced = false;\n      };\n    }\n    setPreviewImg(undefined);\n  }, [item.originFileObj]);\n\n  // ============================= Render =============================\n  let content: React.ReactNode = null;\n  const previewUrl = item.thumbUrl || item.url || previewImg;\n  const isImgPreview = isImg && (item.originFileObj || previewUrl);\n\n  if (isImgPreview) {\n    // Preview Image style\n    content = (\n      <>\n        {previewUrl && <Image {...imageProps} alt=\"preview\" src={previewUrl} />}\n\n        {status !== 'done' && (\n          <div className={`${cardCls}-img-mask`}>\n            {status === 'uploading' && percent !== undefined && (\n              <Progress percent={percent} prefixCls={cardCls} />\n            )}\n            {status === 'error' && (\n              <div className={`${cardCls}-desc`}>\n                <div className={`${cardCls}-ellipsis-prefix`}>{desc}</div>\n              </div>\n            )}\n          </div>\n        )}\n      </>\n    );\n  } else {\n    // Preview Card style\n    content = (\n      <>\n        <div className={`${cardCls}-icon`} style={{ color: iconColor }}>\n          {icon}\n        </div>\n        <div className={`${cardCls}-content`}>\n          <div className={`${cardCls}-name`}>\n            <div className={`${cardCls}-ellipsis-prefix`}>{namePrefix ?? EMPTY}</div>\n            <div className={`${cardCls}-ellipsis-suffix`}>{nameSuffix}</div>\n          </div>\n          <div className={`${cardCls}-desc`}>\n            <div className={`${cardCls}-ellipsis-prefix`}>{desc}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return wrapCSSVar(\n    <div\n      className={classnames(\n        cardCls,\n        {\n          [`${cardCls}-status-${status}`]: status,\n          [`${cardCls}-type-preview`]: isImgPreview,\n          [`${cardCls}-type-overview`]: !isImgPreview,\n        },\n        className,\n        hashId,\n        cssVarCls,\n      )}\n      style={style}\n      ref={ref}\n    >\n      {content}\n\n      {/* Remove Icon */}\n      {!disabled && onRemove && (\n        <button\n          type=\"button\"\n          className={`${cardCls}-remove`}\n          onClick={() => {\n            onRemove(item);\n          }}\n        >\n          <CloseCircleFilled />\n        </button>\n      )}\n    </div>,\n  );\n}\n\nexport default React.forwardRef(FileListCard);\n","\n  import '/home/runner/work/x/x/components/x-stream/demo/custom-protocol.tsx?watch=parent';\n  export default \"import { TagsOutlined } from '@ant-design/icons';\\nimport { ThoughtChain, XStream } from '@ant-design/x';\\nimport { Button, Splitter } from 'antd';\\nimport React from 'react';\\n\\nconst sipHeaders = [\\n  'INVITE sip:[email protected] SIP/2.0\\\\n',\\n  'Via: SIP/2.0/UDP [host];branch=123456\\\\n',\\n  'Content-Type: application/sdp\\\\n\\\\n',\\n];\\n\\nconst sdp = [\\n  'v=0\\\\n',\\n  'o=alice 2890844526 2890844526 IN IP4 [host]\\\\n',\\n  's=\\\\n',\\n  'c=IN IP4 [host]\\\\n',\\n  't=0 0\\\\n',\\n  'm=audio 49170 RTP/AVP 0\\\\n',\\n  'a=rtpmap:0 PCMU/8000\\\\n',\\n  'm=video 51372 RTP/AVP 31\\\\n',\\n  'a=rtpmap:31 H261/90000\\\\n',\\n  'm=video 53000 RTP/AVP 32\\\\n',\\n  'a=rtpmap:32 MPV/90000\\\\n\\\\n',\\n];\\n\\nfunction mockReadableStream() {\\n  return new ReadableStream({\\n    async start(controller) {\\n      for (const chunk of sipHeaders.concat(sdp)) {\\n        await new Promise((resolve) => setTimeout(resolve, 100));\\n        controller.enqueue(new TextEncoder().encode(chunk));\\n      }\\n      controller.close();\\n    },\\n  });\\n}\\n\\nconst App = () => {\\n  const [lines, setLines] = React.useState<string[]>([]);\\n\\n  async function readStream() {\\n    // 🌟 Read the stream\\n    for await (const chunk of XStream({\\n      readableStream: mockReadableStream(),\\n      transformStream: new TransformStream<string, string>({\\n        transform(chunk, controller) {\\n          controller.enqueue(chunk);\\n        },\\n      }),\\n    })) {\\n      setLines((pre) => [...pre, chunk]);\\n    }\\n  }\\n\\n  return (\\n    <Splitter>\\n      <Splitter.Panel>\\n        <Button type=\\\"primary\\\" onClick={readStream} style={{ marginBottom: 16 }}>\\n          Mock Custom Protocol - SIP\\n        </Button>\\n      </Splitter.Panel>\\n      {/* -------------- Log -------------- */}\\n      <Splitter.Panel style={{ marginLeft: 16 }}>\\n        <ThoughtChain\\n          items={\\n            lines.length\\n              ? [\\n                  {\\n                    title: 'Mock Custom Protocol - Log',\\n                    status: 'success',\\n                    icon: <TagsOutlined />,\\n                    content: (\\n                      <pre style={{ overflow: 'scroll' }}>\\n                        <code>{lines.join('')}</code>\\n                      </pre>\\n                    ),\\n                  },\\n                ]\\n              : []\\n          }\\n        />\\n      </Splitter.Panel>\\n    </Splitter>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/x-request/demo/basic.tsx?watch=parent';\n  export default \"import { LoadingOutlined, TagsOutlined } from '@ant-design/icons';\\nimport { ThoughtChain, XRequest } from '@ant-design/x';\\nimport { Button, Descriptions, Splitter } from 'antd';\\nimport React from 'react';\\n\\nimport type { ThoughtChainItem } from '@ant-design/x';\\n\\n/**\\n * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\\n */\\nconst BASE_URL = 'https://api.example.com';\\nconst PATH = '/chat';\\nconst MODEL = 'gpt-3.5-turbo';\\n// const API_KEY = '';\\n\\nconst exampleRequest = XRequest({\\n  baseURL: BASE_URL + PATH,\\n  model: MODEL,\\n\\n  /** 🔥🔥 Its dangerously! */\\n  // dangerouslyApiKey: API_KEY\\n});\\n\\nconst App = () => {\\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\\n  const [lines, setLines] = React.useState<Record<string, string>[]>([]);\\n\\n  async function request() {\\n    setStatus('pending');\\n\\n    await exampleRequest.create(\\n      {\\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\\n        stream: true,\\n      },\\n      {\\n        onSuccess: (messages) => {\\n          setStatus('success');\\n          console.log('onSuccess', messages);\\n        },\\n        onError: (error) => {\\n          setStatus('error');\\n          console.error('onError', error);\\n        },\\n        onUpdate: (msg) => {\\n          setLines((pre) => [...pre, msg]);\\n          console.log('onUpdate', msg);\\n        },\\n      },\\n    );\\n  }\\n\\n  return (\\n    <Splitter>\\n      <Splitter.Panel>\\n        <Button type=\\\"primary\\\" disabled={status === 'pending'} onClick={request}>\\n          Request - {BASE_URL}\\n          {PATH}\\n        </Button>\\n      </Splitter.Panel>\\n      <Splitter.Panel style={{ marginLeft: 16 }}>\\n        <ThoughtChain\\n          items={[\\n            {\\n              title: 'Request Log',\\n              status: status,\\n              icon: status === 'pending' ? <LoadingOutlined /> : <TagsOutlined />,\\n              description:\\n                status === 'error' &&\\n                exampleRequest.baseURL === BASE_URL + PATH &&\\n                'Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.',\\n              content: (\\n                <Descriptions column={1}>\\n                  <Descriptions.Item label=\\\"Status\\\">{status || '-'}</Descriptions.Item>\\n                  <Descriptions.Item label=\\\"Update Times\\\">{lines.length}</Descriptions.Item>\\n                </Descriptions>\\n              ),\\n            },\\n          ]}\\n        />\\n      </Splitter.Panel>\\n    </Splitter>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/sender/demo/header.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\\nimport { Sender } from '@ant-design/x';\\nimport { App, Button, Flex, Typography, theme } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const { message } = App.useApp();\\n  const { token } = theme.useToken();\\n\\n  const [open, setOpen] = React.useState(false);\\n\\n  const headerNode = (\\n    <Sender.Header title=\\\"Upload Sample\\\" open={open} onOpenChange={setOpen}>\\n      <Flex vertical align=\\\"center\\\" gap=\\\"small\\\" style={{ marginBlock: token.paddingLG }}>\\n        <CloudUploadOutlined style={{ fontSize: '4em' }} />\\n        <Typography.Title level={5} style={{ margin: 0 }}>\\n          Drag file here (just demo)\\n        </Typography.Title>\\n        <Typography.Text type=\\\"secondary\\\">\\n          Support pdf, doc, xlsx, ppt, txt, image file types\\n        </Typography.Text>\\n        <Button\\n          onClick={() => {\\n            message.info('Mock select file');\\n          }}\\n        >\\n          Select File\\n        </Button>\\n      </Flex>\\n    </Sender.Header>\\n  );\\n\\n  return (\\n    <Flex style={{ height: 350 }} align=\\\"end\\\">\\n      <Sender\\n        header={headerNode}\\n        prefix={\\n          <Button\\n            type=\\\"text\\\"\\n            icon={<LinkOutlined />}\\n            onClick={() => {\\n              setOpen(!open);\\n            }}\\n          />\\n        }\\n        placeholder=\\\"← Click to open\\\"\\n        onSubmit={() => {\\n          message.success('Send message successfully!');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/thought-chain/demo/size.tsx?watch=parent';\n  export default \"import { ThoughtChain } from '@ant-design/x';\\nimport type { ThoughtChainProps } from '@ant-design/x';\\nimport React from 'react';\\n\\nimport { MoreOutlined } from '@ant-design/icons';\\nimport { Button, Card, Radio } from 'antd';\\n\\nimport type { ConfigProviderProps } from 'antd';\\n\\ntype SizeType = ConfigProviderProps['componentSize'];\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n\\n  {\\n    title: 'Thought Chain Item Title',\\n    description: 'description',\\n    extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  },\\n];\\n\\nexport default () => {\\n  // default size is 'middle'\\n  const [size, setSize] = React.useState<SizeType>('middle');\\n\\n  return (\\n    <Card style={{ width: 500 }}>\\n      <Radio.Group\\n        value={size}\\n        onChange={(e) => setSize(e.target.value)}\\n        style={{ marginBottom: 16 }}\\n      >\\n        <Radio.Button value=\\\"large\\\">Large</Radio.Button>\\n        <Radio.Button value=\\\"middle\\\">Default</Radio.Button>\\n        <Radio.Button value=\\\"small\\\">Small</Radio.Button>\\n      </Radio.Group>\\n      <ThoughtChain items={items} size={size} />\\n    </Card>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/typing.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport { Button, Flex } from 'antd';\\nimport React from 'react';\\n\\nconst text = 'Ant Design X love you! ';\\n\\nconst App = () => {\\n  const [repeat, setRepeat] = React.useState(1);\\n\\n  return (\\n    <Flex vertical gap=\\\"small\\\">\\n      <Bubble\\n        content={text.repeat(repeat)}\\n        typing={{ step: 2, interval: 50 }}\\n        avatar={{ icon: <UserOutlined /> }}\\n      />\\n      <Bubble\\n        content={text.repeat(repeat)}\\n        typing={{ step: 2, interval: 50, suffix: <>💗</> }}\\n        avatar={{ icon: <UserOutlined /> }}\\n      />\\n\\n      <Button\\n        style={{ alignSelf: 'flex-end' }}\\n        onClick={() => {\\n          setRepeat((ori) => (ori < 5 ? ori + 1 : 1));\\n        }}\\n      >\\n        Repeat {repeat} Times\\n      </Button>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/prompts/demo/flex-wrap-fixed.tsx?watch=parent';\n  export default \"import {\\n  BulbOutlined,\\n  InfoCircleOutlined,\\n  RocketOutlined,\\n  SmileOutlined,\\n  WarningOutlined,\\n} from '@ant-design/icons';\\nimport { Prompts } from '@ant-design/x';\\nimport type { PromptsProps } from '@ant-design/x';\\nimport React from 'react';\\n\\nconst items: PromptsProps['items'] = [\\n  {\\n    key: '1',\\n    icon: <BulbOutlined style={{ color: '#FFD700' }} />,\\n    label: 'Ignite Your Creativity',\\n    description: 'Got any sparks for a new project?',\\n  },\\n  {\\n    key: '2',\\n    icon: <InfoCircleOutlined style={{ color: '#1890FF' }} />,\\n    label: 'Uncover Background Info',\\n    description: 'Help me understand the background of this topic.',\\n  },\\n  {\\n    key: '3',\\n    icon: <RocketOutlined style={{ color: '#722ED1' }} />,\\n    label: 'Efficiency Boost Battle',\\n    description: 'How can I work faster and better?',\\n  },\\n  {\\n    key: '4',\\n    icon: <SmileOutlined style={{ color: '#52C41A' }} />,\\n    label: 'Tell me a Joke',\\n    description: 'Why do not ants get sick? Because they have tiny ant-bodies!',\\n  },\\n  {\\n    key: '5',\\n    icon: <WarningOutlined style={{ color: '#FF4D4F' }} />,\\n    label: 'Common Issue Solutions',\\n    description: 'How to solve common issues? Share some tips!',\\n  },\\n];\\n\\nconst App = () => (\\n  <Prompts\\n    title=\\\"✨ Inspirational Sparks and Marvelous Tips\\\"\\n    items={items}\\n    wrap\\n    styles={{\\n      item: {\\n        flex: 'none',\\n        width: 'calc(50% - 6px)',\\n      },\\n    }}\\n  />\\n);\\n\\nexport default App;\\n\";;\n  ","import XStream from '../x-stream';\nimport xFetch from './x-fetch';\n\nimport type { SSEOutput, XStreamOptions } from '../x-stream';\nimport type { XFetchOptions } from './x-fetch';\n\nimport type { AnyObject } from '../_util/type';\n\nexport interface XRequestBaseOptions {\n  /**\n   * @description Base URL, e.g., 'https://api.example.com/v1/chat'\n   */\n  baseURL: string;\n\n  /**\n   * @description Model name, e.g., 'gpt-3.5-turbo'\n   */\n  model?: string;\n\n  /**\n   * @warning 🔥🔥 Its dangerously!\n   *\n   * Enabling the dangerouslyApiKey option can be dangerous because it exposes\n   * your secret API credentials in the client-side code. Web browsers are inherently\n   * less secure than server environments, any user with access to the browser can\n   * potentially inspect, extract, and misuse these credentials. This could lead to\n   * unauthorized access using your credentials and potentially compromise sensitive\n   * data or functionality.\n   */\n  dangerouslyApiKey?: string;\n}\n\ninterface XRequestCustomOptions {\n  /**\n   * @description Custom fetch\n   */\n  fetch?: XFetchOptions['fetch'];\n}\n\nexport type XRequestOptions = XRequestBaseOptions & XRequestCustomOptions;\n\ntype XRequestMessageContent = string | AnyObject;\n\ninterface XRequestMessage extends AnyObject {\n  role?: string;\n  content?: XRequestMessageContent;\n}\n\n/**\n * Compatible with the parameters of OpenAI's chat.completions.create,\n * with plans to support more parameters and adapters in the future\n */\nexport interface XRequestParams {\n  /**\n   * @description Model name, e.g., 'gpt-3.5-turbo'\n   * @default XRequestOptions.model\n   */\n  model?: string;\n\n  /**\n   * @description Indicates whether to use streaming for the response\n   */\n  stream?: boolean;\n\n  /**\n   * @description The messages to be sent to the model\n   */\n  messages?: XRequestMessage[];\n}\n\nexport interface XRequestCallbacks<Output> {\n  /**\n   * @description Callback when the request is successful\n   */\n  onSuccess: (chunks: Output[]) => void;\n\n  /**\n   * @description Callback when the request fails\n   */\n  onError: (error: Error) => void;\n\n  /**\n   * @description Callback when the request is updated\n   */\n  onUpdate: (chunk: Output) => void;\n}\n\nexport type XRequestFunction<Input = AnyObject, Output = SSEOutput> = (\n  params: XRequestParams & Input,\n  callbacks: XRequestCallbacks<Output>,\n  transformStream?: XStreamOptions<Output>['transformStream'],\n) => Promise<void>;\n\nclass XRequestClass {\n  readonly baseURL;\n  readonly model;\n\n  private defaultHeaders;\n  private customOptions;\n\n  private static instanceBuffer: Map<string | typeof fetch, XRequestClass> = new Map();\n\n  private constructor(options: XRequestOptions) {\n    const { baseURL, model, dangerouslyApiKey, ...customOptions } = options;\n\n    this.baseURL = options.baseURL;\n    this.model = options.model;\n    this.defaultHeaders = {\n      'Content-Type': 'application/json',\n      ...(options.dangerouslyApiKey && {\n        Authorization: options.dangerouslyApiKey,\n      }),\n    };\n    this.customOptions = customOptions;\n  }\n\n  public static init(options: XRequestOptions): XRequestClass {\n    if (!options.baseURL || typeof options.baseURL !== 'string')\n      throw new Error('The baseURL is not valid!');\n\n    const id = options.fetch || options.baseURL;\n\n    if (!XRequestClass.instanceBuffer.has(id)) {\n      XRequestClass.instanceBuffer.set(id, new XRequestClass(options));\n    }\n\n    return XRequestClass.instanceBuffer.get(id) as XRequestClass;\n  }\n\n  public create = async <Input = AnyObject, Output = SSEOutput>(\n    params: XRequestParams & Input,\n    callbacks?: XRequestCallbacks<Output>,\n    transformStream?: XStreamOptions<Output>['transformStream'],\n  ) => {\n    const requestInit = {\n      method: 'POST',\n      body: JSON.stringify({\n        model: this.model,\n        ...params,\n      }),\n      headers: this.defaultHeaders,\n    };\n\n    try {\n      const response = await xFetch(this.baseURL, {\n        fetch: this.customOptions.fetch,\n        ...requestInit,\n      });\n\n      if (transformStream) {\n        await this.customResponseHandler<Output>(response, callbacks, transformStream);\n        return;\n      }\n\n      const contentType = response.headers.get('content-type') || '';\n\n      const mimeType = contentType.split(';')[0].trim();\n\n      switch (mimeType) {\n        /** SSE */\n        case 'text/event-stream':\n          await this.sseResponseHandler<Output>(response, callbacks);\n          break;\n\n        /** JSON */\n        case 'application/json':\n          await this.jsonResponseHandler<Output>(response, callbacks);\n          break;\n\n        default:\n          throw new Error(`The response content-type: ${contentType} is not support!`);\n      }\n    } catch (error) {\n      const err = error instanceof Error ? error : new Error('Unknown error!');\n\n      callbacks?.onError?.(err);\n\n      throw err;\n    }\n  };\n\n  private customResponseHandler = async <Output = SSEOutput>(\n    response: Response,\n    callbacks?: XRequestCallbacks<Output>,\n    transformStream?: XStreamOptions<Output>['transformStream'],\n  ) => {\n    const chunks: Output[] = [];\n\n    for await (const chunk of XStream({\n      readableStream: response.body!,\n      transformStream,\n    })) {\n      chunks.push(chunk);\n\n      callbacks?.onUpdate?.(chunk);\n    }\n\n    callbacks?.onSuccess?.(chunks);\n  };\n\n  private sseResponseHandler = async <Output = SSEOutput>(\n    response: Response,\n    callbacks?: XRequestCallbacks<Output>,\n  ) => {\n    const chunks: Output[] = [];\n\n    for await (const chunk of XStream<Output>({\n      readableStream: response.body!,\n    })) {\n      chunks.push(chunk);\n\n      callbacks?.onUpdate?.(chunk);\n    }\n\n    callbacks?.onSuccess?.(chunks);\n  };\n\n  private jsonResponseHandler = async <Output = SSEOutput>(\n    response: Response,\n    callbacks?: XRequestCallbacks<Output>,\n  ) => {\n    const chunk: Output = await response.json();\n\n    callbacks?.onUpdate?.(chunk);\n\n    callbacks?.onSuccess?.([chunk]);\n  };\n}\n\nconst XRequest = XRequestClass.init;\n\nexport default XRequest;\n","\n  import '/home/runner/work/x/x/components/welcome/demo/_semantic.tsx?watch=parent';\n  export default \"import { EllipsisOutlined, ShareAltOutlined } from '@ant-design/icons';\\nimport { Welcome } from '@ant-design/x';\\nimport { Button, Space } from 'antd';\\nimport React from 'react';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nconst locales = {\\n  cn: { title: '标题容器', description: '描述容器', icon: '图标容器', extra: '额外内容' },\\n  en: {\\n    title: 'Title container',\\n    description: 'Description container',\\n    icon: 'Icon container',\\n    extra: 'Extra content',\\n  },\\n};\\n\\nconst App: React.FC = () => {\\n  const [locale] = useLocale(locales);\\n  return (\\n    <SemanticPreview\\n      semantics={[\\n        { name: 'icon', desc: locale.icon },\\n        { name: 'title', desc: locale.title },\\n        { name: 'description', desc: locale.description },\\n        { name: 'extra', desc: locale.extra },\\n      ]}\\n    >\\n      <Welcome\\n        icon=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n        title=\\\"Hello, I'm Ant Design X\\\"\\n        description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n        extra={\\n          <Space>\\n            <Button size=\\\"small\\\" icon={<ShareAltOutlined />} />\\n            <Button size=\\\"small\\\" icon={<EllipsisOutlined />} />\\n          </Space>\\n        }\\n      />\\n    </SemanticPreview>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/markdown.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport type { BubbleProps } from '@ant-design/x';\\nimport { Typography } from 'antd';\\nimport markdownit from 'markdown-it';\\n/* eslint-disable react/no-danger */\\nimport React from 'react';\\n\\nconst md = markdownit({ html: true, breaks: true });\\n\\nconst text = `\\n> Render as markdown content to show rich text!\\n\\nLink: [Ant Design X](https://x.ant.design)\\n`.trim();\\n\\nconst renderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <Typography>\\n    {/* biome-ignore lint/security/noDangerouslySetInnerHtml: used in demo */}\\n    <div dangerouslySetInnerHTML={{ __html: md.render(content) }} />\\n  </Typography>\\n);\\n\\nconst App = () => {\\n  const [renderKey, setRenderKey] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    const id = setTimeout(\\n      () => {\\n        setRenderKey((prev) => prev + 1);\\n      },\\n      text.length * 100 + 2000,\\n    );\\n\\n    return () => {\\n      clearTimeout(id);\\n    };\\n  }, [renderKey]);\\n\\n  return (\\n    <div style={{ height: 100 }} key={renderKey}>\\n      <Bubble\\n        typing\\n        content={text}\\n        messageRender={renderMarkdown}\\n        avatar={{ icon: <UserOutlined /> }}\\n      />\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import type { AnimationConfig, AnimationItem, LottiePlayer } from 'lottie-web';\nimport React from 'react';\n\ninterface UseLottieOptions extends Omit<AnimationConfig, 'container' | 'renderer'> {\n  renderer?: 'svg' | 'canvas' | 'html';\n  lazyLoad?: boolean;\n  disabled?: boolean;\n  rootMargin?: string;\n  path?: string;\n}\n\nconst useLottie = (options: UseLottieOptions) => {\n  const { lazyLoad = true, rootMargin = '200px', disabled = false, ...lottieOptions } = options;\n  const stableLottieOptions = React.useMemo(() => lottieOptions, []);\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const [isIntersected, setIsIntersected] = React.useState(!lazyLoad);\n  const [animationInstance, setAnimationInstance] = React.useState<AnimationItem | null>(null);\n\n  React.useEffect(() => {\n    if (disabled) return;\n\n    let animation: AnimationItem | undefined;\n\n    const lottie: LottiePlayer = (window as any)?.lottie;\n\n    if (!animationInstance) {\n      if (!lazyLoad || isIntersected) {\n        if (containerRef.current && lottie) {\n          animation = lottie.loadAnimation({\n            container: containerRef.current,\n            ...stableLottieOptions,\n          });\n\n          setAnimationInstance(animation);\n        }\n      }\n    } else {\n      return () => {\n        if (animation) {\n          animation.destroy();\n          setAnimationInstance(null);\n        }\n      };\n    }\n  }, [isIntersected, lazyLoad, stableLottieOptions, animationInstance, disabled]);\n\n  React.useEffect(() => {\n    if (disabled) return;\n\n    if (lazyLoad) {\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting) {\n            setIsIntersected(true);\n          }\n        },\n        { root: null, rootMargin, threshold: 0 },\n      );\n\n      if (containerRef.current) {\n        observer.observe(containerRef.current);\n      }\n\n      return () => {\n        if (containerRef.current) {\n          observer.unobserve(containerRef.current);\n        }\n      };\n    }\n  }, [lazyLoad, rootMargin, disabled]);\n\n  return [\n    containerRef,\n    animationInstance,\n    {\n      isIntersected,\n    },\n  ] as const;\n};\n\nexport default useLottie;\n","\n  import '/home/runner/work/x/x/components/welcome/demo/basic.tsx?watch=parent';\n  export default \"import { Welcome } from '@ant-design/x';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  return (\\n    <Welcome\\n      icon=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n      title=\\\"Hello, I'm Ant Design X\\\"\\n      description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n\";;\n  ","import React from 'react';\nimport { createStyles, css } from 'antd-style';\nimport classNames from 'classnames';\n\ninterface IconProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst useStyle = createStyles(() => ({\n  iconWrap: css`\n    display: inline-flex;\n    align-items: center;\n    line-height: 0;\n    text-align: center;\n    vertical-align: -0.125em;\n  `,\n}));\n\nconst BunIcon: React.FC<IconProps> = (props) => {\n  const { className, style } = props;\n  const { styles } = useStyle();\n  return (\n    <span className={classNames(styles.iconWrap, className)} style={style}>\n      <svg id=\"Bun\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 70\" width=\"1em\" height=\"1em\">\n        <title>Bun Logo</title>\n        <path\n          id=\"Shadow\"\n          d=\"M71.09,20.74c-.16-.17-.33-.34-.5-.5s-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5-.33-.34-.5-.5A26.46,26.46,0,0,1,75.5,35.7c0,16.57-16.82,30.05-37.5,30.05-11.58,0-21.94-4.23-28.83-10.86l.5.5.5.5.5.5.5.5.5.5.5.5.5.5C19.55,65.3,30.14,69.75,42,69.75c20.68,0,37.5-13.48,37.5-30C79.5,32.69,76.46,26,71.09,20.74Z\"\n        />\n        <g id=\"Body\">\n          <path\n            id=\"Background\"\n            d=\"M73,35.7c0,15.21-15.67,27.54-35,27.54S3,50.91,3,35.7C3,26.27,9,17.94,18.22,13S33.18,3,38,3s8.94,4.13,19.78,10C67,17.94,73,26.27,73,35.7Z\"\n            style={{\n              fill: '#fbf0df',\n            }}\n          />\n          <path\n            id=\"Bottom_Shadow\"\n            data-name=\"Bottom Shadow\"\n            d=\"M73,35.7a21.67,21.67,0,0,0-.8-5.78c-2.73,33.3-43.35,34.9-59.32,24.94A40,40,0,0,0,38,63.24C57.3,63.24,73,50.89,73,35.7Z\"\n            style={{\n              fill: '#f6dece',\n            }}\n          />\n          <path\n            id=\"Light_Shine\"\n            data-name=\"Light Shine\"\n            d=\"M24.53,11.17C29,8.49,34.94,3.46,40.78,3.45A9.29,9.29,0,0,0,38,3c-2.42,0-5,1.25-8.25,3.13-1.13.66-2.3,1.39-3.54,2.15-2.33,1.44-5,3.07-8,4.7C8.69,18.13,3,26.62,3,35.7c0,.4,0,.8,0,1.19C9.06,15.48,20.07,13.85,24.53,11.17Z\"\n            style={{\n              fill: '#fffefc',\n            }}\n          />\n          <path\n            id=\"Top\"\n            d=\"M35.12,5.53A16.41,16.41,0,0,1,29.49,18c-.28.25-.06.73.3.59,3.37-1.31,7.92-5.23,6-13.14C35.71,5,35.12,5.12,35.12,5.53Zm2.27,0A16.24,16.24,0,0,1,39,19c-.12.35.31.65.55.36C41.74,16.56,43.65,11,37.93,5,37.64,4.74,37.19,5.14,37.39,5.49Zm2.76-.17A16.42,16.42,0,0,1,47,17.12a.33.33,0,0,0,.65.11c.92-3.49.4-9.44-7.17-12.53C40.08,4.54,39.82,5.08,40.15,5.32ZM21.69,15.76a16.94,16.94,0,0,0,10.47-9c.18-.36.75-.22.66.18-1.73,8-7.52,9.67-11.12,9.45C21.32,16.4,21.33,15.87,21.69,15.76Z\"\n            style={{\n              fill: '#ccbea7',\n              fillRule: 'evenodd',\n            }}\n          />\n          <path\n            id=\"Outline\"\n            d=\"M38,65.75C17.32,65.75.5,52.27.5,35.7c0-10,6.18-19.33,16.53-24.92,3-1.6,5.57-3.21,7.86-4.62,1.26-.78,2.45-1.51,3.6-2.19C32,1.89,35,.5,38,.5s5.62,1.2,8.9,3.14c1,.57,2,1.19,3.07,1.87,2.49,1.54,5.3,3.28,9,5.27C69.32,16.37,75.5,25.69,75.5,35.7,75.5,52.27,58.68,65.75,38,65.75ZM38,3c-2.42,0-5,1.25-8.25,3.13-1.13.66-2.3,1.39-3.54,2.15-2.33,1.44-5,3.07-8,4.7C8.69,18.13,3,26.62,3,35.7,3,50.89,18.7,63.25,38,63.25S73,50.89,73,35.7C73,26.62,67.31,18.13,57.78,13,54,11,51.05,9.12,48.66,7.64c-1.09-.67-2.09-1.29-3-1.84C42.63,4,40.42,3,38,3Z\"\n          />\n        </g>\n        <g id=\"Mouth\">\n          <g id=\"Background-2\" data-name=\"Background\">\n            <path\n              d=\"M45.05,43a8.93,8.93,0,0,1-2.92,4.71,6.81,6.81,0,0,1-4,1.88A6.84,6.84,0,0,1,34,47.71,8.93,8.93,0,0,1,31.12,43a.72.72,0,0,1,.8-.81H44.26A.72.72,0,0,1,45.05,43Z\"\n              style={{\n                fill: '#b71422',\n              }}\n            />\n          </g>\n          <g id=\"Tongue\">\n            <path\n              id=\"Background-3\"\n              data-name=\"Background\"\n              d=\"M34,47.79a6.91,6.91,0,0,0,4.12,1.9,6.91,6.91,0,0,0,4.11-1.9,10.63,10.63,0,0,0,1-1.07,6.83,6.83,0,0,0-4.9-2.31,6.15,6.15,0,0,0-5,2.78C33.56,47.4,33.76,47.6,34,47.79Z\"\n              style={{\n                fill: '#ff6164',\n              }}\n            />\n            <path\n              id=\"Outline-2\"\n              data-name=\"Outline\"\n              d=\"M34.16,47a5.36,5.36,0,0,1,4.19-2.08,6,6,0,0,1,4,1.69c.23-.25.45-.51.66-.77a7,7,0,0,0-4.71-1.93,6.36,6.36,0,0,0-4.89,2.36A9.53,9.53,0,0,0,34.16,47Z\"\n            />\n          </g>\n          <path\n            id=\"Outline-3\"\n            data-name=\"Outline\"\n            d=\"M38.09,50.19a7.42,7.42,0,0,1-4.45-2,9.52,9.52,0,0,1-3.11-5.05,1.2,1.2,0,0,1,.26-1,1.41,1.41,0,0,1,1.13-.51H44.26a1.44,1.44,0,0,1,1.13.51,1.19,1.19,0,0,1,.25,1h0a9.52,9.52,0,0,1-3.11,5.05A7.42,7.42,0,0,1,38.09,50.19Zm-6.17-7.4c-.16,0-.2.07-.21.09a8.29,8.29,0,0,0,2.73,4.37A6.23,6.23,0,0,0,38.09,49a6.28,6.28,0,0,0,3.65-1.73,8.3,8.3,0,0,0,2.72-4.37.21.21,0,0,0-.2-.09Z\"\n          />\n        </g>\n        <g id=\"Face\">\n          <ellipse\n            id=\"Right_Blush\"\n            data-name=\"Right Blush\"\n            cx=\"53.22\"\n            cy=\"40.18\"\n            rx=\"5.85\"\n            ry=\"3.44\"\n            style={{\n              fill: '#febbd0',\n            }}\n          />\n          <ellipse\n            id=\"Left_Bluch\"\n            data-name=\"Left Bluch\"\n            cx=\"22.95\"\n            cy=\"40.18\"\n            rx=\"5.85\"\n            ry=\"3.44\"\n            style={{\n              fill: '#febbd0',\n            }}\n          />\n          <path\n            id=\"Eyes\"\n            d=\"M25.7,38.8a5.51,5.51,0,1,0-5.5-5.51A5.51,5.51,0,0,0,25.7,38.8Zm24.77,0A5.51,5.51,0,1,0,45,33.29,5.5,5.5,0,0,0,50.47,38.8Z\"\n            style={{\n              fillRule: 'evenodd',\n            }}\n          />\n          <path\n            id=\"Iris\"\n            d=\"M24,33.64a2.07,2.07,0,1,0-2.06-2.07A2.07,2.07,0,0,0,24,33.64Zm24.77,0a2.07,2.07,0,1,0-2.06-2.07A2.07,2.07,0,0,0,48.75,33.64Z\"\n            style={{\n              fill: '#fff',\n              fillRule: 'evenodd',\n            }}\n          />\n        </g>\n      </svg>\n    </span>\n  );\n};\n\nexport default BunIcon;\n","\n  import '/home/runner/work/x/x/components/sender/demo/focus.tsx?watch=parent';\n  export default \"import { Sender } from '@ant-design/x';\\nimport { Button, Flex, type GetRef } from 'antd';\\nimport React, { useRef } from 'react';\\n\\nconst App: React.FC = () => {\\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\\n\\n  const senderProps = {\\n    defaultValue: 'Hello, welcome to use Ant Design X!',\\n    ref: senderRef,\\n  };\\n\\n  return (\\n    <Flex wrap gap={12}>\\n      <Button\\n        onClick={() => {\\n          senderRef.current!.focus({\\n            cursor: 'start',\\n          });\\n        }}\\n      >\\n        Focus at first\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          senderRef.current!.focus({\\n            cursor: 'end',\\n          });\\n        }}\\n      >\\n        Focus at last\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          senderRef.current!.focus({\\n            cursor: 'all',\\n          });\\n        }}\\n      >\\n        Focus to select all\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          senderRef.current!.focus({\\n            preventScroll: true,\\n          });\\n        }}\\n      >\\n        Focus prevent scroll\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          senderRef.current!.blur();\\n        }}\\n      >\\n        Blur\\n      </Button>\\n      <Sender {...senderProps} />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/list.tsx?watch=parent';\n  export default \"import { UserOutlined } from '@ant-design/icons';\\nimport { Bubble } from '@ant-design/x';\\nimport type { BubbleProps } from '@ant-design/x';\\nimport { Button, Flex, Switch } from 'antd';\\nimport type { GetProp, GetRef } from 'antd';\\nimport React from 'react';\\n\\nconst rolesAsObject: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n    typing: { step: 5, interval: 20 },\\n    style: {\\n      maxWidth: 600,\\n    },\\n  },\\n  user: {\\n    placement: 'end',\\n    avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n  },\\n};\\n\\nconst rolesAsFunction = (bubbleData: BubbleProps, index: number) => {\\n  const RenderIndex: BubbleProps['messageRender'] = (content) => (\\n    <Flex>\\n      #{index}: {content}\\n    </Flex>\\n  );\\n  switch (bubbleData.role) {\\n    case 'ai':\\n      return {\\n        placement: 'start' as const,\\n        avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n        typing: { step: 5, interval: 20 },\\n        style: {\\n          maxWidth: 600,\\n        },\\n        messageRender: RenderIndex,\\n      };\\n    case 'user':\\n      return {\\n        placement: 'end' as const,\\n        avatar: { icon: <UserOutlined />, style: { background: '#87d068' } },\\n        messageRender: RenderIndex,\\n      };\\n    default:\\n      return { messageRender: RenderIndex };\\n  }\\n};\\n\\nconst App = () => {\\n  const [count, setCount] = React.useState(3);\\n  const [useRolesAsFunction, setUseRolesAsFunction] = React.useState(false);\\n  const listRef = React.useRef<GetRef<typeof Bubble.List>>(null);\\n\\n  return (\\n    <Flex vertical gap=\\\"small\\\">\\n      <Flex gap=\\\"small\\\" justify=\\\"space-between\\\">\\n        <Flex gap=\\\"large\\\" align=\\\"center\\\">\\n          Use roles as:\\n          <Switch\\n            checked={useRolesAsFunction}\\n            onChange={(checked) => setUseRolesAsFunction(checked)}\\n            checkedChildren=\\\"Function\\\"\\n            unCheckedChildren=\\\"Object\\\"\\n          />\\n        </Flex>\\n\\n        <Flex gap=\\\"small\\\">\\n          <Button\\n            onClick={() => {\\n              setCount((i) => i + 1);\\n            }}\\n          >\\n            Add Bubble\\n          </Button>\\n\\n          <Button\\n            onClick={() => {\\n              listRef.current?.scrollTo({ key: 0, block: 'nearest' });\\n            }}\\n          >\\n            Scroll To First\\n          </Button>\\n        </Flex>\\n      </Flex>\\n\\n      <Bubble.List\\n        ref={listRef}\\n        style={{ maxHeight: 300 }}\\n        roles={useRolesAsFunction ? rolesAsFunction : rolesAsObject}\\n        items={Array.from({ length: count }).map((_, i) => {\\n          const isAI = !!(i % 2);\\n          const content = isAI ? 'Mock AI content. '.repeat(20) : 'Mock user content.';\\n\\n          return { key: i, role: isAI ? 'ai' : 'user', content };\\n        })}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { Progress as AntdProgress, theme } from 'antd';\nimport React from 'react';\n\nexport interface ProgressProps {\n  prefixCls: string;\n  percent: number;\n}\n\nexport default function Progress(props: ProgressProps) {\n  const { percent } = props;\n  const { token } = theme.useToken();\n\n  return (\n    <AntdProgress\n      type=\"circle\"\n      percent={percent}\n      size={token.fontSizeHeading2 * 2}\n      strokeColor=\"#FFF\"\n      trailColor=\"rgba(255, 255, 255, 0.3)\"\n      format={(ptg) => <span style={{ color: '#FFF' }}>{(ptg || 0).toFixed(0)}%</span>}\n    />\n  );\n}\n","import { Button, type ButtonProps } from 'antd';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface ActionButtonContextProps {\n  prefixCls: string;\n  onSend?: VoidFunction;\n  onSendDisabled?: boolean;\n  onClear?: VoidFunction;\n  onClearDisabled?: boolean;\n  onCancel?: VoidFunction;\n  onCancelDisabled?: boolean;\n  onSpeech?: VoidFunction;\n  onSpeechDisabled?: boolean;\n  speechRecording?: boolean;\n  disabled?: boolean;\n}\n\nexport const ActionButtonContext = React.createContext<ActionButtonContextProps>(null!);\n\nexport interface ActionButtonProps extends ButtonProps {\n  action: 'onSend' | 'onClear' | 'onCancel' | 'onSpeech';\n}\n\nexport function ActionButton(props: ActionButtonProps, ref: React.Ref<HTMLButtonElement>) {\n  const { className, action, onClick: outClick, ...restProps } = props;\n  const context = React.useContext(ActionButtonContext);\n  const { prefixCls, disabled: rootDisabled } = context;\n\n  const onClick = context[action];\n  const mergedDisabled = rootDisabled ?? restProps.disabled ?? context[`${action}Disabled`];\n\n  return (\n    <Button\n      type=\"text\"\n      {...restProps}\n      ref={ref}\n      onClick={(e) => {\n        if (!mergedDisabled) {\n          if (onClick) {\n            onClick();\n          }\n          if (outClick) {\n            outClick(e);\n          }\n        }\n      }}\n      className={classNames(prefixCls, className, {\n        [`${prefixCls}-disabled`]: mergedDisabled,\n      })}\n    />\n  );\n}\n\nexport default React.forwardRef(ActionButton);\n","/**\n * @description default separator for {@link splitStream}\n */\nconst DEFAULT_STREAM_SEPARATOR = '\\n\\n';\n/**\n * @description Default separator for {@link splitPart}\n * @example \"event: delta\\ndata: {\\\"key\\\": \\\"value\\\"}\"\n */\nconst DEFAULT_PART_SEPARATOR = '\\n';\n/**\n * @description Default separator for key value, A colon (`:`) is used to separate keys from values\n * @example \"event: delta\"\n */\nconst DEFAULT_KV_SEPARATOR = ':';\n\n/**\n * Check if a string is not empty or only contains whitespace characters\n */\nconst isValidString = (str: string) => (str ?? '').trim() !== '';\n\n/**\n * @description A TransformStream inst that splits a stream into parts based on {@link DEFAULT_STREAM_SEPARATOR}\n * @example\n *\n * `event: delta\n * data: { content: 'hello' }\n *\n * event: delta\n * data: { key: 'world!' }\n *\n * `\n */\nfunction splitStream() {\n  // Buffer to store incomplete data chunks between transformations\n  let buffer = '';\n\n  return new TransformStream<string, string>({\n    transform(streamChunk, controller) {\n      buffer += streamChunk;\n\n      // Split the buffer based on the separator\n      const parts = buffer.split(DEFAULT_STREAM_SEPARATOR);\n\n      // Enqueue all complete parts except for the last incomplete one\n      parts.slice(0, -1).forEach((part) => {\n        // Skip empty parts\n        if (isValidString(part)) {\n          controller.enqueue(part);\n        }\n      });\n\n      // Save the last incomplete part back to the buffer for the next chunk\n      buffer = parts[parts.length - 1];\n    },\n    flush(controller) {\n      // If there's any remaining data in the buffer, enqueue it as the final part\n      if (isValidString(buffer)) {\n        controller.enqueue(buffer);\n      }\n    },\n  });\n}\n\n/**\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#fields\n */\nexport type SSEFields = 'data' | 'event' | 'id' | 'retry';\n\n/**\n * @example\n * const sseObject = {\n *    event: 'delta',\n *    data: '{ key: \"world!\" }',\n * };\n */\nexport type SSEOutput = Partial<Record<SSEFields, any>>;\n\n/**\n * @description A TransformStream inst that transforms a part string into {@link SSEOutput}\n * @example part string\n *\n * \"event: delta\\ndata: { key: 'world!' }\\n\"\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/EventSource\n *\n * When handling responses with `Content-Type: text/event-stream`, the following standard practices are commonly observed:\n * - Double newline characters (`\\n\\n`) are used to separate individual events.\n * - Single newline characters (`\\n`) are employed to separate line within an event.\n */\nfunction splitPart() {\n  return new TransformStream<string, SSEOutput>({\n    transform(partChunk, controller) {\n      // Split the chunk into key-value pairs using the partSeparator\n      const lines = partChunk.split(DEFAULT_PART_SEPARATOR);\n\n      const sseEvent = lines.reduce<SSEOutput>((acc, line) => {\n        const separatorIndex = line.indexOf(DEFAULT_KV_SEPARATOR);\n\n        if (separatorIndex === -1) {\n          throw new Error(\n            `The key-value separator \"${DEFAULT_KV_SEPARATOR}\" is not found in the sse line chunk!`,\n          );\n        }\n\n        // Extract the key from the beginning of the line up to the separator\n        const key = line.slice(0, separatorIndex);\n\n        // The colon is used for comment lines, skip directly\n        if (!isValidString(key)) return acc;\n\n        // Extract the value from the line after the separator\n        const value = line.slice(separatorIndex + 1);\n\n        return { ...acc, [key]: value };\n      }, {});\n\n      if (Object.keys(sseEvent).length === 0) return;\n\n      // Reduce the key-value pairs into a single object and enqueue\n      controller.enqueue(sseEvent);\n    },\n  });\n}\n\nexport interface XStreamOptions<Output> {\n  /**\n   * @description Readable stream of binary data\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n   */\n  readableStream: ReadableStream<Uint8Array>;\n\n  /**\n   * @description Support customizable transformStream to transform streams\n   * @default sseTransformStream\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/TransformStream\n   */\n  transformStream?: TransformStream<string, Output>;\n}\n\ntype XReadableStream<R = SSEOutput> = ReadableStream<R> & AsyncGenerator<R>;\n\n/**\n * @description Transform Uint8Array binary stream to {@link SSEOutput} by default\n * @warning The `XStream` only support the `utf-8` encoding. More encoding support maybe in the future.\n */\nfunction XStream<Output = SSEOutput>(options: XStreamOptions<Output>) {\n  const { readableStream, transformStream } = options;\n\n  if (!(readableStream instanceof ReadableStream)) {\n    throw new Error('The options.readableStream must be an instance of ReadableStream.');\n  }\n\n  // Default encoding is `utf-8`\n  const decoderStream = new TextDecoderStream();\n\n  const stream = (\n    transformStream\n      ? /**\n         * Uint8Array binary -> string -> Output\n         */\n        readableStream.pipeThrough(decoderStream).pipeThrough(transformStream)\n      : /**\n         * Uint8Array binary -> string -> SSE part string -> Default Output {@link SSEOutput}\n         */\n        readableStream\n          .pipeThrough(decoderStream)\n          .pipeThrough(splitStream())\n          .pipeThrough(splitPart())\n  ) as XReadableStream<Output>;\n\n  /** support async iterator */\n  stream[Symbol.asyncIterator] = async function* () {\n    const reader = this.getReader();\n\n    while (true) {\n      const { done, value } = await reader.read();\n\n      if (done) break;\n\n      if (!value) continue;\n\n      // Transformed data through all transform pipes\n      yield value;\n    }\n  }\n  \n  return stream;\n}\n\nexport default XStream;\n","\n  import '/home/runner/work/x/x/docs/playground/independent.tsx?watch=parent';\n  export default \"import {\\n  Attachments,\\n  Bubble,\\n  Conversations,\\n  Prompts,\\n  Sender,\\n  Welcome,\\n  useXAgent,\\n  useXChat,\\n} from '@ant-design/x';\\nimport { createStyles } from 'antd-style';\\nimport React, { useEffect } from 'react';\\n\\nimport {\\n  CloudUploadOutlined,\\n  CommentOutlined,\\n  EllipsisOutlined,\\n  FireOutlined,\\n  HeartOutlined,\\n  PaperClipOutlined,\\n  PlusOutlined,\\n  ReadOutlined,\\n  ShareAltOutlined,\\n  SmileOutlined,\\n} from '@ant-design/icons';\\nimport { Badge, Button, type GetProp, Space } from 'antd';\\n\\nconst renderTitle = (icon: React.ReactElement, title: string) => (\\n  <Space align=\\\"start\\\">\\n    {icon}\\n    <span>{title}</span>\\n  </Space>\\n);\\n\\nconst defaultConversationsItems = [\\n  {\\n    key: '0',\\n    label: 'What is Ant Design X?',\\n  },\\n];\\n\\nconst useStyle = createStyles(({ token, css }) => {\\n  return {\\n    layout: css`\\n      width: 100%;\\n      min-width: 1000px;\\n      height: 722px;\\n      border-radius: ${token.borderRadius}px;\\n      display: flex;\\n      background: ${token.colorBgContainer};\\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\\n\\n      .ant-prompts {\\n        color: ${token.colorText};\\n      }\\n    `,\\n    menu: css`\\n      background: ${token.colorBgLayout}80;\\n      width: 280px;\\n      height: 100%;\\n      display: flex;\\n      flex-direction: column;\\n    `,\\n    conversations: css`\\n      padding: 0 12px;\\n      flex: 1;\\n      overflow-y: auto;\\n    `,\\n    chat: css`\\n      height: 100%;\\n      width: 100%;\\n      max-width: 700px;\\n      margin: 0 auto;\\n      box-sizing: border-box;\\n      display: flex;\\n      flex-direction: column;\\n      padding: ${token.paddingLG}px;\\n      gap: 16px;\\n    `,\\n    messages: css`\\n      flex: 1;\\n    `,\\n    placeholder: css`\\n      padding-top: 32px;\\n    `,\\n    sender: css`\\n      box-shadow: ${token.boxShadow};\\n    `,\\n    logo: css`\\n      display: flex;\\n      height: 72px;\\n      align-items: center;\\n      justify-content: start;\\n      padding: 0 24px;\\n      box-sizing: border-box;\\n\\n      img {\\n        width: 24px;\\n        height: 24px;\\n        display: inline-block;\\n      }\\n\\n      span {\\n        display: inline-block;\\n        margin: 0 8px;\\n        font-weight: bold;\\n        color: ${token.colorText};\\n        font-size: 16px;\\n      }\\n    `,\\n    addBtn: css`\\n      background: #1677ff0f;\\n      border: 1px solid #1677ff34;\\n      width: calc(100% - 24px);\\n      margin: 0 12px 24px 12px;\\n    `,\\n  };\\n});\\n\\nconst placeholderPromptsItems: GetProp<typeof Prompts, 'items'> = [\\n  {\\n    key: '1',\\n    label: renderTitle(<FireOutlined style={{ color: '#FF4D4F' }} />, 'Hot Topics'),\\n    description: 'What are you interested in?',\\n    children: [\\n      {\\n        key: '1-1',\\n        description: `What's new in X?`,\\n      },\\n      {\\n        key: '1-2',\\n        description: `What's AGI?`,\\n      },\\n      {\\n        key: '1-3',\\n        description: `Where is the doc?`,\\n      },\\n    ],\\n  },\\n  {\\n    key: '2',\\n    label: renderTitle(<ReadOutlined style={{ color: '#1890FF' }} />, 'Design Guide'),\\n    description: 'How to design a good product?',\\n    children: [\\n      {\\n        key: '2-1',\\n        icon: <HeartOutlined />,\\n        description: `Know the well`,\\n      },\\n      {\\n        key: '2-2',\\n        icon: <SmileOutlined />,\\n        description: `Set the AI role`,\\n      },\\n      {\\n        key: '2-3',\\n        icon: <CommentOutlined />,\\n        description: `Express the feeling`,\\n      },\\n    ],\\n  },\\n];\\n\\nconst senderPromptsItems: GetProp<typeof Prompts, 'items'> = [\\n  {\\n    key: '1',\\n    description: 'Hot Topics',\\n    icon: <FireOutlined style={{ color: '#FF4D4F' }} />,\\n  },\\n  {\\n    key: '2',\\n    description: 'Design Guide',\\n    icon: <ReadOutlined style={{ color: '#1890FF' }} />,\\n  },\\n];\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    typing: { step: 5, interval: 20 },\\n    styles: {\\n      content: {\\n        borderRadius: 16,\\n      },\\n    },\\n  },\\n  local: {\\n    placement: 'end',\\n    variant: 'shadow',\\n  },\\n};\\n\\nconst Independent: React.FC = () => {\\n  // ==================== Style ====================\\n  const { styles } = useStyle();\\n\\n  // ==================== State ====================\\n  const [headerOpen, setHeaderOpen] = React.useState(false);\\n\\n  const [content, setContent] = React.useState('');\\n\\n  const [conversationsItems, setConversationsItems] = React.useState(defaultConversationsItems);\\n\\n  const [activeKey, setActiveKey] = React.useState(defaultConversationsItems[0].key);\\n\\n  const [attachedFiles, setAttachedFiles] = React.useState<GetProp<typeof Attachments, 'items'>>(\\n    [],\\n  );\\n\\n  // ==================== Runtime ====================\\n  const [agent] = useXAgent({\\n    request: async ({ message }, { onSuccess }) => {\\n      onSuccess(`Mock success return. You said: ${message}`);\\n    },\\n  });\\n\\n  const { onRequest, messages, setMessages } = useXChat({\\n    agent,\\n  });\\n\\n  useEffect(() => {\\n    if (activeKey !== undefined) {\\n      setMessages([]);\\n    }\\n  }, [activeKey]);\\n\\n  // ==================== Event ====================\\n  const onSubmit = (nextContent: string) => {\\n    if (!nextContent) return;\\n    onRequest(nextContent);\\n    setContent('');\\n  };\\n\\n  const onPromptsItemClick: GetProp<typeof Prompts, 'onItemClick'> = (info) => {\\n    onRequest(info.data.description as string);\\n  };\\n\\n  const onAddConversation = () => {\\n    setConversationsItems([\\n      ...conversationsItems,\\n      {\\n        key: `${conversationsItems.length}`,\\n        label: `New Conversation ${conversationsItems.length}`,\\n      },\\n    ]);\\n    setActiveKey(`${conversationsItems.length}`);\\n  };\\n\\n  const onConversationClick: GetProp<typeof Conversations, 'onActiveChange'> = (key) => {\\n    setActiveKey(key);\\n  };\\n\\n  const handleFileChange: GetProp<typeof Attachments, 'onChange'> = (info) =>\\n    setAttachedFiles(info.fileList);\\n\\n  // ==================== Nodes ====================\\n  const placeholderNode = (\\n    <Space direction=\\\"vertical\\\" size={16} className={styles.placeholder}>\\n      <Welcome\\n        variant=\\\"borderless\\\"\\n        icon=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\\\"\\n        title=\\\"Hello, I'm Ant Design X\\\"\\n        description=\\\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\\\"\\n        extra={\\n          <Space>\\n            <Button icon={<ShareAltOutlined />} />\\n            <Button icon={<EllipsisOutlined />} />\\n          </Space>\\n        }\\n      />\\n      <Prompts\\n        title=\\\"Do you want?\\\"\\n        items={placeholderPromptsItems}\\n        styles={{\\n          list: {\\n            width: '100%',\\n          },\\n          item: {\\n            flex: 1,\\n          },\\n        }}\\n        onItemClick={onPromptsItemClick}\\n      />\\n    </Space>\\n  );\\n\\n  const items: GetProp<typeof Bubble.List, 'items'> = messages.map(({ id, message, status }) => ({\\n    key: id,\\n    loading: status === 'loading',\\n    role: status === 'local' ? 'local' : 'ai',\\n    content: message,\\n  }));\\n\\n  const attachmentsNode = (\\n    <Badge dot={attachedFiles.length > 0 && !headerOpen}>\\n      <Button type=\\\"text\\\" icon={<PaperClipOutlined />} onClick={() => setHeaderOpen(!headerOpen)} />\\n    </Badge>\\n  );\\n\\n  const senderHeader = (\\n    <Sender.Header\\n      title=\\\"Attachments\\\"\\n      open={headerOpen}\\n      onOpenChange={setHeaderOpen}\\n      styles={{\\n        content: {\\n          padding: 0,\\n        },\\n      }}\\n    >\\n      <Attachments\\n        beforeUpload={() => false}\\n        items={attachedFiles}\\n        onChange={handleFileChange}\\n        placeholder={(type) =>\\n          type === 'drop'\\n            ? { title: 'Drop file here' }\\n            : {\\n                icon: <CloudUploadOutlined />,\\n                title: 'Upload files',\\n                description: 'Click or drag files to this area to upload',\\n              }\\n        }\\n      />\\n    </Sender.Header>\\n  );\\n\\n  const logoNode = (\\n    <div className={styles.logo}>\\n      <img\\n        src=\\\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\\\"\\n        draggable={false}\\n        alt=\\\"logo\\\"\\n      />\\n      <span>Ant Design X</span>\\n    </div>\\n  );\\n\\n  // ==================== Render =================\\n  return (\\n    <div className={styles.layout}>\\n      <div className={styles.menu}>\\n        {/* 🌟 Logo */}\\n        {logoNode}\\n        {/* 🌟 添加会话 */}\\n        <Button\\n          onClick={onAddConversation}\\n          type=\\\"link\\\"\\n          className={styles.addBtn}\\n          icon={<PlusOutlined />}\\n        >\\n          New Conversation\\n        </Button>\\n        {/* 🌟 会话管理 */}\\n        <Conversations\\n          items={conversationsItems}\\n          className={styles.conversations}\\n          activeKey={activeKey}\\n          onActiveChange={onConversationClick}\\n        />\\n      </div>\\n      <div className={styles.chat}>\\n        {/* 🌟 消息列表 */}\\n        <Bubble.List\\n          items={items.length > 0 ? items : [{ content: placeholderNode, variant: 'borderless' }]}\\n          roles={roles}\\n          className={styles.messages}\\n        />\\n        {/* 🌟 提示词 */}\\n        <Prompts items={senderPromptsItems} onItemClick={onPromptsItemClick} />\\n        {/* 🌟 输入框 */}\\n        <Sender\\n          value={content}\\n          header={senderHeader}\\n          onSubmit={onSubmit}\\n          onChange={setContent}\\n          prefix={attachmentsNode}\\n          loading={agent.isRequesting()}\\n          className={styles.sender}\\n        />\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default Independent;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/sender/demo/paste-image.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\\nimport { Attachments, AttachmentsProps, Sender } from '@ant-design/x';\\nimport { App, Button, Flex, type GetProp, type GetRef } from 'antd';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  const [open, setOpen] = React.useState(false);\\n  const [items, setItems] = React.useState<GetProp<AttachmentsProps, 'items'>>([]);\\n  const [text, setText] = React.useState('');\\n\\n  const attachmentsRef = React.useRef<GetRef<typeof Attachments>>(null);\\n\\n  const senderRef = React.useRef<GetRef<typeof Sender>>(null);\\n\\n  const senderHeader = (\\n    <Sender.Header\\n      title=\\\"Attachments\\\"\\n      styles={{\\n        content: {\\n          padding: 0,\\n        },\\n      }}\\n      open={open}\\n      onOpenChange={setOpen}\\n      forceRender\\n    >\\n      <Attachments\\n        ref={attachmentsRef}\\n        // Mock not real upload file\\n        beforeUpload={() => false}\\n        items={items}\\n        onChange={({ fileList }) => setItems(fileList)}\\n        placeholder={(type) =>\\n          type === 'drop'\\n            ? {\\n                title: 'Drop file here',\\n              }\\n            : {\\n                icon: <CloudUploadOutlined />,\\n                title: 'Upload files',\\n                description: 'Click or drag files to this area to upload',\\n              }\\n        }\\n        getDropContainer={() => senderRef.current?.nativeElement}\\n      />\\n    </Sender.Header>\\n  );\\n\\n  return (\\n    <Flex style={{ height: 220 }} align=\\\"end\\\">\\n      <Sender\\n        ref={senderRef}\\n        header={senderHeader}\\n        prefix={\\n          <Button\\n            type=\\\"text\\\"\\n            icon={<LinkOutlined />}\\n            onClick={() => {\\n              setOpen(!open);\\n            }}\\n          />\\n        }\\n        value={text}\\n        onChange={setText}\\n        onPasteFile={(_, files) => {\\n          for (const file of files) {\\n            attachmentsRef.current?.upload(file);\\n          }\\n          setOpen(true);\\n        }}\\n        onSubmit={() => {\\n          setItems([]);\\n          setText('');\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import React from 'react';\n\ntype Getter<T> = () => T;\ntype Setter<T> = (pre: T) => T;\n\nexport default function useSyncState<T>(defaultValue: T | Getter<T>) {\n  const [, forceUpdate] = React.useState(0);\n\n  const stateRef = React.useRef<T>(\n    typeof defaultValue === 'function' ? (defaultValue as Getter<T>)() : defaultValue,\n  );\n\n  const setState = React.useCallback((action: React.SetStateAction<T>) => {\n    stateRef.current =\n      typeof action === 'function' ? (action as Setter<T>)(stateRef.current) : action;\n\n    forceUpdate((prev) => prev + 1);\n  }, []);\n\n  const getState: Getter<T> = React.useCallback(() => stateRef.current, []);\n\n  return [stateRef.current, setState, getState] as const;\n}\n","import { Cascader, Flex } from 'antd';\nimport type { CascaderProps } from 'antd';\nimport classnames from 'classnames';\nimport { useEvent, useMergedState } from 'rc-util';\nimport React, { useState } from 'react';\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\nimport useStyle from './style';\nimport useActive from './useActive';\n\nexport type SuggestionItem = {\n  label: React.ReactNode;\n  value: string;\n\n  icon?: React.ReactNode;\n\n  children?: SuggestionItem[];\n\n  extra?: React.ReactNode;\n};\n\nexport interface RenderChildrenProps<T> {\n  onTrigger: (info?: T | false) => void;\n  onKeyDown: (e: React.KeyboardEvent) => void;\n}\n\nexport interface SuggestionProps<T = any> {\n  prefixCls?: string;\n  className?: string;\n  rootClassName?: string;\n  style?: React.CSSProperties;\n  children?: (props: RenderChildrenProps<T>) => React.ReactElement;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  items: SuggestionItem[] | ((info?: T) => SuggestionItem[]);\n  onSelect?: (value: string) => void;\n  block?: boolean;\n  styles?: Partial<Record<string, React.CSSProperties>>;\n  classNames?: Partial<Record<string, string>>;\n}\n\nfunction Suggestion<T = any>(props: SuggestionProps<T>) {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    children,\n    open,\n    onOpenChange,\n    items,\n    onSelect,\n    block,\n  } = props;\n\n  // ============================= MISC =============================\n  const { direction, getPrefixCls } = useXProviderContext();\n  const prefixCls = getPrefixCls('suggestion', customizePrefixCls);\n  const itemCls = `${prefixCls}-item`;\n\n  const isRTL = direction === 'rtl';\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('suggestion');\n\n  // ============================ Styles ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  // =========================== Trigger ============================\n  const [mergedOpen, setOpen] = useMergedState(false, {\n    value: open,\n  });\n  const [info, setInfo] = useState<T | undefined>();\n\n  const triggerOpen = (nextOpen: boolean) => {\n    setOpen(nextOpen);\n    onOpenChange?.(nextOpen);\n  };\n\n  const onTrigger: RenderChildrenProps<T>['onTrigger'] = useEvent((nextInfo) => {\n    if (nextInfo === false) {\n      triggerOpen(false);\n    } else {\n      setInfo(nextInfo);\n      triggerOpen(true);\n    }\n  });\n\n  const onClose = () => {\n    triggerOpen(false);\n  };\n\n  // ============================ Items =============================\n  const itemList = React.useMemo(\n    () => (typeof items === 'function' ? items(info) : items),\n    [items, info],\n  );\n\n  // =========================== Cascader ===========================\n  const optionRender: CascaderProps<SuggestionItem>['optionRender'] = (node) => {\n    return (\n      <Flex className={itemCls}>\n        {node.icon && <div className={`${itemCls}-icon`}>{node.icon}</div>}\n        {node.label}\n        {node.extra && <div className={`${itemCls}-extra`}>{node.extra}</div>}\n      </Flex>\n    );\n  };\n\n  const onInternalChange = (valuePath: string[]) => {\n    if (onSelect) {\n      onSelect(valuePath[valuePath.length - 1]);\n    }\n    triggerOpen(false);\n  };\n\n  // ============================= a11y =============================\n  const [activePath, onKeyDown] = useActive(itemList, mergedOpen, isRTL, onInternalChange, onClose);\n\n  // =========================== Children ===========================\n  const childNode = children?.({ onTrigger, onKeyDown });\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <Cascader\n      options={itemList}\n      open={mergedOpen}\n      value={activePath}\n      placement={isRTL ? 'topRight' : 'topLeft'}\n      onDropdownVisibleChange={(nextOpen) => {\n        if (!nextOpen) {\n          onClose();\n        }\n      }}\n      optionRender={optionRender}\n      rootClassName={classnames(rootClassName, prefixCls, hashId, cssVarCls, {\n        [`${prefixCls}-block`]: block,\n      })}\n      onChange={onInternalChange}\n      dropdownMatchSelectWidth={block}\n    >\n      <div\n        className={classnames(\n          prefixCls,\n          contextConfig.className,\n          rootClassName,\n          className,\n          `${prefixCls}-wrapper`,\n          hashId,\n          cssVarCls,\n        )}\n        style={{\n          ...contextConfig.style,\n          ...style,\n        }}\n      >\n        {childNode}\n      </div>\n    </Cascader>,\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  Suggestion.displayName = 'Suggestion';\n}\n\nexport default Suggestion;\n","\n  import '/home/runner/work/x/x/components/attachments/demo/_semantic.tsx?watch=parent';\n  export default \"import { CloudUploadOutlined } from '@ant-design/icons';\\nimport { Attachments, type AttachmentsProps } from '@ant-design/x';\\nimport { Divider, Flex } from 'antd';\\nimport React from 'react';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nconst placeholderLocales = {\\n  cn: { placeholder: '占位符' },\\n  en: {\\n    placeholder: 'Placeholder',\\n  },\\n};\\nconst withItemLocales = {\\n  cn: { list: '列表容器', item: '列表项' },\\n  en: {\\n    list: 'List container',\\n    item: 'List item',\\n  },\\n};\\n\\nconst items: AttachmentsProps['items'] = Array.from({ length: 3 }).map((_, index) => ({\\n  uid: String(index),\\n  name: `file-${index}.jpg`,\\n  status: 'done',\\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n}));\\n\\nconst App: React.FC = () => {\\n  const [placeholderLocale] = useLocale(placeholderLocales);\\n  const [withItemLocale] = useLocale(withItemLocales);\\n\\n  return (\\n    <Flex vertical>\\n      <SemanticPreview semantics={[{ name: 'placeholder', desc: placeholderLocale.placeholder }]}>\\n        <Attachments\\n          placeholder={{\\n            icon: <CloudUploadOutlined />,\\n            title: 'Upload File',\\n            description: 'Drag or click to upload file.',\\n          }}\\n        />\\n      </SemanticPreview>\\n      <Divider style={{ margin: 0, padding: 0 }} />\\n      <SemanticPreview\\n        semantics={[\\n          { name: 'list', desc: withItemLocale.list },\\n          { name: 'item', desc: withItemLocale.item },\\n        ]}\\n      >\\n        <Attachments items={items} />\\n      </SemanticPreview>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { ClearOutlined } from '@ant-design/icons';\nimport type { ButtonProps } from 'antd';\nimport * as React from 'react';\nimport ActionButton from './ActionButton';\n\nfunction ClearButton(props: ButtonProps, ref: React.Ref<HTMLButtonElement>) {\n  return <ActionButton icon={<ClearOutlined />} {...props} action=\"onClear\" ref={ref} />;\n}\n\nexport default React.forwardRef(ClearButton);\n","\n  import '/home/runner/work/x/x/components/sender/demo/_semantic.tsx?watch=parent';\n  export default \"import { SmileOutlined } from '@ant-design/icons';\\nimport { Sender } from '@ant-design/x';\\nimport { Button, Divider, Flex } from 'antd';\\nimport React from 'react';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nconst locales = {\\n  cn: {\\n    prefix: '前缀',\\n    input: '输入框',\\n    actions: '操作列表',\\n  },\\n  en: {\\n    prefix: 'Prefix',\\n    input: 'Input',\\n    actions: 'Action List',\\n  },\\n};\\n\\nconst headerLocales = {\\n  cn: {\\n    header: '头部',\\n    content: '内容',\\n  },\\n  en: {\\n    header: 'Header',\\n    content: 'Content',\\n  },\\n};\\n\\nconst App: React.FC = () => {\\n  const [locale] = useLocale(locales);\\n  const [headerLocale] = useLocale(headerLocales);\\n\\n  return (\\n    <Flex vertical>\\n      {/* Basic */}\\n      <SemanticPreview\\n        semantics={[\\n          { name: 'prefix', desc: locale.prefix },\\n          { name: 'input', desc: locale.input },\\n          { name: 'actions', desc: locale.actions },\\n        ]}\\n      >\\n        <Sender prefix={<Button type=\\\"text\\\" icon={<SmileOutlined />} />} />\\n      </SemanticPreview>\\n\\n      <Divider style={{ margin: 0, padding: 0 }} />\\n\\n      {/* With Header */}\\n      <SemanticPreview\\n        semantics={[\\n          { name: 'header', desc: headerLocale.header },\\n          { name: 'content', desc: headerLocale.content },\\n        ]}\\n      >\\n        {(injectProps) => (\\n          <Sender\\n            header={\\n              <Sender.Header open title=\\\"Header\\\" {...injectProps}>\\n                Content\\n              </Sender.Header>\\n            }\\n          />\\n        )}\\n      </SemanticPreview>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { startTransition, useState } from 'react';\n\nconst useLayoutState: typeof useState = <S>(\n  ...args: Parameters<typeof useState<S>>\n): ReturnType<typeof useState<S>> => {\n  const [state, setState] = useState<S>(...args);\n\n  const setLayoutState: typeof setState = (...setStateArgs) => {\n    startTransition(() => {\n      setState(...setStateArgs);\n    });\n  };\n\n  return [state, setLayoutState];\n};\n\nexport default useLayoutState;\n","import { ConfigProvider } from 'antd';\nimport React from 'react';\n\nexport const defaultPrefixCls = 'ant';\n\nfunction useXProviderContext() {\n  const { getPrefixCls, direction, csp, iconPrefixCls, theme } = React.useContext(\n    ConfigProvider.ConfigContext,\n  );\n\n  return {\n    theme,\n    getPrefixCls,\n    direction,\n    csp,\n    iconPrefixCls,\n  };\n}\n\nexport default useXProviderContext;\n","import React from 'react';\n\nexport default function AudioIcon() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      //xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <title>audio</title>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path\n          d=\"M14.1178571,4.0125 C14.225,4.11964286 14.2857143,4.26428571 14.2857143,4.41607143 L14.2857143,15.4285714 C14.2857143,15.7446429 14.0303571,16 13.7142857,16 L2.28571429,16 C1.96964286,16 1.71428571,15.7446429 1.71428571,15.4285714 L1.71428571,0.571428571 C1.71428571,0.255357143 1.96964286,0 2.28571429,0 L9.86964286,0 C10.0214286,0 10.1678571,0.0607142857 10.275,0.167857143 L14.1178571,4.0125 Z M10.7315824,7.11216117 C10.7428131,7.15148751 10.7485063,7.19218979 10.7485063,7.23309113 L10.7485063,8.07742614 C10.7484199,8.27364959 10.6183424,8.44607275 10.4296853,8.50003683 L8.32984514,9.09986306 L8.32984514,11.7071803 C8.32986605,12.5367078 7.67249692,13.217028 6.84345686,13.2454634 L6.79068592,13.2463395 C6.12766108,13.2463395 5.53916361,12.8217001 5.33010655,12.1924966 C5.1210495,11.563293 5.33842118,10.8709227 5.86959669,10.4741173 C6.40077221,10.0773119 7.12636292,10.0652587 7.67042486,10.4442027 L7.67020842,7.74937024 L7.68449368,7.74937024 C7.72405122,7.59919041 7.83988806,7.48101083 7.98924584,7.4384546 L10.1880418,6.81004755 C10.42156,6.74340323 10.6648954,6.87865515 10.7315824,7.11216117 Z M9.60714286,1.31785714 L12.9678571,4.67857143 L9.60714286,4.67857143 L9.60714286,1.31785714 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </svg>\n  );\n}\n","\n  import '/home/runner/work/x/x/components/attachments/demo/files.tsx?watch=parent';\n  export default \"import { Attachments } from '@ant-design/x';\\nimport { App, Flex } from 'antd';\\nimport React from 'react';\\n\\nconst Demo = () => {\\n  const filesList = [\\n    {\\n      uid: '1',\\n      name: 'excel-file.xlsx',\\n      size: 111111,\\n    },\\n    {\\n      uid: '2',\\n      name: 'word-file.docx',\\n      size: 222222,\\n    },\\n    {\\n      uid: '3',\\n      name: 'image-file.png',\\n      size: 333333,\\n    },\\n    {\\n      uid: '4',\\n      name: 'pdf-file.pdf',\\n      size: 444444,\\n    },\\n    {\\n      uid: '5',\\n      name: 'ppt-file.pptx',\\n      size: 555555,\\n    },\\n    {\\n      uid: '6',\\n      name: 'video-file.mp4',\\n      size: 666666,\\n    },\\n    {\\n      uid: '7',\\n      name: 'audio-file.mp3',\\n      size: 777777,\\n    },\\n    {\\n      uid: '8',\\n      name: 'zip-file.zip',\\n      size: 888888,\\n    },\\n    {\\n      uid: '9',\\n      name: 'markdown-file.md',\\n      size: 999999,\\n      description: 'Custom description here',\\n    },\\n    {\\n      uid: '10',\\n      name: 'image-file.png',\\n      thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n      size: 123456,\\n    },\\n  ];\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      {filesList.map((file, index) => (\\n        <Attachments.FileCard key={index} item={file} />\\n      ))}\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/conversations/demo/basic.tsx?watch=parent';\n  export default \"import { Conversations } from '@ant-design/x';\\nimport type { ConversationsProps } from '@ant-design/x';\\nimport { type GetProp, theme } from 'antd';\\nimport React from 'react';\\n\\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 4 }).map((_, index) => ({\\n  key: `item${index + 1}`,\\n  label: `Conversation Item ${index + 1}`,\\n  disabled: index === 3,\\n}));\\n\\nexport default () => {\\n  const { token } = theme.useToken();\\n\\n  // Customize the style of the container\\n  const style = {\\n    width: 256,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n  };\\n\\n  return <Conversations items={items} defaultActiveKey=\\\"item1\\\" style={style} />;\\n};\\n\";;\n  ","import React from 'react';\nimport type { Conversation, Groupable } from '../interface';\nimport type { ConversationsProps } from '..';\n\n/**\n * 🔥 Only for handling ungrouped data. Do not use it for any other purpose! 🔥\n */\nconst __UNGROUPED = '__ungrouped';\n\ntype GroupList = {\n  data: Conversation[];\n  name?: string;\n  title?: Groupable['title'];\n}[];\n\ntype GroupMap = Record<string, Conversation[]>;\n\nconst useGroupable = (\n  groupable?: ConversationsProps['groupable'],\n  items: Conversation[] = [],\n): [groupList: GroupList, enableGroup: boolean] => {\n  const [enableGroup, sort, title] = React.useMemo(() => {\n    if (!groupable) {\n      return [false, undefined, undefined];\n    }\n\n    let baseConfig: Groupable = {\n      sort: undefined,\n      title: undefined,\n    };\n\n    if (typeof groupable === 'object') {\n      baseConfig = { ...baseConfig, ...groupable };\n    }\n\n    return [true, baseConfig.sort, baseConfig.title];\n  }, [groupable]);\n\n  return React.useMemo(() => {\n    // 未开启分组模式直接返回\n    if (!enableGroup) {\n      const groupList = [\n        {\n          name: __UNGROUPED,\n          data: items,\n          title: undefined,\n        },\n      ];\n\n      return [groupList, enableGroup];\n    }\n\n    // 1. 将 data 做数据分组，填充 groupMap\n    const groupMap = items.reduce<GroupMap>((acc, item) => {\n      const group = item.group || __UNGROUPED;\n\n      if (!acc[group]) {\n        acc[group] = [];\n      }\n\n      acc[group].push(item);\n\n      return acc;\n    }, {});\n\n    // 2. 存在 sort 时对 groupKeys 排序\n    const groupKeys = sort ? Object.keys(groupMap).sort(sort) : Object.keys(groupMap);\n\n    // 3. groupMap 转 groupList\n    const groupList = groupKeys.map((group) => ({\n      name: group === __UNGROUPED ? undefined : group,\n      title,\n      data: groupMap[group],\n    }));\n\n    return [groupList, enableGroup];\n  }, [items, groupable]);\n};\n\nexport default useGroupable;\n","import { XProvider } from '@ant-design/x';\nimport { Col, Flex, Row, Tag, Typography, theme } from 'antd';\nimport { createStyles, css } from 'antd-style';\nimport classnames from 'classnames';\nimport React from 'react';\n\nconst MARK_BORDER_SIZE = 2;\n\nconst useStyle = createStyles(({ token }, markPos: [number, number, number, number]) => ({\n  container: css`\n    position: relative;\n  `,\n  colWrap: css`\n    border-right: 1px solid ${token.colorBorderSecondary};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: ${token.paddingMD}px;\n    overflow: hidden;\n  `,\n  listWrap: css`\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  `,\n  listItem: css`\n    cursor: pointer;\n    padding: ${token.paddingSM}px;\n    transition: background-color ${token.motionDurationFast} ease;\n    &:hover {\n      background-color: ${token.controlItemBgHover};\n    }\n    &:not(:first-of-type) {\n      border-top: 1px solid ${token.colorBorderSecondary};\n    }\n  `,\n  marker: css`\n    position: absolute;\n    border: ${MARK_BORDER_SIZE}px solid ${token.colorWarning};\n    box-sizing: border-box;\n    z-index: 999999;\n    box-shadow: 0 0 0 1px #fff;\n    pointer-events: none;\n    inset-inline-start: ${markPos[0] - MARK_BORDER_SIZE}px;\n    top: ${markPos[1] - MARK_BORDER_SIZE}px;\n    width: ${markPos[2] + MARK_BORDER_SIZE * 2}px;\n    height: ${markPos[3] + MARK_BORDER_SIZE * 2}px;\n  `,\n  markerActive: css`\n    opacity: 1;\n  `,\n  markerNotActive: css`\n    opacity: 0;\n  `,\n  markerMotion: css`\n    transition:\n      opacity ${token.motionDurationSlow} ease,\n      all ${token.motionDurationSlow} ease;\n  `,\n  markerNotMotion: css`\n    transition: opacity ${token.motionDurationSlow} ease;\n  `,\n}));\n\nexport interface SemanticPreviewProps {\n  semantics: { name: string; desc: string; version?: string }[];\n  children: React.ReactElement | ((injectProps: any) => React.ReactElement);\n  height?: number;\n}\n\nconst SemanticPreview: React.FC<SemanticPreviewProps> = (props) => {\n  const { semantics = [], children, height } = props;\n  const { token } = theme.useToken();\n\n  // ======================= Semantic =======================\n  const getMarkClassName = React.useCallback(\n    (semanticKey: string) => `semantic-mark-${semanticKey}`,\n    [],\n  );\n\n  const semanticClassNames = React.useMemo<Record<string, string>>(() => {\n    const classNames: Record<string, string> = {};\n\n    semantics.forEach((semantic) => {\n      classNames[semantic.name] = getMarkClassName(semantic.name);\n    });\n\n    return classNames;\n  }, [semantics]);\n\n  const injectProps = {\n    classNames: semanticClassNames,\n  };\n\n  const cloneNode =\n    typeof children === 'function'\n      ? children(injectProps)\n      : React.cloneElement(children, injectProps);\n\n  // ======================== Hover =========================\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  const timerRef = React.useRef<ReturnType<typeof setTimeout>>(null);\n\n  const [positionMotion, setPositionMotion] = React.useState<boolean>(false);\n  const [hoverSemantic, setHoverSemantic] = React.useState<string | null>(null);\n  const [markPos, setMarkPos] = React.useState<[number, number, number, number]>([0, 0, 0, 0]);\n\n  const { styles } = useStyle(markPos);\n\n  React.useEffect(() => {\n    if (hoverSemantic) {\n      const targetClassName = getMarkClassName(hoverSemantic);\n      const targetElement = containerRef.current?.querySelector<HTMLElement>(`.${targetClassName}`);\n      const containerRect = containerRef.current?.getBoundingClientRect();\n      const targetRect = targetElement?.getBoundingClientRect();\n      setMarkPos([\n        (targetRect?.left || 0) - (containerRect?.left || 0),\n        (targetRect?.top || 0) - (containerRect?.top || 0),\n        targetRect?.width || 0,\n        targetRect?.height || 0,\n      ]);\n      timerRef.current = setTimeout(() => {\n        setPositionMotion(true);\n      }, 10);\n    } else {\n      timerRef.current = setTimeout(() => {\n        setPositionMotion(false);\n      }, 500);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, [hoverSemantic]);\n\n  // ======================== Render ========================\n  return (\n    <div className={classnames(styles.container)} ref={containerRef}>\n      <Row style={{ minHeight: height }}>\n        <Col span={16} className={classnames(styles.colWrap)}>\n          <XProvider theme={{ token: { motion: false } }}>{cloneNode}</XProvider>\n        </Col>\n        <Col span={8}>\n          <ul className={classnames(styles.listWrap)}>\n            {semantics.map<React.ReactNode>((semantic) => (\n              <li\n                key={semantic.name}\n                className={classnames(styles.listItem)}\n                onMouseEnter={() => setHoverSemantic(semantic.name)}\n                onMouseLeave={() => setHoverSemantic(null)}\n              >\n                <Flex vertical gap=\"small\">\n                  <Flex gap=\"small\" align=\"center\">\n                    <Typography.Title level={5} style={{ margin: 0 }}>\n                      {semantic.name}\n                    </Typography.Title>\n                    {semantic.version && <Tag color=\"blue\">{semantic.version}</Tag>}\n                  </Flex>\n                  <Typography.Paragraph style={{ margin: 0, fontSize: token.fontSizeSM }}>\n                    {semantic.desc}\n                  </Typography.Paragraph>\n                </Flex>\n              </li>\n            ))}\n          </ul>\n        </Col>\n      </Row>\n      <div\n        className={classnames(\n          styles.marker,\n          hoverSemantic ? styles.markerActive : styles.markerNotActive,\n          positionMotion ? styles.markerMotion : styles.markerNotMotion,\n        )}\n      />\n    </div>\n  );\n};\n\nexport default SemanticPreview;\n","\n  import '/home/runner/work/x/x/components/conversations/demo/controlled-mode.tsx?watch=parent';\n  export default \"import { Conversations, type ConversationsProps } from '@ant-design/x';\\nimport { Button, Flex, type GetProp, theme } from 'antd';\\nimport React, { useState } from 'react';\\n\\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 3 }).map((_, index) => ({\\n  key: `item${index + 1}`,\\n  label: `Conversation Item ${index + 1}`,\\n}));\\n\\nconst App = () => {\\n  const [activeKey, setActiveKey] = useState<string>('item1');\\n\\n  const { token } = theme.useToken();\\n\\n  // Customize the style of the container\\n  const style = {\\n    width: 256,\\n    background: token.colorBgContainer,\\n    borderRadius: token.borderRadius,\\n  };\\n\\n  return (\\n    <Flex vertical gap=\\\"small\\\" align=\\\"flex-start\\\">\\n      <Conversations\\n        activeKey={activeKey}\\n        onActiveChange={(v) => setActiveKey(v)}\\n        items={items}\\n        style={style}\\n      />\\n\\n      <Flex gap=\\\"small\\\">\\n        <Button\\n          onClick={() => {\\n            setActiveKey('item1');\\n          }}\\n        >\\n          Active First\\n        </Button>\\n        <Button\\n          onClick={() => {\\n            setActiveKey('item3');\\n          }}\\n        >\\n          Active Last\\n        </Button>\\n      </Flex>\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/debug.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Button, Divider, Flex } from 'antd';\\nimport { createStyles } from 'antd-style';\\nimport React from 'react';\\nimport type { BubbleDataType } from '../BubbleList';\\n\\nconst useStyle = createStyles(({ css, token }) => ({\\n  container: css`\\n    display: flex;\\n    width: 100%;\\n    flex-direction: column;\\n    gap: ${token.padding}px;\\n  `,\\n  content: css`\\n    background-color: ${token.colorPrimaryBg};\\n  `,\\n  footer: css`\\n    background-color: ${token.colorBgTextHover};\\n  `,\\n  header: css`\\n    background-color: ${token.colorBgTextHover};\\n  `,\\n  avatar: css`\\n    background-color: ${token.colorBgTextHover};\\n  `,\\n  block: css`\\n    background-color: ${token.colorBgTextHover};\\n  `,\\n  fixedWidthBlock: css`\\n    width: 1000px;\\n    background-color: ${token.colorBgTextHover};\\n  `,\\n}));\\n\\nconst App = () => {\\n  const { styles } = useStyle();\\n  const [count, setCount] = React.useState(6);\\n  const [markedIndex, setMarkedIndex] = React.useState<number | null>(null);\\n  const listRef = React.useRef<React.ElementRef<typeof Bubble.List>>(null);\\n\\n  const customizationProps: BubbleProps = {\\n    header: 'header',\\n    footer: <div>footer</div>,\\n    avatar: {\\n      src: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp',\\n    },\\n    classNames: {\\n      content: styles.content,\\n      footer: styles.footer,\\n      header: styles.header,\\n      avatar: styles.avatar,\\n    },\\n  };\\n\\n  const bubbleDict: Record<'string' | 'longString' | 'block' | 'fixedWidthBlock', BubbleProps> = {\\n    string: {\\n      content: 'string bubble',\\n      variant: 'filled',\\n      shape: 'corner',\\n    },\\n    longString: {\\n      content:\\n        'longgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg',\\n      variant: 'borderless',\\n    },\\n    block: {\\n      content: (\\n        <div className={styles.block}>\\n          block block block block block block block block block block block block block block block\\n          block block block block block block block block block block\\n        </div>\\n      ),\\n      variant: 'outlined',\\n      shape: 'round',\\n    },\\n    fixedWidthBlock: {\\n      content: <div className={styles.fixedWidthBlock}>fixed width content</div>,\\n      variant: 'shadow',\\n    },\\n  };\\n\\n  const roles = (bubbleData: BubbleDataType, index: number) => {\\n    const commonProps = {\\n      avatar: customizationProps.avatar,\\n      footer: <span># {index}</span>,\\n      header: bubbleData.role,\\n      styles: {\\n        content: {\\n          cursor: 'pointer',\\n          background: markedIndex === index ? '#e6f4ff' : undefined,\\n        },\\n      },\\n      onClick: () => setMarkedIndex((current) => (current === index ? null : index)),\\n    };\\n    switch (bubbleData.role) {\\n      case 'ai':\\n        return {\\n          placement: 'start' as const,\\n          typing: { step: 5, interval: 20 },\\n          style: {\\n            maxWidth: 600,\\n          },\\n          ...commonProps,\\n        };\\n      case 'user':\\n        return {\\n          placement: 'end' as const,\\n          ...commonProps,\\n        };\\n      default:\\n        return commonProps;\\n    }\\n  };\\n\\n  return (\\n    <div className={styles.container}>\\n      <Divider>Basic</Divider>\\n      <Bubble {...bubbleDict.string} />\\n      <Bubble {...bubbleDict.longString} />\\n      <Bubble {...bubbleDict.block} />\\n      <Bubble {...bubbleDict.fixedWidthBlock} />\\n      <Divider>Basic placement: end</Divider>\\n      <Bubble {...bubbleDict.string} placement=\\\"end\\\" />\\n      <Bubble {...bubbleDict.longString} placement=\\\"end\\\" />\\n      <Bubble {...bubbleDict.block} placement=\\\"end\\\" />\\n      <Bubble {...bubbleDict.fixedWidthBlock} placement=\\\"end\\\" />\\n      <Divider>Custom</Divider>\\n      <Bubble {...customizationProps} {...bubbleDict.string} />\\n      <Bubble {...customizationProps} {...bubbleDict.longString} />\\n      <Bubble {...customizationProps} {...bubbleDict.block} />\\n      <Bubble {...customizationProps} {...bubbleDict.fixedWidthBlock} />\\n      <Divider>Custom placement: end</Divider>\\n      <Bubble {...customizationProps} {...bubbleDict.string} placement=\\\"end\\\" />\\n      <Bubble {...customizationProps} {...bubbleDict.longString} placement=\\\"end\\\" />\\n      <Bubble {...customizationProps} {...bubbleDict.block} placement=\\\"end\\\" />\\n      <Bubble {...customizationProps} {...bubbleDict.fixedWidthBlock} placement=\\\"end\\\" />\\n      <Divider>List</Divider>\\n      <Bubble.List\\n        items={[\\n          {\\n            ...bubbleDict.string,\\n            ...customizationProps,\\n          },\\n          {\\n            ...bubbleDict.longString,\\n            ...customizationProps,\\n            placement: 'end',\\n          },\\n          {\\n            ...bubbleDict.block,\\n            ...customizationProps,\\n          },\\n          {\\n            ...bubbleDict.fixedWidthBlock,\\n            ...customizationProps,\\n            placement: 'end',\\n          },\\n        ]}\\n      />\\n      <Divider>List with roles</Divider>\\n      <Flex gap=\\\"small\\\" style={{ alignSelf: 'flex-end' }}>\\n        <Button\\n          onClick={() => {\\n            setCount((i) => i + 1);\\n          }}\\n        >\\n          Add Bubble\\n        </Button>\\n\\n        <Button\\n          onClick={() => {\\n            listRef.current?.scrollTo({ key: 0, block: 'nearest' });\\n          }}\\n        >\\n          Scroll To First\\n        </Button>\\n\\n        <Button\\n          disabled={markedIndex === null}\\n          onClick={() =>\\n            markedIndex !== null &&\\n            listRef.current?.scrollTo({ key: markedIndex, block: 'nearest' })\\n          }\\n        >\\n          Scroll To Marked index: {markedIndex}\\n        </Button>\\n      </Flex>\\n      <Bubble.List\\n        ref={listRef}\\n        style={{ maxHeight: 300 }}\\n        roles={roles}\\n        items={Array.from({ length: count }).map((_, i) => {\\n          const isAI = !!(i % 2);\\n          const content = isAI ? bubbleDict.longString.content : bubbleDict.block.content;\\n          const variant = isAI ? bubbleDict.longString.variant : bubbleDict.block.variant;\\n\\n          return {\\n            key: i,\\n            role: isAI ? 'ai' : 'user',\\n            content,\\n            variant,\\n          };\\n        })}\\n      />\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import classNames from 'classnames';\nimport { useEvent } from 'rc-util';\nimport pickAttrs from 'rc-util/lib/pickAttrs';\nimport * as React from 'react';\nimport { useXProviderContext } from '../x-provider';\nimport Bubble, { BubbleContext } from './Bubble';\nimport type { BubbleRef } from './Bubble';\nimport useDisplayData from './hooks/useDisplayData';\nimport useListData from './hooks/useListData';\nimport type { BubbleProps } from './interface';\nimport useStyle from './style';\n\nexport interface BubbleListRef {\n  nativeElement: HTMLDivElement;\n  scrollTo: (info: {\n    offset?: number;\n    key?: string | number;\n    behavior?: ScrollBehavior;\n    block?: ScrollLogicalPosition;\n  }) => void;\n}\n\nexport type BubbleDataType = BubbleProps & {\n  key?: string | number;\n  role?: string;\n};\n\nexport type RoleType = Partial<Omit<BubbleProps, 'content'>>;\n\nexport type RolesType = Record<string, RoleType> | ((bubbleDataP: BubbleDataType, index: number) => RoleType);\n\nexport interface BubbleListProps extends React.HTMLAttributes<HTMLDivElement> {\n  prefixCls?: string;\n  rootClassName?: string;\n  items?: BubbleDataType[];\n  autoScroll?: boolean;\n  roles?: RolesType;\n}\n\nconst TOLERANCE = 1;\n\nconst BubbleList: React.ForwardRefRenderFunction<BubbleListRef, BubbleListProps> = (props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName,\n    className,\n    items,\n    autoScroll = true,\n    roles,\n    ...restProps\n  } = props;\n  const domProps = pickAttrs(restProps, {\n    attr: true,\n    aria: true,\n  });\n\n  // ============================= Refs =============================\n  const listRef = React.useRef<HTMLDivElement>(null);\n\n  const bubbleRefs = React.useRef<Record<string, BubbleRef>>({});\n\n  // ============================ Prefix ============================\n  const { getPrefixCls } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('bubble', customizePrefixCls);\n  const listPrefixCls = `${prefixCls}-list`;\n\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  // ============================ Typing ============================\n  const [initialized, setInitialized] = React.useState(false);\n\n  React.useEffect(() => {\n    setInitialized(true);\n    return () => {\n      setInitialized(false);\n    };\n  }, []);\n\n  // ============================= Data =============================\n  const mergedData = useListData(items, roles);\n\n  const [displayData, onTypingComplete] = useDisplayData(mergedData);\n\n  // ============================ Scroll ============================\n  // Is current scrollTop at the end. User scroll will make this false.\n  const [scrollReachEnd, setScrollReachEnd] = React.useState(true);\n\n  const [updateCount, setUpdateCount] = React.useState(0);\n\n  const onInternalScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    const target = e.target as HTMLElement;\n\n    setScrollReachEnd(\n      target.scrollHeight - Math.abs(target.scrollTop) - target.clientHeight <= TOLERANCE,\n    );\n  };\n\n  React.useEffect(() => {\n    if (autoScroll && listRef.current && scrollReachEnd) {\n      listRef.current.scrollTo({\n        top: listRef.current.scrollHeight,\n      });\n    }\n  }, [updateCount]);\n\n  // Always scroll to bottom when data change\n  React.useEffect(() => {\n    if (autoScroll) {\n      // New date come, the origin last one is the second last one\n      const lastItemKey = displayData[displayData.length - 2]?.key;\n      const bubbleInst = bubbleRefs.current[lastItemKey!];\n\n      // Auto scroll if last 2 item is visible\n      if (bubbleInst) {\n        const { nativeElement } = bubbleInst;\n        const { top, bottom } = nativeElement.getBoundingClientRect();\n        const { top: listTop, bottom: listBottom } = listRef.current!.getBoundingClientRect();\n\n        const isVisible = top < listBottom && bottom > listTop;\n        if (isVisible) {\n          setUpdateCount((c) => c + 1);\n          setScrollReachEnd(true);\n        }\n      }\n    }\n  }, [displayData.length]);\n\n  // ========================== Outer Ref ===========================\n  React.useImperativeHandle(ref, () => ({\n    nativeElement: listRef.current!,\n    scrollTo: ({ key, offset, behavior = 'smooth', block }) => {\n      if (typeof offset === 'number') {\n        // Offset scroll\n        listRef.current!.scrollTo({\n          top: offset,\n          behavior,\n        });\n      } else if (key !== undefined) {\n        // Key scroll\n        const bubbleInst = bubbleRefs.current[key];\n\n        if (bubbleInst) {\n          // Block current auto scrolling\n          const index = displayData.findIndex((dataItem) => dataItem.key === key);\n          setScrollReachEnd(index === displayData.length - 1);\n\n          // Do native scroll\n          bubbleInst.nativeElement.scrollIntoView({\n            behavior,\n            block,\n          });\n        }\n      }\n    },\n  }));\n\n  // =========================== Context ============================\n  // When bubble content update, we try to trigger `autoScroll` for sync\n  const onBubbleUpdate = useEvent(() => {\n    if (autoScroll) {\n      setUpdateCount((c) => c + 1);\n    }\n  });\n\n  const context = React.useMemo(\n    () => ({\n      onUpdate: onBubbleUpdate,\n    }),\n    [],\n  );\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <BubbleContext.Provider value={context}>\n      <div\n        {...domProps}\n        className={classNames(listPrefixCls, rootClassName, className, hashId, cssVarCls, {\n          [`${listPrefixCls}-reach-end`]: scrollReachEnd,\n        })}\n        ref={listRef}\n        onScroll={onInternalScroll}\n      >\n        {displayData.map(({ key, ...bubble }) => (\n          <Bubble\n            {...bubble}\n            key={key}\n            ref={(node) => {\n              if (node) {\n                bubbleRefs.current[key] = node;\n              } else {\n                delete bubbleRefs.current[key];\n              }\n            }}\n            typing={initialized ? bubble.typing : false}\n            onTypingComplete={() => {\n              bubble.onTypingComplete?.();\n              onTypingComplete(key);\n            }}\n          />\n        ))}\n      </div>\n    </BubbleContext.Provider>,\n  );\n};\n\nconst ForwardBubbleList = React.forwardRef(BubbleList);\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardBubbleList.displayName = 'BubbleList';\n}\n\nexport default ForwardBubbleList;\n","import * as React from 'react';\n\nimport useLocale from '../../../hooks/useLocale';\nimport Link from '../../../theme/common/Link';\n\ntype LinkProps = Parameters<typeof Link>[0];\n\nexport interface LocaleLinkProps extends LinkProps {\n  sourceType: 'a' | 'Link';\n}\n\nconst LocaleLink: React.FC<React.PropsWithChildren<LocaleLinkProps>> = ({\n  sourceType,\n  to,\n  ...props\n}) => {\n  const Component = sourceType === 'a' ? 'a' : Link;\n\n  const [, localeType] = useLocale();\n\n  const localeTo = React.useMemo(() => {\n    if (!to || typeof to !== 'string') {\n      return to;\n    }\n\n    // Auto locale switch\n    const cells = to.match(/(\\/[^#]*)(#.*)?/);\n    if (cells) {\n      let path = cells[1].replace(/\\/$/, '');\n      const hash = cells[2] || '';\n\n      if (localeType === 'cn' && !path.endsWith('-cn')) {\n        path = `${path}-cn`;\n      } else if (localeType === 'en' && path.endsWith('-cn')) {\n        path = path.replace(/-cn$/, '');\n      }\n\n      return `${path}${hash}`;\n    }\n\n    return to;\n  }, [to]);\n\n  const linkProps: LocaleLinkProps = {\n    ...props,\n  } as LocaleLinkProps;\n\n  if (to) {\n    linkProps.to = localeTo;\n  }\n\n  return <Component {...linkProps} />;\n};\n\nexport default LocaleLink;\n","import { ConfigProvider as AntdConfigProvider } from 'antd';\nimport React from 'react';\n\nimport XProviderContext from './context';\nimport useXProviderContext, { defaultPrefixCls } from './hooks/use-x-provider-context';\n\nimport type { ConfigProviderProps as AntdConfigProviderProps } from 'antd/es/config-provider';\nimport type { XProviderProps } from './context';\n\nconst XProvider: React.FC<XProviderProps & AntdConfigProviderProps> = (props) => {\n  const {\n    attachments,\n    bubble,\n    conversations,\n    prompts,\n    sender,\n    suggestion,\n    thoughtChain,\n    welcome,\n    theme,\n    ...antdConfProps\n  } = props;\n\n  const { theme: parentTheme } = useXProviderContext();\n\n  const xProviderProps = React.useMemo(() => {\n    return {\n      attachments,\n      bubble,\n      conversations,\n      prompts,\n      sender,\n      suggestion,\n      thoughtChain,\n      welcome,\n    };\n  }, [attachments, bubble, conversations, prompts, sender, suggestion, thoughtChain, welcome]);\n\n  const mergedTheme = React.useMemo(() => {\n    const concatTheme = {\n      ...parentTheme,\n      ...theme,\n    };\n\n    return concatTheme;\n  }, [parentTheme, theme]);\n\n  return (\n    <XProviderContext.Provider value={xProviderProps}>\n      <AntdConfigProvider\n        {...antdConfProps}\n        // Note:  we can not set `cssVar` by default.\n        //        Since when developer not wrap with XProvider,\n        //        the generate css is still using css var but no css var injected.\n        // Origin comment: antdx enable cssVar by default, and antd v6 will enable cssVar by default\n        // theme={{ cssVar: true, ...antdConfProps?.theme }}\n        theme={mergedTheme}\n      />\n    </XProviderContext.Provider>\n  );\n};\n\nexport { useXProviderContext, defaultPrefixCls };\n\nexport type { XProviderProps };\n\nif (process.env.NODE_ENV !== 'production') {\n  XProvider.displayName = 'XProvider';\n}\n\nexport default XProvider;\n","\n  import '/home/runner/work/x/x/components/sender/demo/actions.tsx?watch=parent';\n  export default \"import { OpenAIOutlined } from '@ant-design/icons';\\nimport { Sender } from '@ant-design/x';\\nimport { App, Space, Spin, Typography } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const [loading, setLoading] = React.useState(false);\\n  const [value, setValue] = React.useState<string>('');\\n\\n  const { message } = App.useApp();\\n\\n  React.useEffect(() => {\\n    if (loading) {\\n      const timer = setTimeout(() => {\\n        setLoading(false);\\n        setValue('');\\n        message.success('Send message successfully!');\\n      }, 2000);\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }\\n  }, [loading]);\\n\\n  return (\\n    <Sender\\n      submitType=\\\"shiftEnter\\\"\\n      value={value}\\n      loading={loading}\\n      onChange={setValue}\\n      onSubmit={() => {\\n        setLoading(true);\\n      }}\\n      onCancel={() => {\\n        setLoading(false);\\n      }}\\n      actions={(_, info) => {\\n        const { SendButton, LoadingButton, ClearButton, SpeechButton } = info.components;\\n\\n        return (\\n          <Space size=\\\"small\\\">\\n            <Typography.Text type=\\\"secondary\\\">\\n              <small>`Shift + Enter` to submit</small>\\n            </Typography.Text>\\n            <ClearButton />\\n            <SpeechButton />\\n            {loading ? (\\n              <LoadingButton type=\\\"default\\\" icon={<Spin size=\\\"small\\\" />} disabled />\\n            ) : (\\n              <SendButton type=\\\"primary\\\" icon={<OpenAIOutlined />} disabled={false} />\\n            )}\\n          </Space>\\n        );\\n      }}\\n    />\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","\n  import '/home/runner/work/x/x/.dumi/hooks/useLocale.ts?watch=parent';\n  export default \"import { useLocale as useDumiLocale } from 'dumi';\\n\\nexport interface LocaleMap<\\n  K extends PropertyKey = PropertyKey,\\n  V extends string | ((...params: any[]) => string) = string,\\n> {\\n  cn: Record<K, V>;\\n  en: Record<K, V>;\\n}\\n\\nconst useLocale = <\\n  K extends PropertyKey = PropertyKey,\\n  V extends string | ((...params: any[]) => string) = string,\\n>(\\n  localeMap?: LocaleMap<K, V>,\\n): [Record<K, V>, 'cn' | 'en'] => {\\n  const { id } = useDumiLocale();\\n  const localeType = id === 'zh-CN' ? 'cn' : 'en';\\n  return [localeMap?.[localeType]!, localeType] as const;\\n};\\n\\nexport default useLocale;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/sender/demo/send-style.tsx?watch=parent';\n  export default \"import { SendOutlined } from '@ant-design/icons';\\nimport { Sender } from '@ant-design/x';\\nimport { App, type ButtonProps, Flex, Tooltip } from 'antd';\\nimport React from 'react';\\n\\nconst Demo: React.FC = () => {\\n  const [value, setValue] = React.useState('Ask something?');\\n  const [loading, setLoading] = React.useState(false);\\n\\n  const { message } = App.useApp();\\n\\n  React.useEffect(() => {\\n    if (loading) {\\n      const timer = setTimeout(() => {\\n        setLoading(false);\\n      }, 3000);\\n\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }\\n  }, [loading]);\\n\\n  const renderSend = (\\n    props: ButtonProps & { ignoreLoading?: boolean; placeholder?: string } = {},\\n  ) => {\\n    const { ignoreLoading, placeholder, ...btnProps } = props;\\n\\n    return (\\n      <Sender\\n        value={value}\\n        onChange={setValue}\\n        loading={loading}\\n        onSubmit={(msg) => {\\n          message.success(`Send: ${msg}`);\\n          setValue('');\\n          setLoading(true);\\n        }}\\n        placeholder={placeholder}\\n        onCancel={() => {\\n          setLoading(false);\\n        }}\\n        actions={(_, info) => {\\n          const { SendButton, LoadingButton } = info.components;\\n\\n          if (!ignoreLoading && loading) {\\n            return (\\n              <Tooltip title=\\\"Click to cancel\\\">\\n                <LoadingButton />\\n              </Tooltip>\\n            );\\n          }\\n\\n          let node = <SendButton {...btnProps} />;\\n\\n          if (!ignoreLoading) {\\n            node = (\\n              <Tooltip title={value ? 'Send \\\\u21B5' : 'Please type something'}>{node}</Tooltip>\\n            );\\n          }\\n\\n          return node;\\n        }}\\n      />\\n    );\\n  };\\n\\n  return (\\n    <Flex vertical gap=\\\"middle\\\">\\n      {renderSend({\\n        shape: 'default',\\n        placeholder: 'Change button border radius',\\n        style: { borderRadius: 12 },\\n      })}\\n      {renderSend({\\n        variant: 'text',\\n        placeholder: 'Change button icon',\\n        color: 'primary',\\n        icon: <SendOutlined />,\\n        shape: 'default',\\n      })}\\n      {renderSend({ ignoreLoading: true, placeholder: 'Loading not change button' })}\\n    </Flex>\\n  );\\n};\\n\\nexport default () => (\\n  <App>\\n    <Demo />\\n  </App>\\n);\\n\";;\n  ","import type { SenderToken } from '.';\nimport type { GenerateStyle } from '../../theme/cssinjs-utils';\n\nconst genSenderHeaderStyle: GenerateStyle<SenderToken> = (token) => {\n  const { componentCls, calc } = token;\n\n  const headerCls = `${componentCls}-header`;\n\n  return {\n    [componentCls]: {\n      [headerCls]: {\n        borderBottomWidth: token.lineWidth,\n        borderBottomStyle: 'solid',\n        borderBottomColor: token.colorBorder,\n\n        // ======================== Header ========================\n        '&-header': {\n          background: token.colorFillAlter,\n          fontSize: token.fontSize,\n          lineHeight: token.lineHeight,\n          paddingBlock: calc(token.paddingSM).sub(token.lineWidthBold).equal(),\n          paddingInlineStart: token.padding,\n          paddingInlineEnd: token.paddingXS,\n          display: 'flex',\n\n          [`${headerCls}-title`]: {\n            flex: 'auto',\n          },\n        },\n\n        // ======================= Content ========================\n        '&-content': {\n          padding: token.padding,\n        },\n\n        // ======================== Motion ========================\n        '&-motion': {\n          transition: ['height', 'border']\n            .map((prop) => `${prop} ${token.motionDurationSlow}`)\n            .join(','),\n          overflow: 'hidden',\n\n          '&-enter-start, &-leave-active': {\n            borderBottomColor: 'transparent',\n          },\n\n          '&-hidden': {\n            display: 'none',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default genSenderHeaderStyle;\n","\n  import '/home/runner/work/x/x/components/thought-chain/demo/_semantic.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { Button } from 'antd';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport { CheckCircleOutlined, MoreOutlined } from '@ant-design/icons';\\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\\nimport useLocale from '../../../.dumi/hooks/useLocale';\\n\\nimport type { ThoughtChainProps, ThoughtChainItem } from '@ant-design/x';\\n\\nconst customizationProps: ThoughtChainItem = {\\n  title: 'Thought Chain Item Title',\\n  description: 'description',\\n  icon: <CheckCircleOutlined />,\\n  extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  footer: <Button block>Thought Chain Item Footer</Button>,\\n  content: 'Thought Chain Item Content',\\n};\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    ...customizationProps,\\n    status: 'success',\\n  },\\n];\\n\\nconst locales = {\\n  cn: {\\n    item: '思维链节点',\\n    itemHeader: '思维链节点头部',\\n    itemContent: '思维链节点内容',\\n    itemFooter: '思维链节点页脚',\\n  },\\n  en: {\\n    item: 'Item',\\n    itemHeader: 'Item Header',\\n    itemContent: 'Item Content',\\n    itemFooter: 'Item Footer',\\n  },\\n};\\n\\nconst App: React.FC = () => {\\n  const [locale] = useLocale(locales);\\n  return (\\n    <SemanticPreview\\n      semantics={[\\n        {\\n          name: 'item',\\n          desc: locale.item,\\n        },\\n        {\\n          name: 'itemHeader',\\n          desc: locale.itemHeader,\\n        },\\n        {\\n          name: 'itemContent',\\n          desc: locale.itemContent,\\n        },\\n        {\\n          name: 'itemFooter',\\n          desc: locale.itemFooter,\\n        },\\n      ]}\\n    >\\n      <ThoughtChain items={items} />\\n    </SemanticPreview>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/bubble/demo/list-custom.tsx?watch=parent';\n  export default \"import { CoffeeOutlined, FireOutlined, SmileOutlined, UserOutlined } from '@ant-design/icons';\\nimport { Attachments, Bubble, Prompts } from '@ant-design/x';\\nimport { Flex, GetProp, Typography } from 'antd';\\nimport React from 'react';\\n\\nconst roles: GetProp<typeof Bubble.List, 'roles'> = {\\n  ai: {\\n    placement: 'start',\\n    typing: true,\\n    avatar: { icon: <UserOutlined />, style: { background: '#fde3cf' } },\\n  },\\n  suggestion: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { visibility: 'hidden' } },\\n    variant: 'borderless',\\n    messageRender: (items) => <Prompts vertical items={items as any} />,\\n  },\\n  file: {\\n    placement: 'start',\\n    avatar: { icon: <UserOutlined />, style: { visibility: 'hidden' } },\\n    variant: 'borderless',\\n    messageRender: (items: any) => (\\n      <Flex vertical gap=\\\"middle\\\">\\n        {(items as any[]).map((item) => (\\n          <Attachments.FileCard key={item.uid} item={item} />\\n        ))}\\n      </Flex>\\n    ),\\n  },\\n};\\n\\nconst App = () => {\\n  return (\\n    <Bubble.List\\n      roles={roles}\\n      items={[\\n        // Normal\\n        {\\n          key: 0,\\n          role: 'ai',\\n          content: 'Normal message',\\n        },\\n\\n        // ReactNode\\n        {\\n          key: 1,\\n          role: 'ai',\\n          content: <Typography.Text type=\\\"danger\\\">ReactNode message</Typography.Text>,\\n        },\\n\\n        // Role: suggestion\\n        {\\n          key: 2,\\n          role: 'suggestion',\\n          content: [\\n            {\\n              key: '6',\\n              icon: <CoffeeOutlined style={{ color: '#964B00' }} />,\\n              description: 'How to rest effectively after long hours of work?',\\n            },\\n            {\\n              key: '7',\\n              icon: <SmileOutlined style={{ color: '#FAAD14' }} />,\\n              description: 'What are the secrets to maintaining a positive mindset?',\\n            },\\n            {\\n              key: '8',\\n              icon: <FireOutlined style={{ color: '#FF4D4F' }} />,\\n              description: 'How to stay calm under immense pressure?',\\n            },\\n          ],\\n        },\\n        // Role: file\\n        {\\n          key: 3,\\n          role: 'file',\\n          content: [\\n            {\\n              uid: '1',\\n              name: 'excel-file.xlsx',\\n              size: 111111,\\n              description: 'Checking the data',\\n            },\\n            {\\n              uid: '2',\\n              name: 'word-file.docx',\\n              size: 222222,\\n              status: 'uploading',\\n              percent: 23,\\n            },\\n          ],\\n        },\\n      ]}\\n    />\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/x-request/demo/custom-transformer.tsx?watch=parent';\n  export default \"import { ThoughtChain, XRequest } from '@ant-design/x';\\nimport { Button, Splitter } from 'antd';\\nimport React from 'react';\\n\\nimport { TagsOutlined } from '@ant-design/icons';\\nimport type { ThoughtChainItem } from '@ant-design/x';\\n\\nconst BASE_URL = 'https://api.example.host';\\nconst PATH = '/chat';\\nconst MODEL = 'gpt-4o';\\n\\nconst ND_JSON_SEPARATOR = '\\\\n';\\n\\nasync function mockFetch() {\\n  const ndJsonData = `{data:{\\\"id\\\":\\\"0\\\",\\\"choices\\\":[{\\\"index\\\":0,\\\"delta\\\":{\\\"content\\\":\\\"Hello\\\",\\\"role\\\":\\\"assistant\\\"}}],\\\"created\\\":1733129200,\\\"model\\\":\\\"gpt-4o\\\"}}\\n{data:{\\\"id\\\":\\\"1\\\",\\\"choices\\\":[{\\\"index\\\":1,\\\"delta\\\":{\\\"content\\\":\\\"world!\\\",\\\"role\\\":\\\"assistant\\\"}}],\\\"created\\\":1733129300,\\\"model\\\":\\\"gpt-4o\\\"}}\\n{data:{\\\"id\\\":\\\"2\\\",\\\"choices\\\":[{\\\"index\\\":2,\\\"delta\\\":{\\\"content\\\":\\\"I\\\",\\\"role\\\":\\\"assistant\\\"}}],\\\"created\\\":1733129400,\\\"model\\\":\\\"gpt-4o\\\"}}\\n{data:{\\\"id\\\":\\\"3\\\",\\\"choices\\\":[{\\\"index\\\":3,\\\"delta\\\":{\\\"content\\\":\\\"am\\\",\\\"role\\\":\\\"assistant\\\"}}],\\\"created\\\":1733129500,\\\"model\\\":\\\"gpt-4o\\\"}}\\n{data:{\\\"id\\\":\\\"4\\\",\\\"choices\\\":[{\\\"index\\\":4,\\\"delta\\\":{\\\"content\\\":\\\"Ant Design X!\\\",\\\"role\\\":\\\"assistant\\\"}}],\\\"created\\\":1733129600,\\\"model\\\":\\\"gpt-4o\\\"}}`;\\n\\n  const chunks = ndJsonData.split(ND_JSON_SEPARATOR);\\n\\n  const response = new Response(\\n    new ReadableStream({\\n      async start(controller) {\\n        for (const chunk of chunks) {\\n          await new Promise((resolve) => setTimeout(resolve, 100));\\n          controller.enqueue(new TextEncoder().encode(chunk));\\n        }\\n        controller.close();\\n      },\\n    }),\\n    {\\n      headers: {\\n        'Content-Type': 'application/x-ndjson',\\n      },\\n    },\\n  );\\n\\n  return response;\\n}\\n\\nconst exampleRequest = XRequest({\\n  baseURL: BASE_URL + PATH,\\n  model: MODEL,\\n  fetch: mockFetch,\\n});\\n\\nconst App = () => {\\n  const [status, setStatus] = React.useState<ThoughtChainItem['status']>();\\n  const [lines, setLines] = React.useState<string[]>([]);\\n\\n  async function request() {\\n    setStatus('pending');\\n\\n    await exampleRequest.create(\\n      {\\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\\n        stream: true,\\n      },\\n      {\\n        onSuccess: (messages) => {\\n          setStatus('success');\\n          console.log('onSuccess', messages);\\n        },\\n        onError: (error) => {\\n          setStatus('error');\\n          console.error('onError', error);\\n        },\\n        onUpdate: (msg) => {\\n          setLines((pre) => [...pre, msg]);\\n          console.log('onUpdate', msg);\\n        },\\n      },\\n      new TransformStream<string, string>({\\n        transform(chunk, controller) {\\n          controller.enqueue(chunk);\\n        },\\n      }),\\n    );\\n  }\\n\\n  return (\\n    <Splitter>\\n      <Splitter.Panel>\\n        <Button type=\\\"primary\\\" disabled={status === 'pending'} onClick={request}>\\n          Request - {BASE_URL}\\n          {PATH}\\n        </Button>\\n      </Splitter.Panel>\\n      <Splitter.Panel style={{ marginLeft: 16 }}>\\n        <ThoughtChain\\n          items={[\\n            {\\n              title: 'Mock Custom Protocol - Log',\\n              status: status,\\n              icon: <TagsOutlined />,\\n              content: (\\n                <pre style={{ overflow: 'scroll' }}>\\n                  <code>{lines.join(ND_JSON_SEPARATOR)}</code>\\n                </pre>\\n              ),\\n            },\\n          ]}\\n        />\\n      </Splitter.Panel>\\n    </Splitter>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","import { EditOutlined, GithubOutlined, HistoryOutlined } from '@ant-design/icons';\nimport type { GetProp } from 'antd';\nimport { Descriptions, Flex, Tooltip, Typography, theme } from 'antd';\nimport { createStyles, css } from 'antd-style';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nimport useLocale from '../../../hooks/useLocale';\nimport ComponentChangelog from '../../common/ComponentChangelog';\n\nconst locales = {\n  cn: {\n    import: '使用',\n    copy: '复制',\n    copied: '已复制',\n    source: '源码',\n    docs: '文档',\n    edit: '编辑此页',\n    changelog: '更新日志',\n    version: '版本',\n  },\n  en: {\n    import: 'Import',\n    copy: 'Copy',\n    copied: 'Copied',\n    source: 'Source',\n    docs: 'Docs',\n    edit: 'Edit this page',\n    changelog: 'Changelog',\n    version: 'Version',\n  },\n};\n\nconst branchUrl = 'https://github.com/ant-design/x/edit/main/';\n\nfunction isVersionNumber(value?: string) {\n  return value && /^\\d+\\.\\d+\\.\\d+$/.test(value);\n}\n\nconst useStyle = createStyles(({ token }) => ({\n  code: css`\n    cursor: pointer;\n    position: relative;\n    align-items: center;\n    border-radius: ${token.borderRadiusSM}px;\n    padding-inline: ${token.paddingXXS}px !important;\n    transition: all ${token.motionDurationSlow} !important;\n    color: ${token.colorTextSecondary} !important;\n\n    > code {\n      padding: 0;\n      border: 0;\n      background: transparent;\n      display: inline-flex;\n      column-gap: ${token.paddingXXS}px;\n      line-height: 1;\n      font-size: 13px;\n      font-family: ${token.codeFamily};\n    }\n  \n    &:hover {\n      background: ${token.controlItemBgHover};\n    }\n\n    a&:hover {\n      text-decoration: underline !important;\n    }\n  `,\n  import: css`\n    color: ${token.magenta8};\n  `,\n  component: css`\n    color: ${token.colorText};\n  `,\n  from: css`\n    color: ${token.magenta8};\n    margin-inline-end: 0.5em;\n  `,\n  antdx: css`\n    color: ${token.green8};\n  `,\n  semicolon: css`\n    color: ${token.colorText};\n  `,\n}));\n\nexport interface ComponentMetaProps {\n  component: string;\n  source: string | true;\n  filename?: string;\n  version?: string;\n}\n\nconst ComponentMeta: React.FC<ComponentMetaProps> = (props) => {\n  const { component, source, filename, version } = props;\n  const { token } = theme.useToken();\n  const [locale, lang] = useLocale(locales);\n  const isZhCN = lang === 'cn';\n  const { styles } = useStyle();\n\n  // ========================= Copy =========================\n  const [copied, setCopied] = React.useState(false);\n\n  const onCopy = () => {\n    setCopied(true);\n  };\n\n  const onOpenChange = (open: boolean) => {\n    if (open) {\n      setCopied(false);\n    }\n  };\n\n  // ======================== Source ========================\n  const [filledSource, abbrSource] = React.useMemo(() => {\n    if (String(source) === 'true') {\n      const kebabComponent = kebabCase(component);\n      return [\n        `https://github.com/ant-design/x/blob/main/components/${kebabComponent}`,\n        `components/${kebabComponent}`,\n      ];\n    }\n\n    if (typeof source !== 'string') {\n      return [null, null];\n    }\n\n    return [source, source];\n  }, [component, source]);\n\n  const transformComponentName = (componentName: string) => {\n    if (componentName === 'Notifiction' || componentName === 'Message') {\n      return componentName.toLowerCase();\n    }\n    return componentName;\n  };\n\n  // ======================== Render ========================\n  const importList = [\n    <span key=\"import\" className={styles.import}>\n      import\n    </span>,\n    <span key=\"component\" className={styles.component}>{`{ ${transformComponentName(\n      component,\n    )} }`}</span>,\n    <span key=\"from\" className={styles.from}>\n      from\n    </span>,\n    <span key=\"@ant-design/x\" className={styles.antdx}>\n      {`\"@ant-design/x\"`}\n    </span>,\n    <span key=\"semicolon\" className={styles.semicolon}>\n      ;\n    </span>,\n  ];\n\n  return (\n    <Descriptions\n      size=\"small\"\n      colon={false}\n      column={1}\n      style={{ marginTop: token.margin }}\n      labelStyle={{ paddingInlineEnd: token.padding, width: 56 }}\n      items={\n        [\n          {\n            label: locale.import,\n            children: (\n              <CopyToClipboard\n                text={`import { ${component} } from \"@ant-design/x\";`}\n                onCopy={onCopy}\n              >\n                <Tooltip\n                  placement=\"right\"\n                  title={copied ? locale.copied : locale.copy}\n                  onOpenChange={onOpenChange}\n                >\n                  <pre className={styles.code} onClick={onCopy}>\n                    <code>{importList}</code>\n                  </pre>\n                </Tooltip>\n              </CopyToClipboard>\n            ),\n          },\n          filledSource && {\n            label: locale.source,\n            children: (\n              <Typography.Link className={styles.code} href={filledSource} target=\"_blank\">\n                <GithubOutlined style={{ marginInlineEnd: 4 }} />\n                <span>{abbrSource}</span>\n              </Typography.Link>\n            ),\n          },\n          filename && {\n            label: locale.docs,\n            children: (\n              <Flex gap={16}>\n                <Typography.Link\n                  className={styles.code}\n                  href={`${branchUrl}${filename}`}\n                  target=\"_blank\"\n                >\n                  <EditOutlined style={{ marginInlineEnd: 4 }} />\n                  <span>{locale.edit}</span>\n                </Typography.Link>\n                <ComponentChangelog>\n                  <Typography.Link className={styles.code}>\n                    <HistoryOutlined style={{ marginInlineEnd: 4 }} />\n                    <span>{locale.changelog}</span>\n                  </Typography.Link>\n                </ComponentChangelog>\n              </Flex>\n            ),\n          },\n          isVersionNumber(version) && {\n            label: locale.version,\n            children: (\n              <Typography.Text className={styles.code}>\n                {isZhCN ? `自 ${version} 后支持` : `supported since ${version}`}\n              </Typography.Text>\n            ),\n          },\n        ].filter(Boolean) as GetProp<typeof Descriptions, 'items'>\n      }\n    />\n  );\n};\n\nexport default ComponentMeta;\n","import React from 'react';\n\nexport interface RecordingIconProps {\n  className?: string;\n}\n\nconst SIZE = 1000;\nconst COUNT = 4;\nconst RECT_WIDTH = 140;\nconst RECT_RADIUS = RECT_WIDTH / 2;\nconst RECT_HEIGHT_MIN = 250;\nconst RECT_HEIGHT_MAX = 500;\nconst DURATION = 0.8;\n\nexport default function RecordingIcon({ className }: RecordingIconProps) {\n  return (\n    <svg\n      color=\"currentColor\"\n      viewBox={`0 0 ${SIZE} ${SIZE}`}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      // xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      className={className}\n    >\n      <title>Speech Recording</title>\n\n      {Array.from({ length: COUNT }).map((_, index) => {\n        const dest = (SIZE - RECT_WIDTH * COUNT) / (COUNT - 1);\n        const x = index * (dest + RECT_WIDTH);\n        const yMin = SIZE / 2 - RECT_HEIGHT_MIN / 2;\n        const yMax = SIZE / 2 - RECT_HEIGHT_MAX / 2;\n\n        return (\n          <rect\n            fill=\"currentColor\"\n            rx={RECT_RADIUS}\n            ry={RECT_RADIUS}\n            height={RECT_HEIGHT_MIN}\n            width={RECT_WIDTH}\n            x={x}\n            y={yMin}\n            key={index}\n          >\n            <animate\n              attributeName=\"height\"\n              values={`${RECT_HEIGHT_MIN}; ${RECT_HEIGHT_MAX}; ${RECT_HEIGHT_MIN}`}\n              keyTimes=\"0; 0.5; 1\"\n              dur={`${DURATION}s`}\n              begin={`${(DURATION / COUNT) * index}s`}\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"y\"\n              values={`${yMin}; ${yMax}; ${yMin}`}\n              keyTimes=\"0; 0.5; 1\"\n              dur={`${DURATION}s`}\n              begin={`${(DURATION / COUNT) * index}s`}\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        );\n      })}\n    </svg>\n  );\n}\n","import { version } from '@ant-design/x';\nimport type { MenuProps } from 'antd';\nimport { Space, Tag } from 'antd';\nimport { createStyles } from 'antd-style';\nimport classnames from 'classnames';\nimport { useFullSidebarData, useSidebarData } from 'dumi';\nimport React, { useMemo } from 'react';\n\nimport Link from '../theme/common/Link';\nimport useLocation from './useLocation';\n\nfunction isVersionNumber(value?: string) {\n  return value && /^\\d+\\.\\d+\\.\\d+$/.test(value);\n}\n\nconst useStyle = createStyles(({ css, token }) => ({\n  link: css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  `,\n  tag: css`\n    margin-inline-end: 0;\n  `,\n  subtitle: css`\n    font-weight: normal;\n    font-size: ${token.fontSizeSM}px;\n    opacity: 0.8;\n  `,\n}));\n\ninterface MenuItemLabelProps {\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  link: string;\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n  search?: string;\n  tag?: string;\n  className?: string;\n}\n\nconst MenuItemLabelWithTag: React.FC<MenuItemLabelProps> = (props) => {\n  const { styles } = useStyle();\n  const { before, after, link, title, subtitle, search, tag, className } = props;\n  if (!before && !after) {\n    return (\n      <Link to={`${link}${search}`} className={classnames(className, { [styles.link]: tag })}>\n        <Space>\n          <span>{title}</span>\n          {subtitle && <span className={styles.subtitle}>{subtitle}</span>}\n        </Space>\n        {tag && (\n          <Tag\n            bordered={false}\n            className={classnames(styles.tag)}\n            color={isVersionNumber(tag) || tag === 'New' ? 'success' : 'processing'}\n          >\n            {tag.replace('VERSION', version)}\n          </Tag>\n        )}\n      </Link>\n    );\n  }\n  return (\n    <Link to={`${link}${search}`} className={className}>\n      {before}\n      {title}\n      {subtitle && <span className={styles.subtitle}>{subtitle}</span>}\n      {after}\n    </Link>\n  );\n};\n\nexport interface UseMenuOptions {\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n}\n\nconst useMenu = (options: UseMenuOptions = {}): readonly [MenuProps['items'], string] => {\n  const fullData = useFullSidebarData();\n  const { pathname, search } = useLocation();\n  const sidebarData = useSidebarData();\n  const { before, after } = options;\n\n  const menuItems = useMemo<MenuProps['items']>(() => {\n    let sidebarItems = [...(sidebarData ?? [])];\n\n    // 将设计文档未分类的放在最前面\n    if (pathname.startsWith('/docs/spec')) {\n      const notGrouped = sidebarItems.splice(0, 1);\n      sidebarItems = [...notGrouped, ...sidebarItems];\n    }\n\n    // 把 /changelog 拼到开发文档中\n    if (pathname.startsWith('/docs/react')) {\n      const changelogData = Object.entries(fullData).find(([key]) =>\n        key.startsWith('/changelog'),\n      )?.[1];\n      if (changelogData) {\n        sidebarItems.splice(1, 0, changelogData[0]);\n      }\n    }\n    if (pathname.startsWith('/changelog')) {\n      const reactDocData = Object.entries(fullData).find(([key]) =>\n        key.startsWith('/docs/react'),\n      )?.[1];\n      if (reactDocData) {\n        sidebarItems.unshift(reactDocData[0]);\n        sidebarItems.push(...reactDocData.slice(1));\n      }\n    }\n\n    return (\n      sidebarItems?.reduce<Exclude<MenuProps['items'], undefined>>((result, group) => {\n        if (group?.title) {\n          // 设计文档特殊处理二级分组\n          if (pathname.startsWith('/docs/spec')) {\n            const childrenGroup = group.children.reduce<\n              Record<string, ReturnType<typeof useSidebarData>[number]['children']>\n            >((childrenResult, child) => {\n              const type = child.frontmatter?.type ?? 'default';\n              if (!childrenResult[type]) {\n                childrenResult[type] = [];\n              }\n              childrenResult[type].push(child);\n              return childrenResult;\n            }, {});\n            const childItems = [];\n            childItems.push(\n              ...(childrenGroup.default?.map((item) => ({\n                label: (\n                  <Link to={`${item.link}${search}`}>\n                    {before}\n                    {item?.title}\n                    {after}\n                  </Link>\n                ),\n                key: item.link.replace(/(-cn$)/g, ''),\n              })) ?? []),\n            );\n            Object.entries(childrenGroup).forEach(([type, children]) => {\n              if (type !== 'default') {\n                childItems.push({\n                  type: 'group',\n                  label: type,\n                  key: type,\n                  children: children?.map((item) => ({\n                    label: (\n                      <Link to={`${item.link}${search}`}>\n                        {before}\n                        {item?.title}\n                        {after}\n                      </Link>\n                    ),\n                    key: item.link.replace(/(-cn$)/g, ''),\n                  })),\n                });\n              }\n            });\n            result.push({\n              label: group?.title,\n              key: group?.title,\n              children: childItems,\n            });\n          } else {\n            result.push({\n              type: 'group',\n              label: group?.title,\n              key: group?.title,\n              children: group.children?.map((item) => ({\n                label: (\n                  <MenuItemLabelWithTag\n                    before={before}\n                    after={after}\n                    link={item.link}\n                    title={item?.title}\n                    subtitle={item.frontmatter?.subtitle}\n                    search={search}\n                    tag={item.frontmatter?.tag}\n                  />\n                ),\n                key: item.link.replace(/(-cn$)/g, ''),\n              })),\n            });\n          }\n        } else {\n          const list = group.children || [];\n          // 如果有 date 字段，我们就对其进行排序\n          if (list.every((info) => info?.frontmatter?.date)) {\n            list.sort((a, b) => (a.frontmatter?.date > b.frontmatter?.date ? -1 : 1));\n          }\n          result.push(\n            ...list.map((item) => ({\n              label: (\n                <MenuItemLabelWithTag\n                  before={before}\n                  after={after}\n                  link={item.link}\n                  title={item?.title}\n                  search={search}\n                  tag={item.frontmatter?.tag}\n                />\n              ),\n              key: item.link.replace(/(-cn$)/g, ''),\n            })),\n          );\n        }\n        return result;\n      }, []) ?? []\n    );\n  }, [sidebarData, fullData, pathname, search, options]);\n\n  return [menuItems, pathname] as const;\n};\n\nexport default useMenu;\n","export { default as version } from './version';\n\nexport { default as Attachments } from './attachments';\nexport type { AttachmentsProps } from './attachments';\n\nexport { default as Sender } from './sender';\nexport type { SenderProps } from './sender';\n\nexport { default as Bubble } from './bubble';\nexport type { BubbleProps } from './bubble';\n\nexport { default as Conversations } from './conversations';\nexport type { ConversationsProps } from './conversations';\n\nexport { default as Prompts } from './prompts';\nexport type { PromptsProps, PromptProps } from './prompts';\n\nexport { default as ThoughtChain } from './thought-chain';\nexport type { ThoughtChainProps, ThoughtChainItem } from './thought-chain';\n\nexport { default as Suggestion } from './suggestion';\nexport type { SuggestionProps } from './suggestion';\n\nexport { default as Welcome } from './welcome';\nexport type { WelcomeProps } from './welcome';\n\nexport { default as XProvider } from './x-provider';\nexport type { XProviderProps } from './x-provider';\n\nexport { default as useXChat } from './use-x-chat';\n\nexport { default as useXAgent } from './use-x-agent';\n\nexport { default as XStream } from './x-stream';\nexport type { XStreamOptions } from './x-stream';\n\nexport { default as XRequest } from './x-request';\n","import { Flex, GetRef, Typography, Upload, type UploadProps } from 'antd';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { AttachmentContext } from './context';\n\nexport interface PlaceholderConfig {\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport type PlaceholderType = PlaceholderConfig | React.ReactElement;\n\nexport interface PlaceholderProps {\n  prefixCls: string;\n  placeholder?: PlaceholderType;\n  upload?: UploadProps;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nfunction Placeholder(props: PlaceholderProps, ref: React.Ref<GetRef<typeof Upload>>) {\n  const { prefixCls, placeholder = {}, upload, className, style } = props;\n\n  const placeholderCls = `${prefixCls}-placeholder`;\n\n  const placeholderConfig = (placeholder || {}) as PlaceholderConfig;\n\n  const { disabled } = React.useContext(AttachmentContext);\n\n  // ============================= Drag =============================\n  const [dragIn, setDragIn] = React.useState(false);\n\n  const onDragEnter = () => {\n    setDragIn(true);\n  };\n\n  const onDragLeave = (e: React.DragEvent) => {\n    // Leave the div should end\n    if (!(e.currentTarget as HTMLElement).contains(e.relatedTarget as HTMLElement)) {\n      setDragIn(false);\n    }\n  };\n\n  const onDrop = () => {\n    setDragIn(false);\n  };\n\n  // ============================ Render ============================\n  const node = React.isValidElement(placeholder) ? (\n    placeholder\n  ) : (\n    <Flex align=\"center\" justify=\"center\" vertical className={`${placeholderCls}-inner`}>\n      <Typography.Text className={`${placeholderCls}-icon`}>\n        {placeholderConfig.icon}\n      </Typography.Text>\n      <Typography.Title className={`${placeholderCls}-title`} level={5}>\n        {placeholderConfig.title}\n      </Typography.Title>\n      <Typography.Text className={`${placeholderCls}-description`} type=\"secondary\">\n        {placeholderConfig.description}\n      </Typography.Text>\n    </Flex>\n  );\n\n  return (\n    <div\n      className={classNames(\n        placeholderCls,\n        {\n          [`${placeholderCls}-drag-in`]: dragIn,\n          [`${placeholderCls}-disabled`]: disabled,\n        },\n        className,\n      )}\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n      aria-hidden={disabled}\n      style={style}\n    >\n      <Upload.Dragger\n        showUploadList={false}\n        {...upload}\n        ref={ref}\n        style={{ padding: 0, border: 0, background: 'transparent' }}\n      >\n        {node}\n      </Upload.Dragger>\n    </div>\n  );\n}\n\nexport default React.forwardRef(Placeholder);\n","import { BugOutlined, CodeOutlined, ExperimentOutlined } from '@ant-design/icons';\nimport { XProvider } from '@ant-design/x';\nimport { Button, Tooltip } from 'antd';\nimport classNames from 'classnames';\nimport { DumiDemoGrid, FormattedMessage } from 'dumi';\nimport React, { Suspense, useContext } from 'react';\n\nimport useLayoutState from '../../../hooks/useLayoutState';\nimport useLocale from '../../../hooks/useLocale';\nimport DemoContext from '../../slots/DemoContext';\n\nconst locales = {\n  cn: {\n    enableCssVar: '启用 CSS 变量',\n    disableCssVar: '禁用 CSS 变量',\n  },\n  en: {\n    enableCssVar: 'Enable CSS Var',\n    disableCssVar: 'Disable CSS Var',\n  },\n};\n\nconst DemoWrapper: typeof DumiDemoGrid = ({ items }) => {\n  const { showDebug, setShowDebug } = useContext(DemoContext);\n  const [locale] = useLocale(locales);\n\n  const [expandAll, setExpandAll] = useLayoutState(false);\n  const [enableCssVar, setEnableCssVar] = useLayoutState(true);\n\n  const handleVisibleToggle = () => {\n    setShowDebug?.(!showDebug);\n  };\n\n  const handleExpandToggle = () => {\n    setExpandAll(!expandAll);\n  };\n\n  const handleCssVarToggle = () => {\n    setEnableCssVar((v) => !v);\n  };\n\n  const demos = React.useMemo(\n    () =>\n      items.map((item: any) => {\n        const { previewerProps } = item;\n        const { debug } = previewerProps;\n        return {\n          ...item,\n          previewerProps: {\n            ...item.previewerProps,\n            expand: expandAll,\n            // always override debug property, because dumi will hide debug demo in production\n            debug: false,\n            /**\n             * antd extra marker for the original debug\n             * @see https://github.com/ant-design/ant-design/pull/40130#issuecomment-1380208762\n             */\n            originDebug: debug,\n          },\n        };\n      }),\n    [expandAll, showDebug],\n  );\n\n  return (\n    <div\n      className={classNames('demo-wrapper', {\n        'demo-wrapper-show-debug': showDebug,\n      })}\n    >\n      <span className=\"all-code-box-controls\">\n        <Tooltip\n          title={\n            <FormattedMessage id={`app.component.examples.${expandAll ? 'collapse' : 'expand'}`} />\n          }\n        >\n          <Button\n            type=\"text\"\n            size=\"small\"\n            icon={<CodeOutlined />}\n            onClick={handleExpandToggle}\n            className={expandAll ? 'icon-enabled' : ''}\n          />\n        </Tooltip>\n        <Tooltip\n          title={\n            <FormattedMessage id={`app.component.examples.${showDebug ? 'hide' : 'visible'}`} />\n          }\n        >\n          <Button\n            type=\"text\"\n            size=\"small\"\n            icon={<BugOutlined />}\n            onClick={handleVisibleToggle}\n            className={showDebug ? 'icon-enabled' : ''}\n          />\n        </Tooltip>\n        <Tooltip title={enableCssVar ? locale.disableCssVar : locale.enableCssVar}>\n          <Button\n            type=\"text\"\n            size=\"small\"\n            icon={<ExperimentOutlined />}\n            onClick={handleCssVarToggle}\n            className={enableCssVar ? 'icon-enabled' : ''}\n          />\n        </Tooltip>\n      </span>\n      <XProvider theme={{ cssVar: enableCssVar, hashed: !enableCssVar }}>\n        <Suspense>\n          <DumiDemoGrid items={demos} />\n        </Suspense>\n      </XProvider>\n    </div>\n  );\n};\n\nexport default DemoWrapper;\n","import React from 'react';\nimport XRequest from '../x-request';\n\nimport { AnyObject } from '../_util/type';\n\ninterface RequestFnInfo<Message> extends Partial<XAgentConfigPreset>, AnyObject {\n  messages?: Message[];\n  message?: Message;\n}\n\nexport type RequestFn<Message> = (\n  info: RequestFnInfo<Message>,\n  callbacks: {\n    onUpdate: (message: Message) => void;\n    onSuccess: (message: Message) => void;\n    onError: (error: Error) => void;\n  },\n) => void;\n\nexport interface XAgentConfigPreset {\n  baseURL: string;\n  key: string;\n  model: string;\n  dangerouslyApiKey: string;\n}\nexport interface XAgentConfigCustom<Message> {\n  request?: RequestFn<Message>;\n}\n\nexport type XAgentConfig<Message> = Partial<XAgentConfigPreset> & XAgentConfigCustom<Message>;\n\nlet uuid = 0;\n\n/** This is a wrap class to avoid developer can get too much on origin object */\nexport class XAgent<Message = string> {\n  config: XAgentConfig<Message>;\n\n  private requestingMap: Record<number, boolean> = {};\n\n  constructor(config: XAgentConfig<Message>) {\n    this.config = config;\n  }\n\n  private finishRequest(id: number) {\n    delete this.requestingMap[id];\n  }\n\n  public request: RequestFn<Message> = (info, callbacks) => {\n    const { request } = this.config;\n    const { onUpdate, onSuccess, onError } = callbacks;\n\n    const id = uuid;\n    uuid += 1;\n    this.requestingMap[id] = true;\n\n    request?.(info, {\n      // Status should be unique.\n      // One get success or error should not get more message\n      onUpdate: (message) => {\n        if (this.requestingMap[id]) {\n          onUpdate(message);\n        }\n      },\n      onSuccess: (message) => {\n        if (this.requestingMap[id]) {\n          onSuccess(message);\n          this.finishRequest(id);\n        }\n      },\n      onError: (error) => {\n        if (this.requestingMap[id]) {\n          onError(error);\n          this.finishRequest(id);\n        }\n      },\n    });\n  };\n\n  public isRequesting() {\n    return Object.keys(this.requestingMap).length > 0;\n  }\n}\n\nexport default function useXAgent<Message = string>(config: XAgentConfig<Message>) {\n  const { request, ...restConfig } = config;\n  return React.useMemo(\n    () =>\n      [\n        new XAgent<Message>({\n          request:\n            request! ||\n            XRequest({\n              baseURL: restConfig.baseURL!,\n              model: restConfig.model,\n              dangerouslyApiKey: restConfig.dangerouslyApiKey,\n            }).create,\n          ...restConfig,\n        }),\n      ] as const,\n    [],\n  );\n}\n","import classnames from 'classnames';\nimport React from 'react';\n\nimport { Avatar } from 'antd';\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\nimport useTypedEffect from './hooks/useTypedEffect';\nimport useTypingConfig from './hooks/useTypingConfig';\nimport type { BubbleContentType, BubbleProps } from './interface';\nimport Loading from './loading';\nimport useStyle from './style';\n\nexport interface BubbleRef {\n  nativeElement: HTMLElement;\n}\n\nexport interface BubbleContextProps {\n  onUpdate?: VoidFunction;\n}\n\nexport const BubbleContext = React.createContext<BubbleContextProps>({});\n\nconst Bubble: React.ForwardRefRenderFunction<BubbleRef, BubbleProps> = (props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    classNames = {},\n    styles = {},\n    avatar,\n    placement = 'start',\n    loading = false,\n    loadingRender,\n    typing,\n    content = '',\n    messageRender,\n    variant = 'filled',\n    shape,\n    onTypingComplete,\n    header,\n    footer,\n    ...otherHtmlProps\n  } = props;\n\n  const { onUpdate } = React.useContext(BubbleContext);\n\n  // ============================= Refs =============================\n  const divRef = React.useRef<HTMLDivElement>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    nativeElement: divRef.current!,\n  }));\n\n  // ============================ Prefix ============================\n  const { direction, getPrefixCls } = useXProviderContext();\n\n  const prefixCls = getPrefixCls('bubble', customizePrefixCls);\n\n  // ===================== Component Config =========================\n  const contextConfig = useXComponentConfig('bubble');\n\n  // ============================ Typing ============================\n  const [typingEnabled, typingStep, typingInterval, customSuffix] = useTypingConfig(typing);\n\n  const [typedContent, isTyping] = useTypedEffect(\n    content,\n    typingEnabled,\n    typingStep,\n    typingInterval,\n  );\n\n  React.useEffect(() => {\n    onUpdate?.();\n  }, [typedContent]);\n\n  const triggerTypingCompleteRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!isTyping && !loading) {\n      // StrictMode will trigger this twice,\n      // So we need a flag to avoid that\n      if (!triggerTypingCompleteRef.current) {\n        triggerTypingCompleteRef.current = true;\n        onTypingComplete?.();\n      }\n    } else {\n      triggerTypingCompleteRef.current = false;\n    }\n  }, [isTyping, loading]);\n\n  // ============================ Styles ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n\n  const mergedCls = classnames(\n    prefixCls,\n    rootClassName,\n    contextConfig.className,\n    className,\n    hashId,\n    cssVarCls,\n    `${prefixCls}-${placement}`,\n    {\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-typing`]: isTyping && !loading && !messageRender && !customSuffix,\n    },\n  );\n\n  // ============================ Avatar ============================\n  const avatarNode = React.isValidElement(avatar) ? avatar : <Avatar {...avatar} />;\n\n  // =========================== Content ============================\n  const mergedContent = messageRender ? messageRender(typedContent as any) : typedContent;\n\n  // ============================ Render ============================\n  let contentNode: React.ReactNode;\n  if (loading) {\n    contentNode = loadingRender ? loadingRender() : <Loading prefixCls={prefixCls} />;\n  } else {\n    contentNode = (\n      <>\n        {mergedContent as React.ReactNode}\n        {isTyping && customSuffix}\n      </>\n    );\n  }\n\n  let fullContent: React.ReactNode = (\n    <div\n      style={{\n        ...contextConfig.styles.content,\n        ...styles.content,\n      }}\n      className={classnames(\n        `${prefixCls}-content`,\n        `${prefixCls}-content-${variant}`,\n        shape && `${prefixCls}-content-${shape}`,\n        contextConfig.classNames.content,\n        classNames.content,\n      )}\n    >\n      {contentNode}\n    </div>\n  );\n\n  // 渲染 footer\n  // let footerNode: React.ReactNode;\n  // if (typeof footer === 'function') {\n  //   footerNode = footer({ content: typedContent as any });\n  // } else {\n  //   footerNode = footer;\n  // }\n  // if (header || footerNode) {\n  if (header || footer) {\n    fullContent = (\n      <div className={`${prefixCls}-content-wrapper`}>\n        {header && (\n          <div\n            className={classnames(\n              `${prefixCls}-header`,\n              contextConfig.classNames.header,\n              classNames.header,\n            )}\n            style={{\n              ...contextConfig.styles.header,\n              ...styles.header,\n            }}\n          >\n            {header}\n          </div>\n        )}\n        {fullContent}\n        {/* {footerNode && ( */}\n        {footer && (\n          <div\n            className={classnames(\n              `${prefixCls}-footer`,\n              contextConfig.classNames.footer,\n              classNames.footer,\n            )}\n            style={{\n              ...contextConfig.styles.footer,\n              ...styles.footer,\n            }}\n          >\n            {/* {footerNode} */}\n            {typeof footer === 'function' ? footer(mergedContent as string) : footer}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return wrapCSSVar(\n    <div\n      style={{\n        ...contextConfig.style,\n        ...style,\n      }}\n      className={mergedCls}\n      {...otherHtmlProps}\n      ref={divRef}\n    >\n      {/* Avatar */}\n      {avatar && (\n        <div\n          style={{\n            ...contextConfig.styles.avatar,\n            ...styles.avatar,\n          }}\n          className={classnames(\n            `${prefixCls}-avatar`,\n            contextConfig.classNames.avatar,\n            classNames.avatar,\n          )}\n        >\n          {avatarNode}\n        </div>\n      )}\n\n      {/* Content */}\n      {fullContent}\n    </div>,\n  );\n};\n\ntype ForwardBubbleType = <T extends BubbleContentType = string>(\n  props: BubbleProps<T> & { ref?: React.Ref<BubbleRef> },\n) => React.ReactElement;\n\nconst ForwardBubble = React.forwardRef(Bubble);\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardBubble.displayName = 'Bubble';\n}\n\nexport default ForwardBubble as ForwardBubbleType;\n","import React from 'react';\n\nimport type { AnyObject } from '../_util/type';\nimport { AttachmentsProps } from '../attachments';\nimport type { BubbleProps } from '../bubble';\nimport type { ConversationsProps } from '../conversations';\nimport type { PromptsProps } from '../prompts';\nimport type { SenderProps } from '../sender';\nimport type { SuggestionProps } from '../suggestion';\nimport type { ThoughtChainProps } from '../thought-chain';\nimport type { WelcomeProps } from '../welcome';\n\nexport interface XComponentStyleConfig {\n  classNames: Record<string, string>;\n  styles: Record<string, React.CSSProperties>;\n  className: string;\n  style: React.CSSProperties;\n}\n\ntype DefaultPickType = keyof XComponentStyleConfig;\n\ntype ComponentStyleConfig<\n  CompProps extends AnyObject,\n  PickType extends keyof CompProps = DefaultPickType,\n> = Pick<CompProps, PickType | DefaultPickType>;\n\nexport interface XComponentsConfig {\n  bubble?: ComponentStyleConfig<BubbleProps>;\n  conversations?: ComponentStyleConfig<ConversationsProps>;\n  prompts?: ComponentStyleConfig<PromptsProps>;\n  sender?: ComponentStyleConfig<SenderProps>;\n  suggestion?: ComponentStyleConfig<SuggestionProps>;\n  thoughtChain?: ComponentStyleConfig<ThoughtChainProps>;\n  attachments?: ComponentStyleConfig<AttachmentsProps>;\n  welcome?: ComponentStyleConfig<WelcomeProps>;\n}\n\nexport interface XProviderProps extends XComponentsConfig {\n  // Non-component config props\n}\n\nconst XProviderContext = React.createContext<XProviderProps>({});\n\nexport default XProviderContext;\n","import { Button } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React from 'react';\nimport useLocale from '../../../hooks/useLocale';\n\nimport classnames from 'classnames';\nimport { useLocation, useNavigate } from 'dumi';\nimport useLottie from '../../../hooks/useLottie';\nimport { getLocalizedPathname, isZhCN } from '../../../theme/utils';\nimport Container from '../common/Container';\nimport { DESIGN_STAGE_COLOR } from '../common/CustomizationProvider';\nimport SiteContext from './SiteContext';\n\nconst comma = '\\u00A0,\\u00A0\\u00A0\\u00A0';\n\nconst locales = {\n  cn: {\n    title: 'AI 界面解决方案',\n    desc: '基于RICH，延续熟悉的 Ant Design 设计语言，全新 AGI 混合界面（Hybrid-UI）解决方案，完美融合 GUI 和自然会话交互。从唤醒到表达，从过程到反馈，合适的组件恰当的呈现在所有的人机互动过程中。',\n\n    awaken: '唤醒',\n    awaken_title: `轻松唤醒${comma}即刻吸引`,\n    awaken_desc: '可以让首次接触的用户快速理解AI能做什么, 告知用户AI可实现的意图范围, 降低用户成本',\n    awaken_action: '从唤醒开始',\n\n    express: '表达',\n    express_title: `简单表达${comma}随时反馈`,\n    express_desc: '让用户知道如何快捷且正确的表达意图, 减少AI的不理解风险, 看清自己发送的内容',\n    express_action: '从表达开始',\n\n    confirm: '确认',\n    confirm_title: `过程确认${comma}尽在掌握`,\n    confirm_desc: '让用户知道该任务的AI执行运转情况, 缓解用户等待焦虑, 有掌控感',\n    confirm_action: '从确认开始',\n\n    feedback: '反馈',\n    feedback_title: `结果反馈${comma}谁能不信`,\n    feedback_desc: '让用户清晰看到并信任AI任务完成的情况, 并快速应用AI生成结果',\n    feedback_action: '从反馈开始',\n  },\n  en: {\n    title: 'AI Interface Solution',\n    desc: 'Building on the RICH paradigm and Ant Design language, the AGI Hybrid-UI solution blends GUI with natural conversation, presenting optimal components at each stage of human-computer interaction.',\n\n    awaken: 'Awaken',\n    awaken_title: `Effortlessly Awaken${comma}Instantly Engage`,\n    awaken_desc:\n      'Helps new users quickly understand what AI can do, informs them of the AI’s capability range, and lowers entry barriers.',\n    awaken_action: 'Start with Awaken',\n\n    express: 'Express',\n    express_title: `Simple Express${comma}Instant Feedback`,\n    express_desc:\n      'Guides users on how to express intentions effectively, reducing misunderstandings with AI and clarifying their input.',\n    express_action: 'Start with Express',\n\n    confirm: 'Confirm',\n    confirm_title: `Process Confirm${comma}Fully in Control`,\n    confirm_desc:\n      'Keeps users informed of the AI’s task execution status, easing wait-time anxiety and providing a sense of control.',\n    confirm_action: 'Start with Confirm',\n\n    feedback: 'Feedback',\n    feedback_title: `Result Feedback${comma}Built-in Trust`,\n    feedback_desc:\n      'Clearly displays AI task completion, fostering trust, and enabling quick application of AI-generated results.',\n    feedback_action: 'Start with Feedback',\n  },\n};\n\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    container: css`\n    `,\n    content: css`\n      display: flex;\n      justify-content: space-between;\n      padding-top: ${token.pcContainerMargin}px;\n    `,\n    chain: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      max-width: 540px;\n    `,\n    lottie: css`\n      position: relative;\n      top: 0;\n      right: 0;\n      width: 540px;\n      z-index: 100;\n\n      & :first-child {\n        position: sticky;\n        top: ${token.pcContainerMargin}px;\n      }\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        display: none;\n      }\n    `,\n\n    chain_item: css`\n      display: flex;\n      gap: ${token.paddingLG}px;\n      color: #ffffff;\n    `,\n    chain_item_content: css`\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      gap: ${token.paddingLG}px;\n      overflow: hidden;\n      \n    `,\n    chain_item_line: css`\n      height: 630px;\n      width: 4px;\n      margin: 0 auto;\n    `,\n    chain_item_label: css`\n      font-size: ${token.fontSizeHeading4}px;\n      font-weight: bold;\n      line-height: 40px;\n    `,\n    chain_item_title: css`\n      font-size: ${token.fontSizeHeading1 + 10}px;\n      line-height: 56px;\n      font-weight: bold;\n\n      @media only screen and (max-width: ${token.mobileMaxWidth}px) {\n        font-size: ${token.fontSizeHeading2}px;\n      }\n    `,\n    chain_item_desc: css`\n      font-size: ${token.fontSizeHeading5}px;\n      line-height: 32px;\n      opacity: 0.65;\n    `,\n    chain_item_action: css`\n      background: #ffffff1a;\n      position: relative;\n      border-radius: 40px;\n      width: min-content;\n      padding: ${token.paddingLG}px;\n      overflow: hidden;\n      font-size: ${token.fontSizeHeading5}px;\n      font-weight: bold;\n      opacity: 0.9;\n      border: none !important;\n\n      &::after {\n        content: '';\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        border-radius: inherit;\n\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        inset-inline-start: 0;\n        inset-inline-end: 0;\n\n        padding: ${token.lineWidth}px;\n        background: linear-gradient(180deg, #ffffff26 0%, #ffffff00 100%);\n        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n        mask-composite: exclude;\n      };\n    `,\n\n    chain_item_icon: css`\n      width: 40px;\n      height: 40px;\n      position: relative;\n\n      img {\n        position: absolute;\n      }\n    `,\n  };\n});\n\nconst DesignGuide: React.FC = () => {\n  const [locale] = useLocale(locales);\n  const { styles } = useStyle();\n  const { pathname, search } = useLocation();\n  const navigate = useNavigate();\n\n  const { isMobile } = React.useContext(SiteContext);\n\n  const [lottieRef, animation] = useLottie({\n    renderer: 'svg',\n    loop: false,\n    autoplay: false,\n    disabled: isMobile,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n    path: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/file/A*OjRsQZWTEcQAAAAAAAAAAAAADgCCAQ',\n  });\n\n  React.useEffect(() => {\n    if (!animation) return;\n\n    const segments: [number, number][] = [\n      [0, 20],\n      [20, 55],\n      [55, 120],\n      [120, 157],\n    ];\n\n    const triggerPoints = [600, 1000, 1600, 2300].map((i) => i + window.innerHeight);\n\n    let currentSegment = -1;\n    let hasPlayedFirstSegment = false;\n\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY;\n      let newSegment = -1;\n\n      if (scrollY >= triggerPoints[0] && scrollY < triggerPoints[1]) {\n        newSegment = 0;\n      } else if (scrollY >= triggerPoints[1] && scrollY < triggerPoints[2]) {\n        newSegment = 1;\n      } else if (scrollY >= triggerPoints[2] && scrollY < triggerPoints[3]) {\n        newSegment = 2;\n      } else if (scrollY >= triggerPoints[3]) {\n        newSegment = 3;\n      }\n\n      if (newSegment !== currentSegment) {\n        currentSegment = newSegment;\n\n        if (currentSegment === 0) {\n          if (!hasPlayedFirstSegment) {\n            animation.playSegments(segments[0], true);\n            hasPlayedFirstSegment = true;\n          } else {\n            animation.goToAndStop(segments[0][0], true);\n          }\n        } else {\n          animation.playSegments(segments[currentSegment], true);\n        }\n      }\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, [animation]);\n\n  const items = [\n    {\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*NBliSL6_YIsAAAAAAAAAAAAADgCCAQ/original',\n      label: locale.awaken,\n      title: locale.awaken_title,\n      desc: locale.awaken_desc,\n      action: locale.awaken_action,\n      startColor: DESIGN_STAGE_COLOR.AWAKE.START,\n      endColor: DESIGN_STAGE_COLOR.AWAKE.END,\n      path: 'components/welcome',\n    },\n    {\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*3XXESYNxPNkAAAAAAAAAAAAADgCCAQ/original',\n      label: locale.express,\n      title: locale.express_title,\n      desc: locale.express_desc,\n      action: locale.express_action,\n      startColor: DESIGN_STAGE_COLOR.EXPRESS.START,\n      endColor: DESIGN_STAGE_COLOR.EXPRESS.END,\n      path: 'components/attachments',\n    },\n    {\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*pX3DR5MaxE8AAAAAAAAAAAAADgCCAQ/original',\n      label: locale.confirm,\n      title: locale.confirm_title,\n      desc: locale.confirm_desc,\n      action: locale.confirm_action,\n      startColor: DESIGN_STAGE_COLOR.CONFIRM.START,\n      endColor: DESIGN_STAGE_COLOR.CONFIRM.END,\n      path: 'components/thought-chain',\n    },\n    {\n      icon: 'https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*jVNbRLytvWMAAAAAAAAAAAAADgCCAQ/original',\n      label: locale.feedback,\n      title: locale.feedback_title,\n      desc: locale.feedback_desc,\n      action: locale.feedback_action,\n      startColor: DESIGN_STAGE_COLOR.FEEDBACK.START,\n      endColor: DESIGN_STAGE_COLOR.FEEDBACK.END,\n      path: 'components/bubble',\n    },\n  ];\n\n  return (\n    <Container className={styles.container} title={locale.title} desc={locale.desc}>\n      <div className={styles.content}>\n        <div className={styles.chain}>\n          {items.map((item, index) => {\n            const titleParts = item.title.split(item.label);\n\n            return (\n              <div className={styles.chain_item} key={item.label}>\n                <div>\n                  <div className={classnames(styles.chain_item_icon)}>\n                    <img alt=\"icon\" src={item.icon} loading=\"lazy\" />\n                    <img\n                      alt=\"icon\"\n                      src={item.icon}\n                      loading=\"lazy\"\n                      style={{ filter: 'blur(18px)' }}\n                    />\n                  </div>\n                  <div\n                    className={styles.chain_item_line}\n                    style={\n                      index === items.length - 1\n                        ? {}\n                        : {\n                            backgroundImage: `linear-gradient(180deg, ${item.startColor}00 0%, ${item.startColor} 25%, ${item.endColor} 75%, ${item.endColor}00 100%)`,\n                          }\n                    }\n                  />\n                </div>\n                <div className={styles.chain_item_content}>\n                  <div className={styles.chain_item_label}>\n                    <span style={{ paddingInlineEnd: 10 }}>{index + 1}.</span>\n                    {item.label}\n                  </div>\n                  <div className={styles.chain_item_title}>\n                    <span>{titleParts[0]}</span>\n                    <span\n                      style={{\n                        background: `linear-gradient(127deg, ${item.startColor} 23%, ${item.endColor} 100%)`,\n                        WebkitBackgroundClip: 'text',\n                        color: 'transparent',\n                      }}\n                    >\n                      {item.label}\n                    </span>\n                    <span style={{ maxWidth: '100%', display: 'inline-block' }}>\n                      {titleParts[1]}\n                    </span>\n                  </div>\n                  <div className={styles.chain_item_desc}>{item.desc}</div>\n                  <Button\n                    className={styles.chain_item_action}\n                    type=\"text\"\n                    size=\"large\"\n                    onClick={() =>\n                      navigate(getLocalizedPathname(item.path, isZhCN(pathname), search))\n                    }\n                  >\n                    {item.action}\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={styles.lottie}>\n          <div ref={lottieRef} />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default DesignGuide;\n","import { Flex, Input } from 'antd';\nimport classnames from 'classnames';\nimport { useMergedState } from 'rc-util';\nimport pickAttrs from 'rc-util/lib/pickAttrs';\nimport getValue from 'rc-util/lib/utils/get';\nimport React from 'react';\nimport useProxyImperativeHandle from '../_util/hooks/use-proxy-imperative-handle';\nimport useXComponentConfig from '../_util/hooks/use-x-component-config';\nimport { useXProviderContext } from '../x-provider';\nimport SenderHeader, { SendHeaderContext } from './SenderHeader';\nimport { ActionButtonContext } from './components/ActionButton';\nimport ClearButton from './components/ClearButton';\nimport LoadingButton from './components/LoadingButton';\nimport SendButton from './components/SendButton';\nimport SpeechButton from './components/SpeechButton';\nimport useStyle from './style';\nimport useSpeech, { type AllowSpeech } from './useSpeech';\n\nimport type { InputRef as AntdInputRef, ButtonProps, GetProps } from 'antd';\n\nexport type SubmitType = 'enter' | 'shiftEnter' | false;\n\ntype TextareaProps = GetProps<typeof Input.TextArea>;\n\nexport interface SenderComponents {\n  input?: React.ComponentType<TextareaProps>;\n}\n\nexport type ActionsRender = (\n  ori: React.ReactNode,\n  info: {\n    components: {\n      SendButton: React.ComponentType<ButtonProps>;\n      ClearButton: React.ComponentType<ButtonProps>;\n      LoadingButton: React.ComponentType<ButtonProps>;\n      SpeechButton: React.ComponentType<ButtonProps>;\n    };\n  },\n) => React.ReactNode;\n\nexport interface SenderProps\n  extends Pick<TextareaProps, 'placeholder' | 'onKeyPress' | 'onFocus' | 'onBlur'> {\n  prefixCls?: string;\n  defaultValue?: string;\n  value?: string;\n  loading?: boolean;\n  readOnly?: boolean;\n  submitType?: SubmitType;\n  disabled?: boolean;\n  onSubmit?: (message: string) => void;\n  onChange?: (\n    value: string,\n    event?: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => void;\n  onCancel?: VoidFunction;\n  onKeyDown?: React.KeyboardEventHandler<any>;\n  onPaste?: React.ClipboardEventHandler<HTMLElement>;\n  onPasteFile?: (firstFile: File, files: FileList) => void;\n  components?: SenderComponents;\n  styles?: {\n    prefix?: React.CSSProperties;\n    input?: React.CSSProperties;\n    actions?: React.CSSProperties;\n  };\n  rootClassName?: string;\n  classNames?: {\n    prefix?: string;\n    input?: string;\n    actions?: string;\n  };\n  style?: React.CSSProperties;\n  className?: string;\n  actions?: React.ReactNode | ActionsRender;\n  allowSpeech?: AllowSpeech;\n  prefix?: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport type SenderRef = {\n  nativeElement: HTMLDivElement;\n} & Pick<AntdInputRef, 'focus' | 'blur'>;\n\nfunction getComponent<T>(\n  components: SenderComponents | undefined,\n  path: string[],\n  defaultComponent: React.ComponentType<T>,\n): React.ComponentType<T> {\n  return getValue(components, path) || defaultComponent;\n}\n\nconst ForwardSender = React.forwardRef<SenderRef, SenderProps>((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    styles = {},\n    classNames = {},\n    className,\n    rootClassName,\n    style,\n    defaultValue,\n    value,\n    readOnly,\n    submitType = 'enter',\n    onSubmit,\n    loading,\n    components,\n    onCancel,\n    onChange,\n    actions,\n    onKeyPress,\n    onKeyDown,\n    disabled,\n    allowSpeech,\n    prefix,\n    header,\n    onPaste,\n    onPasteFile,\n    ...rest\n  } = props;\n\n  // ============================= MISC =============================\n  const { direction, getPrefixCls } = useXProviderContext();\n  const prefixCls = getPrefixCls('sender', customizePrefixCls);\n\n  // ============================= Refs =============================\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const inputRef = React.useRef<AntdInputRef>(null);\n\n  useProxyImperativeHandle(ref, () => ({\n    nativeElement: containerRef.current!,\n    focus: inputRef.current?.focus!,\n    blur: inputRef.current?.blur!,\n  }));\n\n  // ======================= Component Config =======================\n  const contextConfig = useXComponentConfig('sender');\n  const inputCls = `${prefixCls}-input`;\n\n  // ============================ Styles ============================\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const mergedCls = classnames(\n    prefixCls,\n    contextConfig.className,\n    className,\n    rootClassName,\n    hashId,\n    cssVarCls,\n    {\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-disabled`]: disabled,\n    },\n  );\n\n  const actionBtnCls = `${prefixCls}-actions-btn`;\n  const actionListCls = `${prefixCls}-actions-list`;\n\n  // ============================ Value =============================\n  const [innerValue, setInnerValue] = useMergedState(defaultValue || '', {\n    value,\n  });\n\n  const triggerValueChange: SenderProps['onChange'] = (nextValue, event) => {\n    setInnerValue(nextValue);\n\n    if (onChange) {\n      onChange(nextValue, event);\n    }\n  };\n\n  // ============================ Speech ============================\n  const [speechPermission, triggerSpeech, speechRecording] = useSpeech((transcript) => {\n    triggerValueChange(`${innerValue} ${transcript}`);\n  }, allowSpeech);\n\n  // ========================== Components ==========================\n  const InputTextArea = getComponent(components, ['input'], Input.TextArea);\n\n  const domProps = pickAttrs(rest, {\n    attr: true,\n    aria: true,\n    data: true,\n  });\n\n  const inputProps: typeof domProps = {\n    ...domProps,\n    ref: inputRef,\n  };\n\n  // ============================ Events ============================\n  const triggerSend = () => {\n    if (innerValue && onSubmit && !loading) {\n      onSubmit(innerValue);\n    }\n  };\n\n  const triggerClear = () => {\n    triggerValueChange('');\n  };\n\n  // ============================ Submit ============================\n  const isCompositionRef = React.useRef(false);\n\n  const onInternalCompositionStart = () => {\n    isCompositionRef.current = true;\n  };\n\n  const onInternalCompositionEnd = () => {\n    isCompositionRef.current = false;\n  };\n\n  const onInternalKeyPress: TextareaProps['onKeyPress'] = (e) => {\n    const canSubmit = e.key === 'Enter' && !isCompositionRef.current;\n\n    // Check for `submitType` to submit\n    switch (submitType) {\n      case 'enter':\n        if (canSubmit && !e.shiftKey) {\n          e.preventDefault();\n          triggerSend();\n        }\n        break;\n\n      case 'shiftEnter':\n        if (canSubmit && e.shiftKey) {\n          e.preventDefault();\n          triggerSend();\n        }\n        break;\n    }\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n  };\n\n  // ============================ Paste =============================\n  const onInternalPaste: React.ClipboardEventHandler<HTMLElement> = (e) => {\n    // Get files\n    const files = e.clipboardData?.files;\n    if (files?.length && onPasteFile) {\n      onPasteFile(files[0], files);\n      e.preventDefault();\n    }\n\n    onPaste?.(e);\n  };\n\n  // ============================ Focus =============================\n  const onContentMouseDown: React.MouseEventHandler<HTMLDivElement> = (e) => {\n    // If input focused but click on the container,\n    // input will lose focus.\n    // We call `preventDefault` to prevent this behavior\n    if (e.target !== containerRef.current?.querySelector(`.${inputCls}`)) {\n      e.preventDefault();\n    }\n\n    inputRef.current?.focus();\n  };\n\n  // ============================ Action ============================\n  let actionNode: React.ReactNode = (\n    <Flex className={`${actionListCls}-presets`}>\n      {allowSpeech && <SpeechButton />}\n      {/* Loading or Send */}\n      {loading ? <LoadingButton /> : <SendButton />}\n    </Flex>\n  );\n\n  // Custom actions\n  if (typeof actions === 'function') {\n    actionNode = actions(actionNode, {\n      components: {\n        SendButton,\n        ClearButton,\n        LoadingButton,\n        SpeechButton,\n      },\n    });\n  } else if (actions) {\n    actionNode = actions;\n  }\n\n  // ============================ Render ============================\n  return wrapCSSVar(\n    <div ref={containerRef} className={mergedCls} style={{ ...contextConfig.style, ...style }}>\n      {/* Header */}\n      {header && (\n        <SendHeaderContext.Provider value={{ prefixCls }}>{header}</SendHeaderContext.Provider>\n      )}\n\n      <div className={`${prefixCls}-content`} onMouseDown={onContentMouseDown}>\n        {/* Prefix */}\n        {prefix && (\n          <div\n            className={classnames(\n              `${prefixCls}-prefix`,\n              contextConfig.classNames.prefix,\n              classNames.prefix,\n            )}\n            style={{ ...contextConfig.styles.prefix, ...styles.prefix }}\n          >\n            {prefix}\n          </div>\n        )}\n\n        {/* Input */}\n        <InputTextArea\n          {...inputProps}\n          disabled={disabled}\n          style={{ ...contextConfig.styles.input, ...styles.input }}\n          className={classnames(inputCls, contextConfig.classNames.input, classNames.input)}\n          autoSize={{ maxRows: 8 }}\n          value={innerValue}\n          onChange={(event) => {\n            triggerValueChange(\n              (event.target as HTMLTextAreaElement).value,\n              event as React.ChangeEvent<HTMLTextAreaElement>,\n            );\n            triggerSpeech(true);\n          }}\n          onPressEnter={onInternalKeyPress}\n          onCompositionStart={onInternalCompositionStart}\n          onCompositionEnd={onInternalCompositionEnd}\n          onKeyDown={onKeyDown}\n          onPaste={onInternalPaste}\n          variant=\"borderless\"\n          readOnly={readOnly}\n        />\n\n        {/* Action List */}\n        <div\n          className={classnames(\n            actionListCls,\n            contextConfig.classNames.actions,\n            classNames.actions,\n          )}\n          style={{ ...contextConfig.styles.actions, ...styles.actions }}\n        >\n          <ActionButtonContext.Provider\n            value={{\n              prefixCls: actionBtnCls,\n              onSend: triggerSend,\n              onSendDisabled: !innerValue,\n              onClear: triggerClear,\n              onClearDisabled: !innerValue,\n              onCancel,\n              onCancelDisabled: !loading,\n              onSpeech: () => triggerSpeech(false),\n              onSpeechDisabled: !speechPermission,\n              speechRecording,\n              disabled,\n            }}\n          >\n            {actionNode}\n          </ActionButtonContext.Provider>\n        </div>\n      </div>\n    </div>,\n  );\n});\n\ntype CompoundedSender = typeof ForwardSender & {\n  Header: typeof SenderHeader;\n};\n\nconst Sender = ForwardSender as CompoundedSender;\n\nif (process.env.NODE_ENV !== 'production') {\n  Sender.displayName = 'Sender';\n}\n\nSender.Header = SenderHeader;\n\nexport default Sender;\n","\n  import '/home/runner/work/x/x/components/bubble/demo/gpt-vis.tsx?watch=parent';\n  export default \"import { Bubble } from '@ant-design/x';\\nimport type { BubbleProps } from '@ant-design/x';\\nimport { GPTVis } from '@antv/gpt-vis';\\nimport { Button, Flex } from 'antd';\\n/* eslint-disable react/no-danger */\\nimport React from 'react';\\n\\nconst text = `\\n**GPT-Vis**, Components for GPTs, generative AI, and LLM projects. Not only UI Components. [more...](https://github.com/antvis/GPT-Vis) \\\\n\\\\n\\n\\nHere’s a visualization of Haidilao's food delivery revenue from 2013 to 2022. You can see a steady increase over the years, with notable *growth* particularly in recent years.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [{\\\"time\\\":2013,\\\"value\\\":59.3},{\\\"time\\\":2014,\\\"value\\\":64.4},{\\\"time\\\":2015,\\\"value\\\":68.9},{\\\"time\\\":2016,\\\"value\\\":74.4},{\\\"time\\\":2017,\\\"value\\\":82.7},{\\\"time\\\":2018,\\\"value\\\":91.9},{\\\"time\\\":2019,\\\"value\\\":99.1},{\\\"time\\\":2020,\\\"value\\\":101.6},{\\\"time\\\":2021,\\\"value\\\":114.4},{\\\"time\\\":2022,\\\"value\\\":121}],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"sale\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => <GPTVis>{content}</GPTVis>;\\n\\nconst App = () => {\\n  const [rerenderKey, setRerenderKey] = React.useState(0);\\n\\n  return (\\n    <Flex vertical gap=\\\"small\\\" key={rerenderKey}>\\n      <Button\\n        style={{ alignSelf: 'flex-end' }}\\n        onClick={() => {\\n          setRerenderKey((prev) => prev + 1);\\n        }}\\n      >\\n        Re-Render\\n      </Button>\\n\\n      <Bubble\\n        typing={{ step: 20, interval: 150 }}\\n        content={text}\\n        messageRender={RenderMarkdown}\\n        avatar={{\\n          src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n        }}\\n        variant=\\\"outlined\\\"\\n      />\\n    </Flex>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  ","\n  import '/home/runner/work/x/x/components/thought-chain/demo/customization.tsx?watch=parent';\n  export default \"import React from 'react';\\nimport { ThoughtChain } from '@ant-design/x';\\nimport type { ThoughtChainProps, ThoughtChainItem } from '@ant-design/x';\\n\\nimport { CheckCircleOutlined, MoreOutlined } from '@ant-design/icons';\\n\\nimport { Card, Typography, Button } from 'antd';\\n\\nconst { Paragraph, Text } = Typography;\\n\\nconst customizationProps: ThoughtChainItem = {\\n  title: 'Thought Chain Item Title',\\n  description: 'description',\\n  icon: <CheckCircleOutlined />,\\n  extra: <Button type=\\\"text\\\" icon={<MoreOutlined />} />,\\n  footer: <Button block>Thought Chain Item Footer</Button>,\\n  content: (\\n    <Typography>\\n      <Paragraph>\\n        In the process of internal desktop applications development, many different design specs and\\n        implementations would be involved, which might cause designers and developers difficulties\\n        and duplication and reduce the efficiency of development.\\n      </Paragraph>\\n      <Paragraph>\\n        After massive project practice and summaries, Ant Design, a design language for background\\n        applications, is refined by Ant UED Team, which aims to{' '}\\n        <Text strong>\\n          uniform the user interface specs for internal background projects, lower the unnecessary\\n          cost of design differences and implementation and liberate the resources of design and\\n          front-end development\\n        </Text>\\n      </Paragraph>\\n    </Typography>\\n  ),\\n};\\n\\nconst items: ThoughtChainProps['items'] = [\\n  {\\n    ...customizationProps,\\n    status: 'success',\\n  },\\n  {\\n    ...customizationProps,\\n    status: 'error',\\n  },\\n  {\\n    ...customizationProps,\\n    status: 'pending',\\n  },\\n];\\n\\nexport default () => (\\n  <Card style={{ width: 500 }}>\\n    <ThoughtChain items={items} />\\n  </Card>\\n);\\n\";;\n  ","// @ts-ignore\nimport version from './version';\n\nexport default version;\n","\n  import '/home/runner/work/x/x/components/x-stream/demo/default-protocol.tsx?watch=parent';\n  export default \"import { TagsOutlined } from '@ant-design/icons';\\nimport { Bubble, ThoughtChain, XStream } from '@ant-design/x';\\nimport { Button, Splitter } from 'antd';\\nimport React from 'react';\\n\\nconst contentChunks = ['He', 'llo', ', w', 'or', 'ld!'];\\n\\nfunction mockReadableStream() {\\n  const sseChunks: string[] = [];\\n\\n  for (let i = 0; i < contentChunks.length; i++) {\\n    const sseEventPart = `event: message\\\\ndata: {\\\"id\\\":\\\"${i}\\\",\\\"content\\\":\\\"${contentChunks[i]}\\\"}\\\\n\\\\n`;\\n    sseChunks.push(sseEventPart);\\n  }\\n\\n  return new ReadableStream({\\n    async start(controller) {\\n      for (const chunk of sseChunks) {\\n        await new Promise((resolve) => setTimeout(resolve, 100));\\n        controller.enqueue(new TextEncoder().encode(chunk));\\n      }\\n      controller.close();\\n    },\\n  });\\n}\\n\\nconst App = () => {\\n  const [lines, setLines] = React.useState<Record<string, string>[]>([]);\\n  const content = lines.map((line) => JSON.parse(line.data).content).join('');\\n\\n  async function readStream() {\\n    // 🌟 Read the stream\\n    for await (const chunk of XStream({\\n      readableStream: mockReadableStream(),\\n    })) {\\n      console.log(chunk);\\n      setLines((pre) => [...pre, chunk]);\\n    }\\n  }\\n\\n  return (\\n    <Splitter>\\n      <Splitter.Panel>\\n        {/* -------------- Emit -------------- */}\\n        <Button type=\\\"primary\\\" onClick={readStream} style={{ marginBottom: 16 }}>\\n          Mock Default Protocol - SSE\\n        </Button>\\n        {/* -------------- Content Concat -------------- */}\\n        {content && <Bubble content={content} />}\\n      </Splitter.Panel>\\n      {/* -------------- Log -------------- */}\\n      <Splitter.Panel style={{ marginLeft: 16 }}>\\n        <ThoughtChain\\n          items={\\n            lines.length\\n              ? [\\n                  {\\n                    title: 'Mock Default Protocol - Log',\\n                    status: 'success',\\n                    icon: <TagsOutlined />,\\n                    content: (\\n                      <pre style={{ overflow: 'scroll' }}>\\n                        {lines.map((i) => (\\n                          <code key={i.data}>{i.data}</code>\\n                        ))}\\n                      </pre>\\n                    ),\\n                  },\\n                ]\\n              : []\\n          }\\n        />\\n      </Splitter.Panel>\\n    </Splitter>\\n  );\\n};\\n\\nexport default App;\\n\";;\n  "],"names":[],"mappings":"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"}