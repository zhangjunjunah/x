{"version":3,"sources":["components/x-stream/index.zh-CN.md?type=demo"],"sourcesContent":["import React from 'react';\nimport '/home/runner/work/x/x/components/x-stream/index.zh-CN.md?watch=parent';\nimport * as components_x_stream_demo_default_protocol_deps_1 from '@ant-design/icons';\nimport * as components_x_stream_demo_default_protocol_deps_2 from '@ant-design/x';\nimport * as components_x_stream_demo_default_protocol_deps_3 from 'antd';\nimport * as components_x_stream_demo_default_protocol_deps_4 from 'react';\nexport const demos = {\n  'components-x-stream-demo-default-protocol': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"demos\" */ '/home/runner/work/x/x/components/x-stream/demo/default-protocol.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"components-x-stream-demo-default-protocol\",\n  \"refAtomIds\": [],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/x/x/components/x-stream/demo/default-protocol.tsx?dumi-raw').default\n    },\n    \"@ant-design/icons\": {\n      \"type\": \"NPM\",\n      \"value\": \"5.6.1\"\n    },\n    \"@ant-design/x\": {\n      \"type\": \"NPM\",\n      \"value\": \"1.0.6\"\n    },\n    \"antd\": {\n      \"type\": \"NPM\",\n      \"value\": \"5.24.4\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"19.0.0\"\n    }\n  },\n  \"entry\": \"index.tsx\",\n  \"title\": \"默认协议 - SSE\",\n  \"description\": \"> SSE - https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events [https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events]\\n\\nXStream 默认的 transformStream 是用于 SSE 协议的流转换器。readableStream 接收一个 new ReadableStream(...) 实例，常见的如 await fetch(...).body\"\n},\n    context: {\n  \"@ant-design/icons\": components_x_stream_demo_default_protocol_deps_1,\n  \"@ant-design/x\": components_x_stream_demo_default_protocol_deps_2,\n  \"antd\": components_x_stream_demo_default_protocol_deps_3,\n  \"react\": components_x_stream_demo_default_protocol_deps_4\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/x/x/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'components-x-stream-demo-custom-protocol': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"demos\" */ '/home/runner/work/x/x/components/x-stream/demo/custom-protocol.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"components-x-stream-demo-custom-protocol\",\n  \"refAtomIds\": [],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/x/x/components/x-stream/demo/custom-protocol.tsx?dumi-raw').default\n    },\n    \"@ant-design/icons\": {\n      \"type\": \"NPM\",\n      \"value\": \"5.6.1\"\n    },\n    \"@ant-design/x\": {\n      \"type\": \"NPM\",\n      \"value\": \"1.0.6\"\n    },\n    \"antd\": {\n      \"type\": \"NPM\",\n      \"value\": \"5.24.4\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"19.0.0\"\n    }\n  },\n  \"entry\": \"index.tsx\",\n  \"title\": \"自定义协议\",\n  \"description\": \"> 在本示例中，我们将演示如何解析 SIP 协议, 该协议常用于 P2P 音视频会话协商。\\n\\n传入 transformStream 流转换器，该参数需接收一个 new TransformStream(...) 实例。\"\n},\n    context: {\n  \"@ant-design/icons\": components_x_stream_demo_default_protocol_deps_1,\n  \"@ant-design/x\": components_x_stream_demo_default_protocol_deps_2,\n  \"antd\": components_x_stream_demo_default_protocol_deps_3,\n  \"react\": components_x_stream_demo_default_protocol_deps_4\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/x/x/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n};"],"names":[],"mappings":"qRAMa,6CAAA,kCANK,eACX,wBAC2D,qBACA,qBACA,aAE3D,IAAM,EAAQ,CACnB,4CAA6C,CAC3C,UAAW,SAAK,CAAC,IAAI,CAAC,SAAK,CAAC,IAAI,CAAC,IAAM,kHACvC,MAAO,CACT,KAAQ,QACR,GAAM,4CACN,WAAc,EAAE,CAChB,aAAgB,CACd,YAAa,CACX,KAAQ,OACR,MAAS,EAAQ,YAAgF,OAAO,AAC1G,EACA,oBAAqB,CACnB,KAAQ,MACR,MAAS,OACX,EACA,gBAAiB,CACf,KAAQ,MACR,MAAS,OACX,EACA,KAAQ,CACN,KAAQ,MACR,MAAS,QACX,EACA,MAAS,CACP,KAAQ,MACR,MAAS,QACX,CACF,EACA,MAAS,YACT,MAAS,iCACT,YAAe,yYACjB,EACI,QAAS,CACX,oBAAqB,EACrB,gBAAiB,EACjB,KAAQ,EACR,MAAS,CACX,EACI,WAAY,CAEN,QAAS,MAAO,GAAG,IACV,AAAC,CAAA,MAAM,4FAAsF,EAAG,OAAO,IAAI,EAEtH,CACN,EACA,2CAA4C,CAC1C,UAAW,SAAK,CAAC,IAAI,CAAC,SAAK,CAAC,IAAI,CAAC,IAAM,kHACvC,MAAO,CACT,KAAQ,QACR,GAAM,2CACN,WAAc,EAAE,CAChB,aAAgB,CACd,YAAa,CACX,KAAQ,OACR,MAAS,EAAQ,YAA+E,OAAO,AACzG,EACA,oBAAqB,CACnB,KAAQ,MACR,MAAS,OACX,EACA,gBAAiB,CACf,KAAQ,MACR,MAAS,OACX,EACA,KAAQ,CACN,KAAQ,MACR,MAAS,QACX,EACA,MAAS,CACP,KAAQ,MACR,MAAS,QACX,CACF,EACA,MAAS,YACT,MAAS,iCACT,YAAe,qWACjB,EACI,QAAS,CACX,oBAAqB,EACrB,gBAAiB,EACjB,KAAQ,EACR,MAAS,CACX,EACI,WAAY,CAEN,QAAS,MAAO,GAAG,IACV,AAAC,CAAA,MAAM,4FAAsF,EAAG,OAAO,IAAI,EAEtH,CACN,CACF"}