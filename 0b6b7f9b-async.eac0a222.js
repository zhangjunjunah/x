(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["0b6b7f9b"],{"0b6b7f9b":function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return o;}}),d("a3631502");let o=[{value:"Need to build an input box for a dialogue scenario",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:5},{value:"Common props",paraId:2,tocIndex:5},{value:"Property",paraId:3,tocIndex:6},{value:"Description",paraId:3,tocIndex:6},{value:"Type",paraId:3,tocIndex:6},{value:"Default",paraId:3,tocIndex:6},{value:"Version",paraId:3,tocIndex:6},{value:"block",paraId:3,tocIndex:6},{value:"Take up the full width",paraId:3,tocIndex:6},{value:"boolean",paraId:3,tocIndex:6},{value:"false",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"children",paraId:3,tocIndex:6},{value:"Custom input box",paraId:3,tocIndex:6},{value:"({ onTrigger, onKeyDown }) => ReactElement",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"items",paraId:3,tocIndex:6},{value:"Suggestion list",paraId:3,tocIndex:6},{value:"SuggestionItem[] | ((info: T) => SuggestionItem[])",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"open",paraId:3,tocIndex:6},{value:"Controlled open panel",paraId:3,tocIndex:6},{value:"boolean",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"rootClassName",paraId:3,tocIndex:6},{value:"Root element class name",paraId:3,tocIndex:6},{value:"string",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"onSelect",paraId:3,tocIndex:6},{value:"Callback when the suggestion item is selected",paraId:3,tocIndex:6},{value:"(value: string) => void",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"onOpenChange",paraId:3,tocIndex:6},{value:"Callback when the panel open state changes",paraId:3,tocIndex:6},{value:"(open: boolean) => void",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"type onTrigger<T> = (info: T | false) => void;\n",paraId:4,tocIndex:7},{value:"Suggestion accepts generics to customize the parameter type passed to ",paraId:5,tocIndex:7},{value:"items",paraId:5,tocIndex:7},{value:" renderProps. When ",paraId:5,tocIndex:7},{value:"false",paraId:5,tocIndex:7},{value:" is passed, the suggestion panel is closed.",paraId:5,tocIndex:7},{value:"Property",paraId:6,tocIndex:8},{value:"Description",paraId:6,tocIndex:8},{value:"Type",paraId:6,tocIndex:8},{value:"Default",paraId:6,tocIndex:8},{value:"Version",paraId:6,tocIndex:8},{value:"children",paraId:6,tocIndex:8},{value:"Child item for the suggestion item",paraId:6,tocIndex:8},{value:"SuggestionItem[]",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"extra",paraId:6,tocIndex:8},{value:"Extra content for the suggestion item",paraId:6,tocIndex:8},{value:"ReactNode",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"icon",paraId:6,tocIndex:8},{value:"Icon for the suggestion",paraId:6,tocIndex:8},{value:"ReactNode",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"label",paraId:6,tocIndex:8},{value:"Content to display for the suggestion",paraId:6,tocIndex:8},{value:"ReactNode",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"value",paraId:6,tocIndex:8},{value:"Value of the suggestion item",paraId:6,tocIndex:8},{value:"string",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8},{value:"-",paraId:6,tocIndex:8}];}}]);
//# sourceMappingURL=0b6b7f9b-async.eac0a222.js.map