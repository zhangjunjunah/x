{"version":3,"sources":["components/sender/demo/_semantic.tsx?techStack=react","components/sender/demo/submitType.tsx?techStack=react","components/sender/demo/speech.tsx?techStack=react","components/sender/demo/paste-image.tsx?techStack=react","components/sender/demo/focus.tsx?techStack=react","components/sender/demo/actions.tsx?techStack=react","components/sender/demo/header.tsx?techStack=react","components/sender/demo/header-fixed.tsx?techStack=react","components/sender/demo/speech-custom.tsx?techStack=react","components/sender/demo/send-style.tsx?techStack=react","components/sender/demo/basic.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/x/x/components/sender/demo/_semantic.tsx?watch=parent';import { SmileOutlined } from '@ant-design/icons';\nimport { Sender } from '@ant-design/x';\nimport { Button, Divider, Flex } from 'antd';\nimport React from 'react';\nimport SemanticPreview from '../../../.dumi/components/SemanticPreview';\nimport useLocale from '../../../.dumi/hooks/useLocale';\n\nconst locales = {\n  cn: {\n    prefix: '前缀',\n    input: '输入框',\n    actions: '操作列表',\n  },\n  en: {\n    prefix: 'Prefix',\n    input: 'Input',\n    actions: 'Action List',\n  },\n};\n\nconst headerLocales = {\n  cn: {\n    header: '头部',\n    content: '内容',\n  },\n  en: {\n    header: 'Header',\n    content: 'Content',\n  },\n};\n\nconst App: React.FC = () => {\n  const [locale] = useLocale(locales);\n  const [headerLocale] = useLocale(headerLocales);\n\n  return (\n    <Flex vertical>\n      {/* Basic */}\n      <SemanticPreview\n        semantics={[\n          { name: 'prefix', desc: locale.prefix },\n          { name: 'input', desc: locale.input },\n          { name: 'actions', desc: locale.actions },\n        ]}\n      >\n        <Sender prefix={<Button type=\"text\" icon={<SmileOutlined />} />} />\n      </SemanticPreview>\n\n      <Divider style={{ margin: 0, padding: 0 }} />\n\n      {/* With Header */}\n      <SemanticPreview\n        semantics={[\n          { name: 'header', desc: headerLocale.header },\n          { name: 'content', desc: headerLocale.content },\n        ]}\n      >\n        {(injectProps) => (\n          <Sender\n            header={\n              <Sender.Header open title=\"Header\" {...injectProps}>\n                Content\n              </Sender.Header>\n            }\n          />\n        )}\n      </SemanticPreview>\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/sender/demo/submitType.tsx?watch=parent';import React from 'react';\nimport { Sender } from '@ant-design/x';\nimport { App } from 'antd';\n\nconst Demo: React.FC = () => {\n  const { message } = App.useApp();\n\n  return (\n    <Sender\n      submitType=\"shiftEnter\"\n      placeholder=\"Press Shift + Enter to send message\"\n      onSubmit={() => {\n        message.success('Send message successfully!');\n      }}\n    />\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/speech.tsx?watch=parent';import { Sender } from '@ant-design/x';\nimport { App } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const { message } = App.useApp();\n\n  return (\n    <Sender\n      onSubmit={() => {\n        message.success('Send message successfully!');\n      }}\n      allowSpeech\n    />\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/paste-image.tsx?watch=parent';import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Attachments, AttachmentsProps, Sender } from '@ant-design/x';\nimport { App, Button, Flex, type GetProp, type GetRef } from 'antd';\nimport React from 'react';\n\nconst Demo = () => {\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = React.useState<GetProp<AttachmentsProps, 'items'>>([]);\n  const [text, setText] = React.useState('');\n\n  const attachmentsRef = React.useRef<GetRef<typeof Attachments>>(null);\n\n  const senderRef = React.useRef<GetRef<typeof Sender>>(null);\n\n  const senderHeader = (\n    <Sender.Header\n      title=\"Attachments\"\n      styles={{\n        content: {\n          padding: 0,\n        },\n      }}\n      open={open}\n      onOpenChange={setOpen}\n      forceRender\n    >\n      <Attachments\n        ref={attachmentsRef}\n        // Mock not real upload file\n        beforeUpload={() => false}\n        items={items}\n        onChange={({ fileList }) => setItems(fileList)}\n        placeholder={(type) =>\n          type === 'drop'\n            ? {\n                title: 'Drop file here',\n              }\n            : {\n                icon: <CloudUploadOutlined />,\n                title: 'Upload files',\n                description: 'Click or drag files to this area to upload',\n              }\n        }\n        getDropContainer={() => senderRef.current?.nativeElement}\n      />\n    </Sender.Header>\n  );\n\n  return (\n    <Flex style={{ height: 220 }} align=\"end\">\n      <Sender\n        ref={senderRef}\n        header={senderHeader}\n        prefix={\n          <Button\n            type=\"text\"\n            icon={<LinkOutlined />}\n            onClick={() => {\n              setOpen(!open);\n            }}\n          />\n        }\n        value={text}\n        onChange={setText}\n        onPasteFile={(_, files) => {\n          for (const file of files) {\n            attachmentsRef.current?.upload(file);\n          }\n          setOpen(true);\n        }}\n        onSubmit={() => {\n          setItems([]);\n          setText('');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/focus.tsx?watch=parent';import { Sender } from '@ant-design/x';\nimport { Button, Flex, type GetRef } from 'antd';\nimport React, { useRef } from 'react';\n\nconst App: React.FC = () => {\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  const senderProps = {\n    defaultValue: 'Hello, welcome to use Ant Design X!',\n    ref: senderRef,\n  };\n\n  return (\n    <Flex wrap gap={12}>\n      <Button\n        onClick={() => {\n          senderRef.current!.focus({\n            cursor: 'start',\n          });\n        }}\n      >\n        Focus at first\n      </Button>\n      <Button\n        onClick={() => {\n          senderRef.current!.focus({\n            cursor: 'end',\n          });\n        }}\n      >\n        Focus at last\n      </Button>\n      <Button\n        onClick={() => {\n          senderRef.current!.focus({\n            cursor: 'all',\n          });\n        }}\n      >\n        Focus to select all\n      </Button>\n      <Button\n        onClick={() => {\n          senderRef.current!.focus({\n            preventScroll: true,\n          });\n        }}\n      >\n        Focus prevent scroll\n      </Button>\n      <Button\n        onClick={() => {\n          senderRef.current!.blur();\n        }}\n      >\n        Blur\n      </Button>\n      <Sender {...senderProps} />\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/home/runner/work/x/x/components/sender/demo/actions.tsx?watch=parent';import { OpenAIOutlined } from '@ant-design/icons';\nimport { Sender } from '@ant-design/x';\nimport { App, Space, Spin, Typography } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n\n  const { message } = App.useApp();\n\n  React.useEffect(() => {\n    if (loading) {\n      const timer = setTimeout(() => {\n        setLoading(false);\n        setValue('');\n        message.success('Send message successfully!');\n      }, 2000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [loading]);\n\n  return (\n    <Sender\n      submitType=\"shiftEnter\"\n      value={value}\n      loading={loading}\n      onChange={setValue}\n      onSubmit={() => {\n        setLoading(true);\n      }}\n      onCancel={() => {\n        setLoading(false);\n      }}\n      actions={(_, info) => {\n        const { SendButton, LoadingButton, ClearButton, SpeechButton } = info.components;\n\n        return (\n          <Space size=\"small\">\n            <Typography.Text type=\"secondary\">\n              <small>`Shift + Enter` to submit</small>\n            </Typography.Text>\n            <ClearButton />\n            <SpeechButton />\n            {loading ? (\n              <LoadingButton type=\"default\" icon={<Spin size=\"small\" />} disabled />\n            ) : (\n              <SendButton type=\"primary\" icon={<OpenAIOutlined />} disabled={false} />\n            )}\n          </Space>\n        );\n      }}\n    />\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/header.tsx?watch=parent';import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Sender } from '@ant-design/x';\nimport { App, Button, Flex, Typography, theme } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const { message } = App.useApp();\n  const { token } = theme.useToken();\n\n  const [open, setOpen] = React.useState(false);\n\n  const headerNode = (\n    <Sender.Header title=\"Upload Sample\" open={open} onOpenChange={setOpen}>\n      <Flex vertical align=\"center\" gap=\"small\" style={{ marginBlock: token.paddingLG }}>\n        <CloudUploadOutlined style={{ fontSize: '4em' }} />\n        <Typography.Title level={5} style={{ margin: 0 }}>\n          Drag file here (just demo)\n        </Typography.Title>\n        <Typography.Text type=\"secondary\">\n          Support pdf, doc, xlsx, ppt, txt, image file types\n        </Typography.Text>\n        <Button\n          onClick={() => {\n            message.info('Mock select file');\n          }}\n        >\n          Select File\n        </Button>\n      </Flex>\n    </Sender.Header>\n  );\n\n  return (\n    <Flex style={{ height: 350 }} align=\"end\">\n      <Sender\n        header={headerNode}\n        prefix={\n          <Button\n            type=\"text\"\n            icon={<LinkOutlined />}\n            onClick={() => {\n              setOpen(!open);\n            }}\n          />\n        }\n        placeholder=\"← Click to open\"\n        onSubmit={() => {\n          message.success('Send message successfully!');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/header-fixed.tsx?watch=parent';import { EnterOutlined } from '@ant-design/icons';\nimport { Sender } from '@ant-design/x';\nimport { App, Flex, Space, Switch, Typography } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const { message } = App.useApp();\n  const [hasRef, setHasRef] = React.useState(true);\n\n  const headerNode = (\n    <Sender.Header\n      open={hasRef}\n      title={\n        <Space>\n          <EnterOutlined />\n          <Typography.Text type=\"secondary\">\"Tell more about Ant Design X\"</Typography.Text>\n        </Space>\n      }\n      onOpenChange={setHasRef}\n    />\n  );\n\n  return (\n    <Flex vertical gap=\"middle\" align=\"flex-start\">\n      <Switch\n        checked={hasRef}\n        onChange={() => setHasRef(!hasRef)}\n        checkedChildren=\"With Reference\"\n        unCheckedChildren=\"With Reference\"\n      />\n      <Sender\n        header={headerNode}\n        onSubmit={() => {\n          message.success('Send message successfully!');\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/speech-custom.tsx?watch=parent';import { Sender } from '@ant-design/x';\nimport { App } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const { message } = App.useApp();\n  const [recording, setRecording] = React.useState(false);\n\n  return (\n    <Sender\n      onSubmit={() => {\n        message.success('Send message successfully!');\n      }}\n      allowSpeech={{\n        // When setting `recording`, the built-in speech recognition feature will be disabled\n        recording,\n        onRecordingChange: (nextRecording) => {\n          message.info(`Mock Customize Recording: ${nextRecording}`);\n          setRecording(nextRecording);\n        },\n      }}\n    />\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/send-style.tsx?watch=parent';import { SendOutlined } from '@ant-design/icons';\nimport { Sender } from '@ant-design/x';\nimport { App, type ButtonProps, Flex, Tooltip } from 'antd';\nimport React from 'react';\n\nconst Demo: React.FC = () => {\n  const [value, setValue] = React.useState('Ask something?');\n  const [loading, setLoading] = React.useState(false);\n\n  const { message } = App.useApp();\n\n  React.useEffect(() => {\n    if (loading) {\n      const timer = setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [loading]);\n\n  const renderSend = (\n    props: ButtonProps & { ignoreLoading?: boolean; placeholder?: string } = {},\n  ) => {\n    const { ignoreLoading, placeholder, ...btnProps } = props;\n\n    return (\n      <Sender\n        value={value}\n        onChange={setValue}\n        loading={loading}\n        onSubmit={(msg) => {\n          message.success(`Send: ${msg}`);\n          setValue('');\n          setLoading(true);\n        }}\n        placeholder={placeholder}\n        onCancel={() => {\n          setLoading(false);\n        }}\n        actions={(_, info) => {\n          const { SendButton, LoadingButton } = info.components;\n\n          if (!ignoreLoading && loading) {\n            return (\n              <Tooltip title=\"Click to cancel\">\n                <LoadingButton />\n              </Tooltip>\n            );\n          }\n\n          let node = <SendButton {...btnProps} />;\n\n          if (!ignoreLoading) {\n            node = (\n              <Tooltip title={value ? 'Send \\u21B5' : 'Please type something'}>{node}</Tooltip>\n            );\n          }\n\n          return node;\n        }}\n      />\n    );\n  };\n\n  return (\n    <Flex vertical gap=\"middle\">\n      {renderSend({\n        shape: 'default',\n        placeholder: 'Change button border radius',\n        style: { borderRadius: 12 },\n      })}\n      {renderSend({\n        variant: 'text',\n        placeholder: 'Change button icon',\n        color: 'primary',\n        icon: <SendOutlined />,\n        shape: 'default',\n      })}\n      {renderSend({ ignoreLoading: true, placeholder: 'Loading not change button' })}\n    </Flex>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/home/runner/work/x/x/components/sender/demo/basic.tsx?watch=parent';import { Sender } from '@ant-design/x';\nimport { App, Flex } from 'antd';\nimport React, { useState } from 'react';\n\nconst Demo: React.FC = () => {\n  const [value, setValue] = useState<string>('Hello? this is X!');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const { message } = App.useApp();\n\n  // Mock send message\n  React.useEffect(() => {\n    if (loading) {\n      const timer = setTimeout(() => {\n        setLoading(false);\n        message.success('Send message successfully!');\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [loading]);\n\n  return (\n    <Flex vertical gap=\"middle\">\n      <Sender\n        loading={loading}\n        value={value}\n        onChange={(v) => {\n          setValue(v);\n        }}\n        onSubmit={() => {\n          setValue('');\n          setLoading(true);\n          message.info('Send message!');\n        }}\n        onCancel={() => {\n          setLoading(false);\n          message.error('Cancel sending!');\n        }}\n      />\n      <Sender value=\"Force as loading\" loading readOnly />\n      <Sender disabled value=\"Set to disabled\" />\n    </Flex>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n"],"names":[],"mappings":"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"}