{"version":3,"sources":["components/thought-chain/demo/status.tsx?techStack=react"],"sourcesContent":["import '/home/runner/work/x/x/components/thought-chain/demo/status.tsx?watch=parent';import React from 'react';\nimport { ThoughtChain } from '@ant-design/x';\nimport { Card, Button } from 'antd';\nimport { CheckCircleOutlined, InfoCircleOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport type { ThoughtChainItem } from '@ant-design/x';\n\nfunction getStatusIcon(status: ThoughtChainItem['status']) {\n  switch (status) {\n    case 'success':\n      return <CheckCircleOutlined />;\n    case 'error':\n      return <InfoCircleOutlined />;\n    case 'pending':\n      return <LoadingOutlined />;\n    default:\n      return undefined;\n  }\n}\n\nconst mockServerResponseData: ThoughtChainItem[] = [\n  {\n    title: 'Thought Chain Item - 1',\n    status: 'success',\n    description: 'status: success',\n    icon: getStatusIcon('success'),\n  },\n  {\n    title: 'Thought Chain Item - 2',\n    status: 'error',\n    description: 'status: error',\n    icon: getStatusIcon('error'),\n  },\n];\n\nconst delay = (ms: number) => {\n  return new Promise<void>((resolve) => {\n    const timer: NodeJS.Timeout = setTimeout(() => {\n      clearTimeout(timer);\n      resolve();\n    }, ms);\n  });\n};\n\nfunction addChainItem() {\n  mockServerResponseData.push({\n    title: `Thought Chain Item - ${mockServerResponseData.length + 1}`,\n    status: 'pending',\n    icon: getStatusIcon('pending'),\n    description: 'status: pending',\n  });\n}\n\nasync function updateChainItem(status: ThoughtChainItem['status']) {\n  await delay(800);\n  mockServerResponseData[mockServerResponseData.length - 1].status = status;\n  mockServerResponseData[mockServerResponseData.length - 1].icon = getStatusIcon(status);\n  mockServerResponseData[mockServerResponseData.length - 1].description = `status: ${status}`;\n}\n\nexport default () => {\n  const [items, setItems] = React.useState<ThoughtChainItem[]>(mockServerResponseData);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const mockStatusChange = async () => {\n    await updateChainItem('error');\n    setItems([...mockServerResponseData]);\n    await updateChainItem('pending');\n    setItems([...mockServerResponseData]);\n    await updateChainItem('success');\n    setItems([...mockServerResponseData]);\n  };\n\n  const onClick = async () => {\n    setLoading(true);\n    addChainItem();\n    setItems([...mockServerResponseData]);\n    await mockStatusChange();\n    setLoading(false);\n  };\n\n  return (\n    <Card style={{ width: 500 }}>\n      <Button onClick={onClick} style={{ marginBottom: 16 }} loading={loading}>\n        {loading ? 'Running' : 'Run Next'}\n      </Button>\n      <ThoughtChain items={items} />\n    </Card>\n  );\n};\n"],"names":[],"mappings":"+PA4DA,+CAAA,4CA5DO,wBAAgG,iBAC1E,gBACA,gBAC4C,YAIzE,SAAS,EAAc,CAAkC,EACvD,OAAQ,GACN,IAAK,UACH,MAAO,UAAC,qBAAmB,KAC7B,IAAK,QACH,MAAO,UAAC,oBAAkB,KAC5B,IAAK,UACH,MAAO,UAAC,iBAAe,KACzB,QACE,OACJ,CACF,CAEA,IAAM,EAA6C,CACjD,CACE,MAAO,yBACP,OAAQ,UACR,YAAa,kBACb,KAAM,EAAc,UACtB,EACA,CACE,MAAO,yBACP,OAAQ,QACR,YAAa,gBACb,KAAM,EAAc,QACtB,EACD,CAEK,EAAQ,AAAC,GACN,IAAI,QAAc,AAAC,IACxB,IAAM,EAAwB,WAAW,KACvC,aAAa,GACb,IACF,EAAG,GACL,GAYF,eAAe,EAAgB,CAAkC,EAC/D,MAAM,EAAM,KACZ,CAAsB,CAAC,EAAuB,MAAM,CAAG,EAAE,CAAC,MAAM,CAAG,EACnE,CAAsB,CAAC,EAAuB,MAAM,CAAG,EAAE,CAAC,IAAI,CAAG,EAAc,GAC/E,CAAsB,CAAC,EAAuB,MAAM,CAAG,EAAE,CAAC,WAAW,CAAG,CAAC,QAAQ,EAAE,EAAO,CAAC,CAC7F,KAEA,EAAe,KACb,GAAM,CAAC,EAAO,EAAS,CAAG,SAAK,CAAC,QAAQ,CAAqB,GACvD,CAAC,EAAS,EAAW,CAAG,SAAK,CAAC,QAAQ,CAAU,CAAA,GAEhD,EAAmB,UACvB,MAAM,EAAgB,SACtB,EAAS,IAAI,EAAuB,EACpC,MAAM,EAAgB,WACtB,EAAS,IAAI,EAAuB,EACpC,MAAM,EAAgB,WACtB,EAAS,IAAI,EAAuB,EACtC,EAEM,EAAU,UACd,EAAW,CAAA,GA7Bb,EAAuB,IAAI,CAAC,CAC1B,MAAO,CAAC,qBAAqB,EAAE,EAAuB,MAAM,CAAG,EAAE,CAAC,CAClE,OAAQ,UACR,KAAM,EAAc,WACpB,YAAa,iBACf,GA0BE,EAAS,IAAI,EAAuB,EACpC,MAAM,IACN,EAAW,CAAA,GACb,EAEA,MACE,WAAC,MAAI,EAAC,MAAO,CAAE,MAAO,GAAI,YACxB,UAAC,QAAM,EAAC,QAAS,EAAS,MAAO,CAAE,aAAc,EAAG,EAAG,QAAS,WAC7D,EAAU,UAAY,aAEzB,UAAC,cAAY,EAAC,MAAO,OAG3B"}