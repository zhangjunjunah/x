(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["348cb242"],{"348cb242":function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return I;}}),d("e194f38b");let I=[{value:"Need to build an input box for a dialogue scenario",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:12},{value:"Common props",paraId:2,tocIndex:12},{value:"Property",paraId:3,tocIndex:13},{value:"Description",paraId:3,tocIndex:13},{value:"Type",paraId:3,tocIndex:13},{value:"Default",paraId:3,tocIndex:13},{value:"Version",paraId:3,tocIndex:13},{value:"actions",paraId:3,tocIndex:13},{value:"Custom actions",paraId:3,tocIndex:13},{value:"ReactNode | (oriNode, info: { components }) => ReactNode",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"allowSpeech",paraId:3,tocIndex:13},{value:"Whether to allow speech input",paraId:3,tocIndex:13},{value:"boolean | SpeechConfig",paraId:3,tocIndex:13},{value:"false",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"classNames",paraId:3,tocIndex:13},{value:"Class name",paraId:3,tocIndex:13},{value:"See below",paraId:4,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"components",paraId:3,tocIndex:13},{value:"Custom components",paraId:3,tocIndex:13},{value:"Record<'input', ComponentType>",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"defaultValue",paraId:3,tocIndex:13},{value:"Default value of input",paraId:3,tocIndex:13},{value:"string",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"disabled",paraId:3,tocIndex:13},{value:"Whether to disable",paraId:3,tocIndex:13},{value:"boolean",paraId:3,tocIndex:13},{value:"false",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"loading",paraId:3,tocIndex:13},{value:"Whether it is loading",paraId:3,tocIndex:13},{value:"boolean",paraId:3,tocIndex:13},{value:"false",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"header",paraId:3,tocIndex:13},{value:"Header panel",paraId:3,tocIndex:13},{value:"ReactNode",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"prefix",paraId:3,tocIndex:13},{value:"Prefix content",paraId:3,tocIndex:13},{value:"ReactNode",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"readOnly",paraId:3,tocIndex:13},{value:"Whether to make the input box read-only",paraId:3,tocIndex:13},{value:"boolean",paraId:3,tocIndex:13},{value:"false",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"rootClassName",paraId:3,tocIndex:13},{value:"Root element class name",paraId:3,tocIndex:13},{value:"string",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"styles",paraId:3,tocIndex:13},{value:"Semantic DOM style",paraId:3,tocIndex:13},{value:"See below",paraId:5,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"submitType",paraId:3,tocIndex:13},{value:"Submit type",paraId:3,tocIndex:13},{value:"SubmitType",paraId:3,tocIndex:13},{value:"enter",paraId:3,tocIndex:13},{value:" | ",paraId:3,tocIndex:13},{value:"shiftEnter",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"value",paraId:3,tocIndex:13},{value:"Input value",paraId:3,tocIndex:13},{value:"string",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"onSubmit",paraId:3,tocIndex:13},{value:"Callback when click send button",paraId:3,tocIndex:13},{value:"(message: string) => void",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"onChange",paraId:3,tocIndex:13},{value:"Callback when input value changes",paraId:3,tocIndex:13},{value:"(value: string, event?: React.FormEvent<",paraId:3,tocIndex:13},{value:"HTMLTextAreaElement",paraId:3,tocIndex:13},{value:"> | React.ChangeEvent<",paraId:3,tocIndex:13},{value:"HTMLTextAreaElement",paraId:3,tocIndex:13},{value:"> ) => void",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"onCancel",paraId:3,tocIndex:13},{value:"Callback when click cancel button",paraId:3,tocIndex:13},{value:"() => void",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"onPasteFile",paraId:3,tocIndex:13},{value:"Callback when paste files",paraId:3,tocIndex:13},{value:"(firstFile: File, files: FileList) => void",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"-",paraId:3,tocIndex:13},{value:"type SpeechConfig = {\n  // When setting `recording`, the built-in speech input function will be disabled.\n  // It is up to the developer to implement the third-party speech input function.\n  recording?: boolean;\n  onRecordingChange?: (recording: boolean) => void;\n};\n",paraId:6,tocIndex:13},{value:"Property",paraId:7,tocIndex:14},{value:"Description",paraId:7,tocIndex:14},{value:"Type",paraId:7,tocIndex:14},{value:"Default",paraId:7,tocIndex:14},{value:"Version",paraId:7,tocIndex:14},{value:"nativeElement",paraId:7,tocIndex:14},{value:"Outer container",paraId:7,tocIndex:14},{value:"HTMLDivElement",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"focus",paraId:7,tocIndex:14},{value:"Set focus",paraId:7,tocIndex:14},{value:"(option?: { preventScroll?: boolean, cursor?: 'start' | 'end' | 'all' })",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"blur",paraId:7,tocIndex:14},{value:"Remove focus",paraId:7,tocIndex:14},{value:"() => void",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"-",paraId:7,tocIndex:14},{value:"Property",paraId:8,tocIndex:15},{value:"Description",paraId:8,tocIndex:15},{value:"Type",paraId:8,tocIndex:15},{value:"Default",paraId:8,tocIndex:15},{value:"Version",paraId:8,tocIndex:15},{value:"children",paraId:8,tocIndex:15},{value:"Panel content",paraId:8,tocIndex:15},{value:"ReactNode",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"closable",paraId:8,tocIndex:15},{value:"Whether to close",paraId:8,tocIndex:15},{value:"boolean",paraId:8,tocIndex:15},{value:"true",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"forceRender",paraId:8,tocIndex:15},{value:"Force render, use when need ref internal elements on init",paraId:8,tocIndex:15},{value:"boolean",paraId:8,tocIndex:15},{value:"false",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"open",paraId:8,tocIndex:15},{value:"Whether to expand",paraId:8,tocIndex:15},{value:"boolean",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"title",paraId:8,tocIndex:15},{value:"Title content",paraId:8,tocIndex:15},{value:"ReactNode",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"onOpenChange",paraId:8,tocIndex:15},{value:"Callback when the expansion state changes",paraId:8,tocIndex:15},{value:"(open: boolean) => void",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15},{value:"-",paraId:8,tocIndex:15}];}}]);
//# sourceMappingURL=348cb242-async.f7806b35.js.map