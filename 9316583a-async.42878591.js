(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["9316583a"],{"9316583a":function(n,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"default",{enumerable:!0,get:function(){return c;}});var s=t("777fffbe"),i=t("8090cfc0"),o=t("3a2876c3"),a=s._(t("b710171f")),r=t("3e6b097d");function l(){let{texts:n}=(0,o.useRouteMeta)();return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(o.DumiDemo,{demo:{id:"docs-playground-independent-demo-independent"},previewerProps:{background:"grey",compact:!0,filename:"docs/playground/independent.tsx",pkgDependencyList:{"@ant-design/tools":"^18.0.2","@ant-design/v5-patch-for-react-19":"^1.0.3","@antv/gpt-vis":"^0.4.1","@biomejs/biome":"^1.9.0","@codecov/webpack-plugin":"^1.4.0","@codesandbox/sandpack-react":"^2.19.8","@ctrl/tinycolor":"^4.1.0","@emotion/react":"^11.13.5","@emotion/server":"^11.11.0","@happy-dom/jest-environment":"^17.4.3","@ianvs/prettier-plugin-sort-imports":"^4.3.1","@madccc/duplicate-package-checker-webpack-plugin":"^1.0.0","@microflash/rehype-figure":"^2.1.1","@npmcli/run-script":"^9.0.1","@octokit/rest":"^21.0.2","@petercatai/assistant":"^2.0.13","@qixian.cs/github-contributors-list":"^2.0.2","@rc-component/father-plugin":"^2.0.4","@rc-component/np":"^1.0.3","@rc-component/trigger":"^2.2.3","@size-limit/file":"^11.1.5","@stackblitz/sdk":"^1.11.0","@testing-library/dom":"^10.4.0","@testing-library/jest-dom":"^6.5.0","@testing-library/react":"^16.0.1","@testing-library/user-event":"^14.5.2","@types/adm-zip":"^0.5.5","@types/ali-oss":"^6.16.11","@types/cli-progress":"^3.11.6","@types/fs-extra":"^11.0.4","@types/gtag.js":"^0.0.20","@types/http-server":"^0.12.4","@types/inquirer":"^9.0.7","@types/isomorphic-fetch":"^0.0.39","@types/jest":"^29.5.13","@types/jest-axe":"^3.5.9","@types/jest-environment-puppeteer":"^5.0.6","@types/jest-image-snapshot":"^6.4.0","@types/jquery":"^3.5.30","@types/jsdom":"^21.1.7","@types/lodash":"^4.17.7","@types/markdown-it":"^14.1.2","@types/minimist":"^1.2.5","@types/node":"^22.5.5","@types/ora":"^3.2.0","@types/pixelmatch":"^5.2.6","@types/pngjs":"^6.0.5","@types/prismjs":"^1.26.4","@types/progress":"^2.0.7","@types/qs":"^6.9.16","@types/react":"^19.0.2","@types/react-copy-to-clipboard":"^5.0.7","@types/react-dom":"^19.0.2","@types/react-highlight-words":"^0.20.0","@types/react-resizable":"^3.0.8","@types/semver":"^7.5.8","@types/spinnies":"^0.5.3","@types/tar":"^6.1.13","@types/throttle-debounce":"^5.0.2","@types/warning":"^3.0.3","@umijs/fabric":"^4.0.1","adm-zip":"^0.5.16","ali-oss":"^6.21.0",antd:"^5.22.7","antd-style":"^3.6.3","antd-token-previewer":"^2.0.8",axios:"^1.7.7",browserslist:"^4.23.3","browserslist-to-esbuild":"^2.1.1",chalk:"^5.4.1",cheerio:"^1.0.0","circular-dependency-plugin":"^5.2.2","cli-progress":"^3.12.0","copy-to-clipboard":"^3.3.3","cross-env":"^7.0.3","cross-fetch":"^4.0.0",crypto:"^1.0.1",dayjs:"^1.11.13",dekko:"^0.2.1",dumi:"^2.4.17","dumi-plugin-color-chunk":"^1.1.2","esbuild-loader":"^4.2.2","fast-glob":"^3.3.2",father:"4.5.2","fetch-jsonp":"^1.3.0","fs-extra":"^11.2.0","gh-pages":"^6.1.1",glob:"^11.0.0","happy-dom":"^17.4.3",html2sketch:"^1.0.2","http-server":"^14.1.1",husky:"^9.1.6","identity-obj-proxy":"^3.0.0",immer:"^10.1.1",inquirer:"^12.1.0","is-ci":"^4.1.0","isomorphic-fetch":"^3.0.0",jest:"^29.7.0","jest-axe":"^10.0.0","jest-canvas-mock":"^2.5.2","jest-environment-node":"^29.7.0","jest-image-snapshot":"^6.4.0","jest-puppeteer":"^11.0.0",jquery:"^3.7.1",jsdom:"^26.0.0","jsonml-to-react-element":"^1.1.11","jsonml.js":"^0.1.0","lint-staged":"^15.2.10",lodash:"^4.17.21","lottie-web":"^5.12.2","lunar-typescript":"^1.7.5","lz-string":"^1.5.0","markdown-it":"^14.1.0",minimist:"^1.2.8",mockdate:"^3.0.5","node-fetch":"^3.3.2","node-notifier":"^10.0.1",open:"^10.1.0",ora:"^8.1.0",pixelmatch:"^7.1.0",pngjs:"^7.0.0",prettier:"^3.3.3","prettier-plugin-jsdoc":"^1.3.0","pretty-format":"^29.7.0",prismjs:"^1.29.0",puppeteer:"^24.0.0",qs:"^6.13.0","rc-drawer":"^8.0.0","rc-footer":"^0.6.8","rc-resize-observer":"^1.4.0","rc-virtual-list":"^3.14.5",react:"^19.0.0","react-copy-to-clipboard":"^5.1.0","react-countup":"^6.5.3","react-dom":"^19.0.0","react-highlight-words":"^0.20.0","react-infinite-scroll-component":"^6.1.0","react-intersection-observer":"^9.13.1","react-intl":"7.1.6","react-resizable":"^3.0.5","react-router-dom":"^7.0.1","react-sticky-box":"^2.0.5","regenerator-runtime":"^0.14.1","rehype-stringify":"^10.0.0",remark:"^15.0.1","remark-cli":"^12.0.1","remark-gfm":"^4.0.0","remark-lint":"^10.0.0","remark-lint-no-undefined-references":"^5.0.0","remark-preset-lint-recommended":"^7.0.0","remark-rehype":"^11.1.0","scroll-into-view-if-needed":"^3.1.0",semver:"^7.6.3",sharp:"^0.33.5","simple-git":"^3.26.0","size-limit":"^11.1.5",spinnies:"^0.5.1",stylelint:"^16.9.0","stylelint-config-rational-order":"^0.1.2","stylelint-config-standard":"^37.0.0","stylelint-prettier":"^5.0.2",sylvanas:"^0.6.1",tar:"^7.4.3","tar-fs":"^3.0.6",terser:"^5.32.0",tsx:"^4.19.1",typedoc:"^0.28.0",typescript:"~5.8.2","vanilla-jsoneditor":"^3.0.0","vanilla-tilt":"^1.8.1","web-streams-polyfill":"^4.0.0",webpack:"^5.94.0","webpack-bundle-analyzer":"^4.10.2","@ant-design/colors":"^7.1.0","@ant-design/cssinjs":"^1.21.1","@ant-design/cssinjs-utils":"^1.1.0","@ant-design/fast-color":"^2.0.6","@ant-design/icons":"^5.4.0","@babel/runtime":"^7.25.6",classnames:"^2.5.1","rc-motion":"^2.9.2","rc-util":"^5.43.0"},jsx:"import {\n  Attachments,\n  Bubble,\n  Conversations,\n  Prompts,\n  Sender,\n  Welcome,\n  useXAgent,\n  useXChat,\n} from '@ant-design/x';\nimport { createStyles } from 'antd-style';\nimport React, { useEffect } from 'react';\nimport {\n  CloudUploadOutlined,\n  CommentOutlined,\n  EllipsisOutlined,\n  FireOutlined,\n  HeartOutlined,\n  PaperClipOutlined,\n  PlusOutlined,\n  ReadOutlined,\n  ShareAltOutlined,\n  SmileOutlined,\n} from '@ant-design/icons';\nimport { Badge, Button, Space } from 'antd';\nconst renderTitle = (icon, title) => (\n  <Space align=\"start\">\n    {icon}\n    <span>{title}</span>\n  </Space>\n);\nconst defaultConversationsItems = [\n  {\n    key: '0',\n    label: 'What is Ant Design X?',\n  },\n];\nconst useStyle = createStyles(({ token, css }) => {\n  return {\n    layout: css`\n      width: 100%;\n      min-width: 1000px;\n      height: 722px;\n      border-radius: ${token.borderRadius}px;\n      display: flex;\n      background: ${token.colorBgContainer};\n      font-family: AlibabaPuHuiTi, ${token.fontFamily}, sans-serif;\n\n      .ant-prompts {\n        color: ${token.colorText};\n      }\n    `,\n    menu: css`\n      background: ${token.colorBgLayout}80;\n      width: 280px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    `,\n    conversations: css`\n      padding: 0 12px;\n      flex: 1;\n      overflow-y: auto;\n    `,\n    chat: css`\n      height: 100%;\n      width: 100%;\n      max-width: 700px;\n      margin: 0 auto;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      padding: ${token.paddingLG}px;\n      gap: 16px;\n    `,\n    messages: css`\n      flex: 1;\n    `,\n    placeholder: css`\n      padding-top: 32px;\n    `,\n    sender: css`\n      box-shadow: ${token.boxShadow};\n    `,\n    logo: css`\n      display: flex;\n      height: 72px;\n      align-items: center;\n      justify-content: start;\n      padding: 0 24px;\n      box-sizing: border-box;\n\n      img {\n        width: 24px;\n        height: 24px;\n        display: inline-block;\n      }\n\n      span {\n        display: inline-block;\n        margin: 0 8px;\n        font-weight: bold;\n        color: ${token.colorText};\n        font-size: 16px;\n      }\n    `,\n    addBtn: css`\n      background: #1677ff0f;\n      border: 1px solid #1677ff34;\n      width: calc(100% - 24px);\n      margin: 0 12px 24px 12px;\n    `,\n  };\n});\nconst placeholderPromptsItems = [\n  {\n    key: '1',\n    label: renderTitle(\n      <FireOutlined\n        style={{\n          color: '#FF4D4F',\n        }}\n      />,\n      'Hot Topics',\n    ),\n    description: 'What are you interested in?',\n    children: [\n      {\n        key: '1-1',\n        description: `What's new in X?`,\n      },\n      {\n        key: '1-2',\n        description: `What's AGI?`,\n      },\n      {\n        key: '1-3',\n        description: `Where is the doc?`,\n      },\n    ],\n  },\n  {\n    key: '2',\n    label: renderTitle(\n      <ReadOutlined\n        style={{\n          color: '#1890FF',\n        }}\n      />,\n      'Design Guide',\n    ),\n    description: 'How to design a good product?',\n    children: [\n      {\n        key: '2-1',\n        icon: <HeartOutlined />,\n        description: `Know the well`,\n      },\n      {\n        key: '2-2',\n        icon: <SmileOutlined />,\n        description: `Set the AI role`,\n      },\n      {\n        key: '2-3',\n        icon: <CommentOutlined />,\n        description: `Express the feeling`,\n      },\n    ],\n  },\n];\nconst senderPromptsItems = [\n  {\n    key: '1',\n    description: 'Hot Topics',\n    icon: (\n      <FireOutlined\n        style={{\n          color: '#FF4D4F',\n        }}\n      />\n    ),\n  },\n  {\n    key: '2',\n    description: 'Design Guide',\n    icon: (\n      <ReadOutlined\n        style={{\n          color: '#1890FF',\n        }}\n      />\n    ),\n  },\n];\nconst roles = {\n  ai: {\n    placement: 'start',\n    typing: {\n      step: 5,\n      interval: 20,\n    },\n    styles: {\n      content: {\n        borderRadius: 16,\n      },\n    },\n  },\n  local: {\n    placement: 'end',\n    variant: 'shadow',\n  },\n};\nconst Independent = () => {\n  // ==================== Style ====================\n  const { styles } = useStyle();\n\n  // ==================== State ====================\n  const [headerOpen, setHeaderOpen] = React.useState(false);\n  const [content, setContent] = React.useState('');\n  const [conversationsItems, setConversationsItems] = React.useState(defaultConversationsItems);\n  const [activeKey, setActiveKey] = React.useState(defaultConversationsItems[0].key);\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\n\n  // ==================== Runtime ====================\n  const [agent] = useXAgent({\n    request: async ({ message }, { onSuccess }) => {\n      onSuccess(`Mock success return. You said: ${message}`);\n    },\n  });\n  const { onRequest, messages, setMessages } = useXChat({\n    agent,\n  });\n  useEffect(() => {\n    if (activeKey !== undefined) {\n      setMessages([]);\n    }\n  }, [activeKey]);\n\n  // ==================== Event ====================\n  const onSubmit = (nextContent) => {\n    if (!nextContent) return;\n    onRequest(nextContent);\n    setContent('');\n  };\n  const onPromptsItemClick = (info) => {\n    onRequest(info.data.description);\n  };\n  const onAddConversation = () => {\n    setConversationsItems([\n      ...conversationsItems,\n      {\n        key: `${conversationsItems.length}`,\n        label: `New Conversation ${conversationsItems.length}`,\n      },\n    ]);\n    setActiveKey(`${conversationsItems.length}`);\n  };\n  const onConversationClick = (key) => {\n    setActiveKey(key);\n  };\n  const handleFileChange = (info) => setAttachedFiles(info.fileList);\n\n  // ==================== Nodes ====================\n  const placeholderNode = (\n    <Space direction=\"vertical\" size={16} className={styles.placeholder}>\n      <Welcome\n        variant=\"borderless\"\n        icon=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*s5sNRo5LjfQAAAAAAAAAAAAADgCCAQ/fmt.webp\"\n        title=\"Hello, I'm Ant Design X\"\n        description=\"Base on Ant Design, AGI product interface solution, create a better intelligent vision~\"\n        extra={\n          <Space>\n            <Button icon={<ShareAltOutlined />} />\n            <Button icon={<EllipsisOutlined />} />\n          </Space>\n        }\n      />\n      <Prompts\n        title=\"Do you want?\"\n        items={placeholderPromptsItems}\n        styles={{\n          list: {\n            width: '100%',\n          },\n          item: {\n            flex: 1,\n          },\n        }}\n        onItemClick={onPromptsItemClick}\n      />\n    </Space>\n  );\n  const items = messages.map(({ id, message, status }) => ({\n    key: id,\n    loading: status === 'loading',\n    role: status === 'local' ? 'local' : 'ai',\n    content: message,\n  }));\n  const attachmentsNode = (\n    <Badge dot={attachedFiles.length > 0 && !headerOpen}>\n      <Button type=\"text\" icon={<PaperClipOutlined />} onClick={() => setHeaderOpen(!headerOpen)} />\n    </Badge>\n  );\n  const senderHeader = (\n    <Sender.Header\n      title=\"Attachments\"\n      open={headerOpen}\n      onOpenChange={setHeaderOpen}\n      styles={{\n        content: {\n          padding: 0,\n        },\n      }}\n    >\n      <Attachments\n        beforeUpload={() => false}\n        items={attachedFiles}\n        onChange={handleFileChange}\n        placeholder={(type) =>\n          type === 'drop'\n            ? {\n                title: 'Drop file here',\n              }\n            : {\n                icon: <CloudUploadOutlined />,\n                title: 'Upload files',\n                description: 'Click or drag files to this area to upload',\n              }\n        }\n      />\n    </Sender.Header>\n  );\n  const logoNode = (\n    <div className={styles.logo}>\n      <img\n        src=\"https://mdn.alipayobjects.com/huamei_iwk9zp/afts/img/A*eco6RrQhxbMAAAAAAAAAAAAADgCCAQ/original\"\n        draggable={false}\n        alt=\"logo\"\n      />\n      <span>Ant Design X</span>\n    </div>\n  );\n\n  // ==================== Render =================\n  return (\n    <div className={styles.layout}>\n      <div className={styles.menu}>\n        {/* \u{1F31F} Logo */}\n        {logoNode}\n        {/* \u{1F31F} \u6DFB\u52A0\u4F1A\u8BDD */}\n        <Button\n          onClick={onAddConversation}\n          type=\"link\"\n          className={styles.addBtn}\n          icon={<PlusOutlined />}\n        >\n          New Conversation\n        </Button>\n        {/* \u{1F31F} \u4F1A\u8BDD\u7BA1\u7406 */}\n        <Conversations\n          items={conversationsItems}\n          className={styles.conversations}\n          activeKey={activeKey}\n          onActiveChange={onConversationClick}\n        />\n      </div>\n      <div className={styles.chat}>\n        {/* \u{1F31F} \u6D88\u606F\u5217\u8868 */}\n        <Bubble.List\n          items={\n            items.length > 0\n              ? items\n              : [\n                  {\n                    content: placeholderNode,\n                    variant: 'borderless',\n                  },\n                ]\n          }\n          roles={roles}\n          className={styles.messages}\n        />\n        {/* \u{1F31F} \u63D0\u793A\u8BCD */}\n        <Prompts items={senderPromptsItems} onItemClick={onPromptsItemClick} />\n        {/* \u{1F31F} \u8F93\u5165\u6846 */}\n        <Sender\n          value={content}\n          header={senderHeader}\n          onSubmit={onSubmit}\n          onChange={setContent}\n          prefix={attachmentsNode}\n          loading={agent.isRequesting()}\n          className={styles.sender}\n        />\n      </div>\n    </div>\n  );\n};\nexport default Independent;\n"}})});}var c=function(){return(0,i.jsx)(o.DumiPage,{children:(0,i.jsx)(r.Suspense,{fallback:(0,i.jsx)(a.default,{}),children:(0,i.jsx)(l,{})})});};}}]);
//# sourceMappingURL=9316583a-async.42878591.js.map